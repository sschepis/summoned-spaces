(module
 (type $0 (func (param i32) (result i32)))
 (type $1 (func (result i32)))
 (type $2 (func (param i32 i32) (result i32)))
 (type $3 (func (param i32)))
 (type $4 (func (param i32 i32 i32) (result i32)))
 (type $5 (func (param i32 i32)))
 (type $6 (func (param i32 i32 i32)))
 (type $7 (func))
 (type $8 (func (param i32) (result f64)))
 (type $9 (func (param i32 i32) (result f64)))
 (type $10 (func (param i32 i32 i32 i32) (result i32)))
 (type $11 (func (param f64) (result f64)))
 (type $12 (func (param i64) (result i32)))
 (type $13 (func (param i32 f64)))
 (type $14 (func (param i32 i32 f64) (result i32)))
 (type $15 (func (param i64 i64 i64) (result i64)))
 (type $16 (func (param f64 f64) (result i32)))
 (type $17 (func (param f64) (result i32)))
 (type $18 (func (param f64 f64) (result f64)))
 (type $19 (func (param i64 i64) (result i64)))
 (type $20 (func (param i32 i32 f64)))
 (type $21 (func (param i32 f64) (result f64)))
 (type $22 (func (param i32 f64) (result i32)))
 (type $23 (func (result f64)))
 (type $24 (func (param i32 i64 i32)))
 (type $25 (func (param i64) (result i64)))
 (type $26 (func (param i32 f64 f64 f64) (result i32)))
 (type $27 (func (param i32 i32 i32 i32)))
 (type $28 (func (param f64 i32) (result i32)))
 (type $29 (func (param f64 f64 f64) (result f64)))
 (type $30 (func (param i32 i32) (result i64)))
 (type $31 (func (param f64 f64 f64 f64) (result i32)))
 (type $32 (func (param i32 i32 i32 i32 i32 f64 f64) (result i32)))
 (type $33 (func (param i32 i32 i32 f64) (result i32)))
 (type $34 (func (param i32 i64 i64) (result i64)))
 (type $35 (func (param i32 f64 f64) (result i32)))
 (type $36 (func (param i32 i32 i64)))
 (type $37 (func (param i64 i64 i32 i64 i32) (result i32)))
 (type $38 (func (param f64 f64 f64) (result i32)))
 (type $39 (func (param i32 i64 i32) (result i32)))
 (type $40 (func (param i32 i64)))
 (type $41 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $42 (func (param i64 i64) (result i32)))
 (type $43 (func (param i32 i64) (result i64)))
 (type $44 (func (param i32 i64) (result i32)))
 (type $45 (func (param i32 f64 i32) (result i32)))
 (type $46 (func (param i32 f64 f64)))
 (type $47 (func (param i32 i32 i32) (result f64)))
 (type $48 (func (param i32 f64 f64 f64 f64)))
 (type $49 (func (param i32 f64 f64 f64) (result f64)))
 (type $50 (func (param i32 f64 f64) (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 88312))
 (global $assembly/runtime/instructions/instructionHandlers (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $assembly/core/math-cache/primeCache (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/math/rempio2_y1 (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y0 (mut f64) (f64.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $assembly/identity/resolang-processor/globalResoLangProcessor (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $assembly/identity/types/IdGenerator.counter (mut i64) (i64.const 0))
 (global $assembly/core/math-performance/MathPerformanceStats.modularExponentiations (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $assembly/resolang/currentNode (mut i32) (i32.const 0))
 (global $~lib/math/res128_hi (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $assembly/identity/prime-mapping/globalPrimeMapper (mut i32) (i32.const 0))
 (global $assembly/core/math-performance/globalMathProfiler (mut i32) (i32.const 0))
 (global $assembly/core/object-pool/MathObjectPools.extendedGCDPool (mut i32) (i32.const 0))
 (global $assembly/entropy-viz/globalTracker (mut i32) (i32.const 0))
 (global $assembly/entropy-viz/globalSampler (mut i32) (i32.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $assembly/runtime/instructions/system/tick/tick (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/random/random (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/output/output (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/system/halt/halt (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/scale/scale (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/mix/mix (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/load/load (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/symbolic/add/add (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/resonance/resonance (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/factorize/factorize (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/evolve/evolve (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/resonance/entropy/entropy (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/reconstruct/reconstruct (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/observe/observe (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/measure/measure (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/quantum/collapse/collapse (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/entangle/entangle (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/decohere/decohere (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/advphase/advphase (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/phase/setphase/setphase (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/ifcoh/ifcoh (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/if/ifInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/goto/gotoInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endwhile/endwhile (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endloop/endloop (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/endif/endif (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/else/elseInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/continue/continueInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/call/call (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/flow/break/breakInstruction (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/waitcoh/waitcoh (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/threshold/threshold (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/coherenceall/coherenceall (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/coherence/coherence/coherence (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/resonance/Factorize (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/resonance/Resonance (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatReceive (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatSend (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/quaternionic/QuatCreate (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisTransform (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/multiBasis/BasisCreate (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloReconstruct (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloFragment (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloRetrieve (mut i32) (i32.const 0))
 (global $assembly/runtime/instructions/advanced/holographic/HoloStore (mut i32) (i32.const 0))
 (global $assembly/identity/kyc-provider/KYCProviderRegistry.providers (mut i32) (i32.const 0))
 (global $assembly/identity/audit-trail/globalAuditTrail (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/util/math/log_tail (mut f64) (f64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $assembly/runtime/processor/globalResoLangProcessor (mut i32) (i32.const 0))
 (global $assembly/identity/authentication/globalAuthManager (mut i32) (i32.const 0))
 (global $assembly/identity/permission-inheritance/globalPermissionInheritance (mut i32) (i32.const 0))
 (global $assembly/identity/identity-recovery/globalRecoveryManager (mut i32) (i32.const 0))
 (global $assembly/identity/ownership-transfer/globalTransferManager (mut i32) (i32.const 0))
 (global $assembly/identity/prime-mapping/PrimeGenerator.primeCache (mut i32) (i32.const 0))
 (global $assembly/core/math-performance/globalMathMemoryTracker (mut i32) (i32.const 0))
 (global $assembly/core/object-pool/MathObjectPools.bigIntPool (mut i32) (i32.const 0))
 (global $assembly/core/object-pool/MathObjectPools.i32ArrayPool (mut i32) (i32.const 0))
 (global $assembly/core/object-pool/MathObjectPools.u64ArrayPool (mut i32) (i32.const 0))
 (global $assembly/core/object-pool/MathObjectPools.complexPool (mut i32) (i32.const 0))
 (global $assembly/core/validation/ValidationMetadata.metadata (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 54528))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SCHEDULING i32 (i32.const 14))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.BIN_PACKING i32 (i32.const 13))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SET_COVER i32 (i32.const 12))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.STEINER_TREE i32 (i32.const 11))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.INTEGER_PROGRAMMING i32 (i32.const 10))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.PARTITION i32 (i32.const 9))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.INDEPENDENT_SET i32 (i32.const 8))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.CLIQUE i32 (i32.const 7))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SUBSET_SUM i32 (i32.const 6))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.TSP i32 (i32.const 5))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.KNAPSACK i32 (i32.const 4))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.GRAPH_COLORING i32 (i32.const 3))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.HAMILTONIAN_PATH i32 (i32.const 2))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.VERTEX_COVER i32 (i32.const 1))
 (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SAT i32 (i32.const 0))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.HALT i32 (i32.const 8))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.CONTINUE i32 (i32.const 7))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.BREAK i32 (i32.const 6))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.RETURN i32 (i32.const 5))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.CALL i32 (i32.const 4))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.JUMP i32 (i32.const 3))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.LOOP i32 (i32.const 2))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.CONDITIONAL i32 (i32.const 1))
 (global $assembly/runtime/execution/controlFlow/ControlFlowType.SEQUENTIAL i32 (i32.const 0))
 (global $assembly/runtime/state/primeState/BasisType.MODULAR i32 (i32.const 4))
 (global $assembly/runtime/state/primeState/BasisType.POLYNOMIAL i32 (i32.const 3))
 (global $assembly/runtime/state/primeState/BasisType.WAVELET i32 (i32.const 2))
 (global $assembly/runtime/state/primeState/BasisType.FOURIER i32 (i32.const 1))
 (global $assembly/runtime/state/primeState/BasisType.PRIME i32 (i32.const 0))
 (global $assembly/identity/authentication/SessionStatus.SUSPENDED i32 (i32.const 3))
 (global $assembly/identity/authentication/SessionStatus.REVOKED i32 (i32.const 2))
 (global $assembly/identity/authentication/SessionStatus.EXPIRED i32 (i32.const 1))
 (global $assembly/identity/authentication/SessionStatus.ACTIVE i32 (i32.const 0))
 (global $assembly/identity/authentication/AuthMethod.MULTI_FACTOR i32 (i32.const 4))
 (global $assembly/identity/authentication/AuthMethod.QUANTUM_SIGNATURE i32 (i32.const 3))
 (global $assembly/identity/authentication/AuthMethod.HARDWARE_KEY i32 (i32.const 2))
 (global $assembly/identity/authentication/AuthMethod.BIOMETRIC i32 (i32.const 1))
 (global $assembly/identity/authentication/AuthMethod.PASSWORD i32 (i32.const 0))
 (global $assembly/identity/permission-inheritance/InheritanceMode.OVERRIDE i32 (i32.const 3))
 (global $assembly/identity/permission-inheritance/InheritanceMode.RESTRICTIVE i32 (i32.const 2))
 (global $assembly/identity/permission-inheritance/InheritanceMode.ADDITIVE i32 (i32.const 1))
 (global $assembly/identity/permission-inheritance/InheritanceMode.NONE i32 (i32.const 0))
 (global $assembly/identity/domain-registry/DomainStatus.RESERVED i32 (i32.const 3))
 (global $assembly/identity/domain-registry/DomainStatus.EXPIRED i32 (i32.const 2))
 (global $assembly/identity/domain-registry/DomainStatus.SUSPENDED i32 (i32.const 1))
 (global $assembly/identity/domain-registry/DomainStatus.ACTIVE i32 (i32.const 0))
 (global $assembly/identity/identity-recovery/RecoveryStatus.EXPIRED i32 (i32.const 3))
 (global $assembly/identity/identity-recovery/RecoveryStatus.CANCELLED i32 (i32.const 2))
 (global $assembly/identity/identity-recovery/RecoveryStatus.EXECUTED i32 (i32.const 1))
 (global $assembly/identity/identity-recovery/RecoveryStatus.PENDING i32 (i32.const 0))
 (global $assembly/identity/ownership-transfer/TransferType.OBJECT i32 (i32.const 1))
 (global $assembly/identity/ownership-transfer/TransferType.DOMAIN i32 (i32.const 0))
 (global $assembly/identity/ownership-transfer/TransferStatus.COMPLETED i32 (i32.const 5))
 (global $assembly/identity/ownership-transfer/TransferStatus.EXPIRED i32 (i32.const 4))
 (global $assembly/identity/ownership-transfer/TransferStatus.CANCELLED i32 (i32.const 3))
 (global $assembly/identity/ownership-transfer/TransferStatus.REJECTED i32 (i32.const 2))
 (global $assembly/identity/ownership-transfer/TransferStatus.APPROVED i32 (i32.const 1))
 (global $assembly/identity/ownership-transfer/TransferStatus.PENDING i32 (i32.const 0))
 (global $assembly/identity/audit-trail/AuditSeverity.CRITICAL i32 (i32.const 3))
 (global $assembly/identity/audit-trail/AuditSeverity.ERROR i32 (i32.const 2))
 (global $assembly/identity/audit-trail/AuditSeverity.WARNING i32 (i32.const 1))
 (global $assembly/identity/audit-trail/AuditSeverity.INFO i32 (i32.const 0))
 (global $assembly/identity/audit-trail/AuditEventType.SYNC_FAILED i32 (i32.const 26))
 (global $assembly/identity/audit-trail/AuditEventType.SYNC_COMPLETED i32 (i32.const 25))
 (global $assembly/identity/audit-trail/AuditEventType.SYNC_STARTED i32 (i32.const 24))
 (global $assembly/identity/audit-trail/AuditEventType.NODE_DISCONNECTED i32 (i32.const 23))
 (global $assembly/identity/audit-trail/AuditEventType.NODE_CONNECTED i32 (i32.const 22))
 (global $assembly/identity/audit-trail/AuditEventType.AUTH_SESSION_EXPIRED i32 (i32.const 21))
 (global $assembly/identity/audit-trail/AuditEventType.AUTH_FAILED i32 (i32.const 20))
 (global $assembly/identity/audit-trail/AuditEventType.AUTH_LOGOUT i32 (i32.const 19))
 (global $assembly/identity/audit-trail/AuditEventType.AUTH_LOGIN i32 (i32.const 18))
 (global $assembly/identity/audit-trail/AuditEventType.ROLE_REMOVED i32 (i32.const 17))
 (global $assembly/identity/audit-trail/AuditEventType.ROLE_ASSIGNED i32 (i32.const 16))
 (global $assembly/identity/audit-trail/AuditEventType.PERMISSION_REVOKED i32 (i32.const 15))
 (global $assembly/identity/audit-trail/AuditEventType.PERMISSION_GRANTED i32 (i32.const 14))
 (global $assembly/identity/audit-trail/AuditEventType.OBJECT_DESTROYED i32 (i32.const 13))
 (global $assembly/identity/audit-trail/AuditEventType.OBJECT_TRANSFERRED i32 (i32.const 12))
 (global $assembly/identity/audit-trail/AuditEventType.OBJECT_UPDATED i32 (i32.const 11))
 (global $assembly/identity/audit-trail/AuditEventType.OBJECT_CREATED i32 (i32.const 10))
 (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_OWNERSHIP_TRANSFERRED i32 (i32.const 9))
 (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_MEMBER_REMOVED i32 (i32.const 8))
 (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_MEMBER_ADDED i32 (i32.const 7))
 (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_UPDATED i32 (i32.const 6))
 (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_CREATED i32 (i32.const 5))
 (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_REACTIVATED i32 (i32.const 4))
 (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_DEACTIVATED i32 (i32.const 3))
 (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_KYC_CHANGED i32 (i32.const 2))
 (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_UPDATED i32 (i32.const 1))
 (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_CREATED i32 (i32.const 0))
 (global $assembly/identity/interfaces/RecoveryMethod.HARDWARE_KEY i32 (i32.const 3))
 (global $assembly/identity/interfaces/RecoveryMethod.TIME_LOCKED i32 (i32.const 2))
 (global $assembly/identity/interfaces/RecoveryMethod.SOCIAL_RECOVERY i32 (i32.const 1))
 (global $assembly/identity/interfaces/RecoveryMethod.MULTI_SIGNATURE i32 (i32.const 0))
 (global $assembly/identity/interfaces/AuditResult.PARTIAL i32 (i32.const 2))
 (global $assembly/identity/interfaces/AuditResult.FAILURE i32 (i32.const 1))
 (global $assembly/identity/interfaces/AuditResult.SUCCESS i32 (i32.const 0))
 (global $assembly/identity/interfaces/AuditAction.REACTIVATE i32 (i32.const 11))
 (global $assembly/identity/interfaces/AuditAction.DEACTIVATE i32 (i32.const 10))
 (global $assembly/identity/interfaces/AuditAction.AUTHENTICATE i32 (i32.const 9))
 (global $assembly/identity/interfaces/AuditAction.VERIFY_KYC i32 (i32.const 8))
 (global $assembly/identity/interfaces/AuditAction.REMOVE_MEMBER i32 (i32.const 7))
 (global $assembly/identity/interfaces/AuditAction.ADD_MEMBER i32 (i32.const 6))
 (global $assembly/identity/interfaces/AuditAction.REVOKE_PERMISSION i32 (i32.const 5))
 (global $assembly/identity/interfaces/AuditAction.GRANT_PERMISSION i32 (i32.const 4))
 (global $assembly/identity/interfaces/AuditAction.TRANSFER i32 (i32.const 3))
 (global $assembly/identity/interfaces/AuditAction.DELETE i32 (i32.const 2))
 (global $assembly/identity/interfaces/AuditAction.UPDATE i32 (i32.const 1))
 (global $assembly/identity/interfaces/AuditAction.CREATE i32 (i32.const 0))
 (global $assembly/identity/interfaces/KYCVerificationStatus.EXPIRED i32 (i32.const 4))
 (global $assembly/identity/interfaces/KYCVerificationStatus.FAILED i32 (i32.const 3))
 (global $assembly/identity/interfaces/KYCVerificationStatus.COMPLETED i32 (i32.const 2))
 (global $assembly/identity/interfaces/KYCVerificationStatus.IN_PROGRESS i32 (i32.const 1))
 (global $assembly/identity/interfaces/KYCVerificationStatus.PENDING i32 (i32.const 0))
 (global $assembly/identity/interfaces/PermissionScope.OBJECT i32 (i32.const 2))
 (global $assembly/identity/interfaces/PermissionScope.DOMAIN i32 (i32.const 1))
 (global $assembly/identity/interfaces/PermissionScope.GLOBAL i32 (i32.const 0))
 (global $assembly/identity/interfaces/KYCLevel.FULL i32 (i32.const 3))
 (global $assembly/identity/interfaces/KYCLevel.ENHANCED i32 (i32.const 2))
 (global $assembly/identity/interfaces/KYCLevel.BASIC i32 (i32.const 1))
 (global $assembly/identity/interfaces/KYCLevel.NONE i32 (i32.const 0))
 (global $assembly/identity/interfaces/IdentityType.SYSTEM i32 (i32.const 2))
 (global $assembly/identity/interfaces/IdentityType.MANAGED i32 (i32.const 1))
 (global $assembly/identity/interfaces/IdentityType.SELF_SOVEREIGN i32 (i32.const 0))
 (global $assembly/core/math-miller-rabin/MILLER_RABIN_WITNESSES_64 i32 (i32.const 4944))
 (global $assembly/core/math-miller-rabin/MILLER_RABIN_WITNESSES_32 i32 (i32.const 4768))
 (global $assembly/core/math-cache/SMALL_PRIMES i32 (i32.const 4192))
 (global $assembly/core/constants/MERSENNE_PRIME_31 i64 (i64.const 2147483647))
 (global $assembly/core/constants/TWO_PI f64 (f64.const 6.283185307179586))
 (global $assembly/core/constants/E f64 (f64.const 2.718281828459045))
 (global $assembly/core/constants/PHI f64 (f64.const 1.618033988749895))
 (global $assembly/quantum/prime-state/DELTA_S f64 (f64.const 2.718281828459045))
 (global $assembly/resolang/PI f64 (f64.const 3.141592653589793))
 (memory $0 3 16)
 (data $0 (i32.const 1036) "<")
 (data $0.1 (i32.const 1048) "\01\00\00\00 \00\00\00g\e6\tj\85\aeg\bbr\f3n<:\f5O\a5\7fR\0eQ\8ch\05\9b\ab\d9\83\1f\19\cd\e0[")
 (data $1 (i32.const 1100) ",")
 (data $1.1 (i32.const 1112) "\0e\00\00\00\10\00\00\00 \04\00\00 \04\00\00 \00\00\00\08")
 (data $2 (i32.const 1148) "\1c\01")
 (data $2.1 (i32.const 1160) "\01\00\00\00\00\01\00\00\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\r8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
 (data $3 (i32.const 1436) ",")
 (data $3.1 (i32.const 1448) "\0e\00\00\00\10\00\00\00\90\04\00\00\90\04\00\00\00\01\00\00@")
 (data $4 (i32.const 1484) "\1c")
 (data $4.1 (i32.const 1496) "\01")
 (data $5 (i32.const 1516) ",")
 (data $5.1 (i32.const 1528) "\12\00\00\00\10\00\00\00\e0\05\00\00\e0\05")
 (data $6 (i32.const 1564) "<")
 (data $6.1 (i32.const 1576) "\02\00\00\00,\00\00\00S\00y\00s\00t\00e\00m\00 \00n\00o\00t\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $7 (i32.const 1628) "L")
 (data $7.1 (i32.const 1640) "\02\00\00\004\00\00\00S\00y\00s\00t\00e\00m\00 \00a\00l\00r\00e\00a\00d\00y\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00e\00d")
 (data $8 (i32.const 1708) ",")
 (data $8.1 (i32.const 1720) "\02\00\00\00\1a\00\00\00O\00u\00t\00 \00o\00f\00 \00m\00e\00m\00o\00r\00y")
 (data $9 (i32.const 1756) "<")
 (data $9.1 (i32.const 1768) "\02\00\00\00&\00\00\00O\00p\00e\00r\00a\00t\00i\00o\00n\00 \00t\00i\00m\00e\00d\00 \00o\00u\00t")
 (data $10 (i32.const 1820) "l")
 (data $10.1 (i32.const 1832) "\02\00\00\00P\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00e\00s\00t\00a\00b\00l\00i\00s\00h\00 \00c\00o\00n\00n\00e\00c\00t\00i\00o\00n\00 \00t\00o\00 \00{\00h\00o\00s\00t\00}")
 (data $11 (i32.const 1932) "L")
 (data $11.1 (i32.const 1944) "\02\00\00\008\00\00\00P\00e\00e\00r\00 \00{\00p\00e\00e\00r\00I\00d\00}\00 \00i\00s\00 \00u\00n\00r\00e\00a\00c\00h\00a\00b\00l\00e")
 (data $12 (i32.const 2012) "\8c")
 (data $12.1 (i32.const 2024) "\02\00\00\00x\00\00\00P\00r\00o\00t\00o\00c\00o\00l\00 \00v\00e\00r\00s\00i\00o\00n\00 \00m\00i\00s\00m\00a\00t\00c\00h\00:\00 \00e\00x\00p\00e\00c\00t\00e\00d\00 \00{\00e\00x\00p\00e\00c\00t\00e\00d\00}\00,\00 \00g\00o\00t\00 \00{\00a\00c\00t\00u\00a\00l\00}")
 (data $13 (i32.const 2156) "L")
 (data $13.1 (i32.const 2168) "\02\00\00\006\00\00\00F\00i\00e\00l\00d\00 \00\'\00{\00f\00i\00e\00l\00d\00}\00\'\00 \00i\00s\00 \00r\00e\00q\00u\00i\00r\00e\00d")
 (data $14 (i32.const 2236) "l")
 (data $14.1 (i32.const 2248) "\02\00\00\00X\00\00\00F\00i\00e\00l\00d\00 \00\'\00{\00f\00i\00e\00l\00d\00}\00\'\00 \00h\00a\00s\00 \00i\00n\00v\00a\00l\00i\00d\00 \00f\00o\00r\00m\00a\00t\00:\00 \00{\00f\00o\00r\00m\00a\00t\00}")
 (data $15 (i32.const 2348) "l")
 (data $15.1 (i32.const 2360) "\02\00\00\00X\00\00\00V\00a\00l\00u\00e\00 \00{\00v\00a\00l\00u\00e\00}\00 \00i\00s\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00 \00[\00{\00m\00i\00n\00}\00,\00 \00{\00m\00a\00x\00}\00]")
 (data $16 (i32.const 2460) "l")
 (data $16.1 (i32.const 2472) "\02\00\00\00R\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00s\00i\00g\00n\00a\00t\00u\00r\00e\00 \00f\00o\00r\00 \00m\00e\00s\00s\00a\00g\00e\00 \00{\00m\00e\00s\00s\00a\00g\00e\00I\00d\00}")
 (data $17 (i32.const 2572) "\\")
 (data $17.1 (i32.const 2584) "\02\00\00\00H\00\00\00C\00r\00y\00p\00t\00o\00g\00r\00a\00p\00h\00i\00c\00 \00k\00e\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00:\00 \00{\00k\00e\00y\00I\00d\00}")
 (data $18 (i32.const 2668) "L")
 (data $18.1 (i32.const 2680) "\02\00\00\006\00\00\00E\00n\00c\00r\00y\00p\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00{\00r\00e\00a\00s\00o\00n\00}")
 (data $19 (i32.const 2748) "<")
 (data $19.1 (i32.const 2760) "\02\00\00\00(\00\00\00K\00e\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00:\00 \00{\00k\00e\00y\00}")
 (data $20 (i32.const 2812) "L")
 (data $20.1 (i32.const 2824) "\02\00\00\004\00\00\00C\00o\00r\00r\00u\00p\00t\00 \00d\00a\00t\00a\00 \00a\00t\00 \00k\00e\00y\00:\00 \00{\00k\00e\00y\00}")
 (data $21 (i32.const 2892) "<")
 (data $21.1 (i32.const 2904) "\02\00\00\00,\00\00\00S\00t\00o\00r\00a\00g\00e\00 \00q\00u\00o\00t\00a\00 \00e\00x\00c\00e\00e\00d\00e\00d")
 (data $22 (i32.const 2956) "<")
 (data $22.1 (i32.const 2968) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data $23 (i32.const 3020) "<")
 (data $23.1 (i32.const 3032) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data $26 (i32.const 3148) "<")
 (data $26.1 (i32.const 3160) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data $27 (i32.const 3212) ",")
 (data $27.1 (i32.const 3224) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data $29 (i32.const 3292) "<")
 (data $29.1 (i32.const 3304) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data $30 (i32.const 3356) ",")
 (data $30.1 (i32.const 3368) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data $31 (i32.const 3404) "<")
 (data $31.1 (i32.const 3416) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data $32 (i32.const 3468) "\bc\02")
 (data $32.1 (i32.const 3480) "\01\00\00\00\a0\02\00\00\02\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\0b\00\00\00\r\00\00\00\11\00\00\00\13\00\00\00\17\00\00\00\1d\00\00\00\1f\00\00\00%\00\00\00)\00\00\00+\00\00\00/\00\00\005\00\00\00;\00\00\00=\00\00\00C\00\00\00G\00\00\00I\00\00\00O\00\00\00S\00\00\00Y\00\00\00a\00\00\00e\00\00\00g\00\00\00k\00\00\00m\00\00\00q\00\00\00\7f\00\00\00\83\00\00\00\89\00\00\00\8b\00\00\00\95\00\00\00\97\00\00\00\9d\00\00\00\a3\00\00\00\a7\00\00\00\ad\00\00\00\b3\00\00\00\b5\00\00\00\bf\00\00\00\c1\00\00\00\c5\00\00\00\c7\00\00\00\d3\00\00\00\df\00\00\00\e3\00\00\00\e5\00\00\00\e9\00\00\00\ef\00\00\00\f1\00\00\00\fb\00\00\00\01\01\00\00\07\01\00\00\r\01\00\00\0f\01\00\00\15\01\00\00\19\01\00\00\1b\01\00\00%\01\00\003\01\00\007\01\00\009\01\00\00=\01\00\00K\01\00\00Q\01\00\00[\01\00\00]\01\00\00a\01\00\00g\01\00\00o\01\00\00u\01\00\00{\01\00\00\7f\01\00\00\85\01\00\00\8d\01\00\00\91\01\00\00\99\01\00\00\a3\01\00\00\a5\01\00\00\af\01\00\00\b1\01\00\00\b7\01\00\00\bb\01\00\00\c1\01\00\00\c9\01\00\00\cd\01\00\00\cf\01\00\00\d3\01\00\00\df\01\00\00\e7\01\00\00\eb\01\00\00\f3\01\00\00\f7\01\00\00\fd\01\00\00\t\02\00\00\0b\02\00\00\1d\02\00\00#\02\00\00-\02\00\003\02\00\009\02\00\00;\02\00\00A\02\00\00K\02\00\00Q\02\00\00W\02\00\00Y\02\00\00_\02\00\00e\02\00\00i\02\00\00k\02\00\00w\02\00\00\81\02\00\00\83\02\00\00\87\02\00\00\8d\02\00\00\93\02\00\00\95\02\00\00\a1\02\00\00\a5\02\00\00\ab\02\00\00\b3\02\00\00\bd\02\00\00\c5\02\00\00\cf\02\00\00\d7\02\00\00\dd\02\00\00\e3\02\00\00\e7\02\00\00\ef\02\00\00\f5\02\00\00\f9\02\00\00\01\03\00\00\05\03\00\00\13\03\00\00\1d\03\00\00)\03\00\00+\03\00\005\03\00\007\03\00\00;\03\00\00=\03\00\00G\03\00\00U\03\00\00Y\03\00\00[\03\00\00_\03\00\00m\03\00\00q\03\00\00s\03\00\00w\03\00\00\8b\03\00\00\8f\03\00\00\97\03\00\00\a1\03\00\00\a9\03\00\00\ad\03\00\00\b3\03\00\00\b9\03\00\00\c7\03\00\00\cb\03\00\00\d1\03\00\00\d7\03\00\00\df\03\00\00\e5\03")
 (data $33 (i32.const 4172) ",")
 (data $33.1 (i32.const 4184) "\0e\00\00\00\10\00\00\00\a0\r\00\00\a0\r\00\00\a0\02\00\00\a8")
 (data $34 (i32.const 4220) ",")
 (data $34.1 (i32.const 4232) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $35 (i32.const 4268) "\1c")
 (data $35.1 (i32.const 4280) "\01")
 (data $36 (i32.const 4300) "\1c")
 (data $36.1 (i32.const 4312) "\01")
 (data $37 (i32.const 4332) "\1c")
 (data $37.1 (i32.const 4344) "1\00\00\00\08\00\00\00\01")
 (data $38 (i32.const 4364) "\1c")
 (data $38.1 (i32.const 4376) "\01")
 (data $39 (i32.const 4396) "\1c")
 (data $39.1 (i32.const 4408) "2\00\00\00\08\00\00\00\02")
 (data $40 (i32.const 4428) "\1c")
 (data $40.1 (i32.const 4440) "\01")
 (data $41 (i32.const 4460) "\1c")
 (data $41.1 (i32.const 4472) "\01")
 (data $42 (i32.const 4492) "\1c")
 (data $42.1 (i32.const 4504) "3\00\00\00\08\00\00\00\03")
 (data $43 (i32.const 4524) "\1c")
 (data $43.1 (i32.const 4536) "\01")
 (data $44 (i32.const 4556) "\1c")
 (data $44.1 (i32.const 4568) "\01")
 (data $45 (i32.const 4588) "\1c")
 (data $45.1 (i32.const 4600) "4\00\00\00\08\00\00\00\04")
 (data $46 (i32.const 4620) "\1c")
 (data $46.1 (i32.const 4632) "\01")
 (data $47 (i32.const 4652) "\1c")
 (data $47.1 (i32.const 4664) "\01")
 (data $48 (i32.const 4684) "\1c")
 (data $48.1 (i32.const 4696) "5\00\00\00\08\00\00\00\05")
 (data $49 (i32.const 4716) "\1c")
 (data $49.1 (i32.const 4728) "\01\00\00\00\0c\00\00\00\02\00\00\00\07\00\00\00=")
 (data $50 (i32.const 4748) ",")
 (data $50.1 (i32.const 4760) "\0e\00\00\00\10\00\00\00\80\12\00\00\80\12\00\00\0c\00\00\00\03")
 (data $51 (i32.const 4796) "|")
 (data $51.1 (i32.const 4808) "\01\00\00\00`\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\r\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\13\00\00\00\00\00\00\00\17\00\00\00\00\00\00\00\1d\00\00\00\00\00\00\00\1f\00\00\00\00\00\00\00%")
 (data $52 (i32.const 4924) ",")
 (data $52.1 (i32.const 4936) "\1f\00\00\00\10\00\00\00\d0\12\00\00\d0\12\00\00`\00\00\00\0c")
 (data $53 (i32.const 4972) "\1c\01")
 (data $53.1 (i32.const 4984) "\01\00\00\00\00\01\00\00\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\r8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
 (data $54 (i32.const 5260) ",")
 (data $54.1 (i32.const 5272) "\0e\00\00\00\10\00\00\00\80\13\00\00\80\13\00\00\00\01\00\00@")
 (data $55 (i32.const 5308) "<")
 (data $55.1 (i32.const 5320) "\02\00\00\00\1e\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00c\00r\00e\00a\00t\00e")
 (data $56 (i32.const 5372) "<")
 (data $56.1 (i32.const 5384) "\02\00\00\00\1e\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00u\00p\00d\00a\00t\00e")
 (data $57 (i32.const 5436) "<")
 (data $57.1 (i32.const 5448) "\02\00\00\00\1e\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00d\00e\00l\00e\00t\00e")
 (data $58 (i32.const 5500) ",")
 (data $58.1 (i32.const 5512) "\02\00\00\00\1a\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00v\00i\00e\00w")
 (data $59 (i32.const 5548) "<")
 (data $59.1 (i32.const 5560) "\02\00\00\00&\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00v\00e\00r\00i\00f\00y\00_\00k\00y\00c")
 (data $60 (i32.const 5612) ",")
 (data $60.1 (i32.const 5624) "\02\00\00\00\1a\00\00\00d\00o\00m\00a\00i\00n\00.\00c\00r\00e\00a\00t\00e")
 (data $61 (i32.const 5660) ",")
 (data $61.1 (i32.const 5672) "\02\00\00\00\1a\00\00\00d\00o\00m\00a\00i\00n\00.\00u\00p\00d\00a\00t\00e")
 (data $62 (i32.const 5708) ",")
 (data $62.1 (i32.const 5720) "\02\00\00\00\1a\00\00\00d\00o\00m\00a\00i\00n\00.\00d\00e\00l\00e\00t\00e")
 (data $63 (i32.const 5756) "<")
 (data $63.1 (i32.const 5768) "\02\00\00\00\1e\00\00\00d\00o\00m\00a\00i\00n\00.\00t\00r\00a\00n\00s\00f\00e\00r")
 (data $64 (i32.const 5820) "<")
 (data $64.1 (i32.const 5832) "\02\00\00\00\"\00\00\00d\00o\00m\00a\00i\00n\00.\00a\00d\00d\00_\00m\00e\00m\00b\00e\00r")
 (data $65 (i32.const 5884) "<")
 (data $65.1 (i32.const 5896) "\02\00\00\00(\00\00\00d\00o\00m\00a\00i\00n\00.\00r\00e\00m\00o\00v\00e\00_\00m\00e\00m\00b\00e\00r")
 (data $66 (i32.const 5948) "L")
 (data $66.1 (i32.const 5960) "\02\00\00\00.\00\00\00d\00o\00m\00a\00i\00n\00.\00c\00r\00e\00a\00t\00e\00_\00s\00u\00b\00d\00o\00m\00a\00i\00n")
 (data $67 (i32.const 6028) ",")
 (data $67.1 (i32.const 6040) "\02\00\00\00\1a\00\00\00o\00b\00j\00e\00c\00t\00.\00c\00r\00e\00a\00t\00e")
 (data $68 (i32.const 6076) ",")
 (data $68.1 (i32.const 6088) "\02\00\00\00\1a\00\00\00o\00b\00j\00e\00c\00t\00.\00u\00p\00d\00a\00t\00e")
 (data $69 (i32.const 6124) ",")
 (data $69.1 (i32.const 6136) "\02\00\00\00\1a\00\00\00o\00b\00j\00e\00c\00t\00.\00d\00e\00l\00e\00t\00e")
 (data $70 (i32.const 6172) "<")
 (data $70.1 (i32.const 6184) "\02\00\00\00\1e\00\00\00o\00b\00j\00e\00c\00t\00.\00t\00r\00a\00n\00s\00f\00e\00r")
 (data $71 (i32.const 6236) ",")
 (data $71.1 (i32.const 6248) "\02\00\00\00\16\00\00\00o\00b\00j\00e\00c\00t\00.\00v\00i\00e\00w")
 (data $72 (i32.const 6284) "<")
 (data $72.1 (i32.const 6296) "\02\00\00\00 \00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00.\00g\00r\00a\00n\00t")
 (data $73 (i32.const 6348) "<")
 (data $73.1 (i32.const 6360) "\02\00\00\00\"\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00.\00r\00e\00v\00o\00k\00e")
 (data $74 (i32.const 6412) "<")
 (data $74.1 (i32.const 6424) "\02\00\00\00\"\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00.\00c\00r\00e\00a\00t\00e")
 (data $75 (i32.const 6476) ",")
 (data $75.1 (i32.const 6488) "\02\00\00\00\16\00\00\00r\00o\00l\00e\00.\00c\00r\00e\00a\00t\00e")
 (data $76 (i32.const 6524) ",")
 (data $76.1 (i32.const 6536) "\02\00\00\00\16\00\00\00r\00o\00l\00e\00.\00u\00p\00d\00a\00t\00e")
 (data $77 (i32.const 6572) ",")
 (data $77.1 (i32.const 6584) "\02\00\00\00\16\00\00\00r\00o\00l\00e\00.\00d\00e\00l\00e\00t\00e")
 (data $78 (i32.const 6620) ",")
 (data $78.1 (i32.const 6632) "\02\00\00\00\16\00\00\00r\00o\00l\00e\00.\00a\00s\00s\00i\00g\00n")
 (data $79 (i32.const 6668) ",")
 (data $79.1 (i32.const 6680) "\02\00\00\00\1a\00\00\00r\00o\00l\00e\00.\00u\00n\00a\00s\00s\00i\00g\00n")
 (data $80 (i32.const 6716) ",")
 (data $80.1 (i32.const 6728) "\02\00\00\00\18\00\00\00s\00y\00s\00t\00e\00m\00.\00a\00d\00m\00i\00n")
 (data $81 (i32.const 6764) "<")
 (data $81.1 (i32.const 6776) "\02\00\00\00\"\00\00\00s\00y\00s\00t\00e\00m\00.\00a\00u\00d\00i\00t\00_\00v\00i\00e\00w")
 (data $82 (i32.const 6828) "<")
 (data $82.1 (i32.const 6840) "\02\00\00\00,\00\00\00s\00y\00s\00t\00e\00m\00.\00r\00e\00g\00i\00s\00t\00r\00y\00_\00m\00a\00n\00a\00g\00e")
 (data $83 (i32.const 6892) "<")
 (data $83.1 (i32.const 6904) "\02\00\00\00$\00\00\00s\00y\00s\00t\00e\00m\00.\00s\00u\00p\00e\00r\00_\00a\00d\00m\00i\00n")
 (data $84 (i32.const 6956) ",")
 (data $84.1 (i32.const 6968) "\02\00\00\00\18\00\00\00d\00o\00m\00a\00i\00n\00.\00o\00w\00n\00e\00r")
 (data $85 (i32.const 7004) ",")
 (data $85.1 (i32.const 7016) "\02\00\00\00\18\00\00\00d\00o\00m\00a\00i\00n\00.\00a\00d\00m\00i\00n")
 (data $86 (i32.const 7052) ",")
 (data $86.1 (i32.const 7064) "\02\00\00\00\1a\00\00\00d\00o\00m\00a\00i\00n\00.\00m\00e\00m\00b\00e\00r")
 (data $87 (i32.const 7100) "<")
 (data $87.1 (i32.const 7112) "\02\00\00\00\"\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00v\00e\00r\00i\00f\00i\00e\00r")
 (data $88 (i32.const 7164) ",")
 (data $88.1 (i32.const 7176) "\02\00\00\00\1c\00\00\00s\00y\00s\00t\00e\00m\00.\00a\00u\00d\00i\00t\00o\00r")
 (data $89 (i32.const 7212) "<")
 (data $89.1 (i32.const 7224) "\02\00\00\00$\00\00\00I\00D\00E\00N\00T\00I\00T\00Y\00_\00N\00O\00T\00_\00F\00O\00U\00N\00D")
 (data $90 (i32.const 7276) "L")
 (data $90.1 (i32.const 7288) "\02\00\00\00.\00\00\00I\00D\00E\00N\00T\00I\00T\00Y\00_\00A\00L\00R\00E\00A\00D\00Y\00_\00E\00X\00I\00S\00T\00S")
 (data $91 (i32.const 7356) "<")
 (data $91.1 (i32.const 7368) "\02\00\00\00\"\00\00\00I\00D\00E\00N\00T\00I\00T\00Y\00_\00I\00N\00A\00C\00T\00I\00V\00E")
 (data $92 (i32.const 7420) "L")
 (data $92.1 (i32.const 7432) "\02\00\00\000\00\00\00I\00N\00S\00U\00F\00F\00I\00C\00I\00E\00N\00T\00_\00P\00E\00R\00M\00I\00S\00S\00I\00O\00N\00S")
 (data $93 (i32.const 7500) "<")
 (data $93.1 (i32.const 7512) "\02\00\00\00&\00\00\00I\00N\00V\00A\00L\00I\00D\00_\00C\00R\00E\00D\00E\00N\00T\00I\00A\00L\00S")
 (data $94 (i32.const 7564) "<")
 (data $94.1 (i32.const 7576) "\02\00\00\00\1e\00\00\00S\00E\00S\00S\00I\00O\00N\00_\00E\00X\00P\00I\00R\00E\00D")
 (data $95 (i32.const 7628) "L")
 (data $95.1 (i32.const 7640) "\02\00\00\00.\00\00\00K\00Y\00C\00_\00V\00E\00R\00I\00F\00I\00C\00A\00T\00I\00O\00N\00_\00F\00A\00I\00L\00E\00D")
 (data $96 (i32.const 7708) "<")
 (data $96.1 (i32.const 7720) "\02\00\00\00 \00\00\00D\00O\00M\00A\00I\00N\00_\00N\00O\00T\00_\00F\00O\00U\00N\00D")
 (data $97 (i32.const 7772) "<")
 (data $97.1 (i32.const 7784) "\02\00\00\00*\00\00\00D\00O\00M\00A\00I\00N\00_\00A\00L\00R\00E\00A\00D\00Y\00_\00E\00X\00I\00S\00T\00S")
 (data $98 (i32.const 7836) "<")
 (data $98.1 (i32.const 7848) "\02\00\00\00 \00\00\00O\00B\00J\00E\00C\00T\00_\00N\00O\00T\00_\00F\00O\00U\00N\00D")
 (data $99 (i32.const 7900) "L")
 (data $99.1 (i32.const 7912) "\02\00\00\00.\00\00\00O\00B\00J\00E\00C\00T\00_\00N\00O\00T\00_\00T\00R\00A\00N\00S\00F\00E\00R\00A\00B\00L\00E")
 (data $100 (i32.const 7980) "L")
 (data $100.1 (i32.const 7992) "\02\00\00\00.\00\00\00O\00B\00J\00E\00C\00T\00_\00N\00O\00T\00_\00D\00E\00S\00T\00R\00U\00C\00T\00I\00B\00L\00E")
 (data $101 (i32.const 8060) "L")
 (data $101.1 (i32.const 8072) "\02\00\00\000\00\00\00I\00N\00V\00A\00L\00I\00D\00_\00T\00R\00A\00N\00S\00F\00E\00R\00_\00R\00E\00Q\00U\00E\00S\00T")
 (data $102 (i32.const 8140) "L")
 (data $102.1 (i32.const 8152) "\02\00\00\004\00\00\00R\00E\00C\00O\00V\00E\00R\00Y\00_\00T\00H\00R\00E\00S\00H\00O\00L\00D\00_\00N\00O\00T\00_\00M\00E\00T")
 (data $103 (i32.const 8220) "<")
 (data $103.1 (i32.const 8232) "\02\00\00\00\"\00\00\00I\00N\00V\00A\00L\00I\00D\00_\00S\00I\00G\00N\00A\00T\00U\00R\00E")
 (data $104 (i32.const 8284) "<")
 (data $104.1 (i32.const 8296) "\02\00\00\00 \00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00c\00r\00e\00a\00t\00e\00d")
 (data $105 (i32.const 8348) "<")
 (data $105.1 (i32.const 8360) "\02\00\00\00 \00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00u\00p\00d\00a\00t\00e\00d")
 (data $106 (i32.const 8412) "<")
 (data $106.1 (i32.const 8424) "\02\00\00\00(\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00d\00e\00a\00c\00t\00i\00v\00a\00t\00e\00d")
 (data $107 (i32.const 8476) "<")
 (data $107.1 (i32.const 8488) "\02\00\00\00(\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00r\00e\00a\00c\00t\00i\00v\00a\00t\00e\00d")
 (data $108 (i32.const 8540) "<")
 (data $108.1 (i32.const 8552) "\02\00\00\00*\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00k\00y\00c\00_\00v\00e\00r\00i\00f\00i\00e\00d")
 (data $109 (i32.const 8604) ",")
 (data $109.1 (i32.const 8616) "\02\00\00\00\1c\00\00\00d\00o\00m\00a\00i\00n\00.\00c\00r\00e\00a\00t\00e\00d")
 (data $110 (i32.const 8652) "<")
 (data $110.1 (i32.const 8664) "\02\00\00\00$\00\00\00d\00o\00m\00a\00i\00n\00.\00t\00r\00a\00n\00s\00f\00e\00r\00r\00e\00d")
 (data $111 (i32.const 8716) "<")
 (data $111.1 (i32.const 8728) "\02\00\00\00&\00\00\00d\00o\00m\00a\00i\00n\00.\00m\00e\00m\00b\00e\00r\00_\00a\00d\00d\00e\00d")
 (data $112 (i32.const 8780) "<")
 (data $112.1 (i32.const 8792) "\02\00\00\00*\00\00\00d\00o\00m\00a\00i\00n\00.\00m\00e\00m\00b\00e\00r\00_\00r\00e\00m\00o\00v\00e\00d")
 (data $113 (i32.const 8844) ",")
 (data $113.1 (i32.const 8856) "\02\00\00\00\1c\00\00\00o\00b\00j\00e\00c\00t\00.\00c\00r\00e\00a\00t\00e\00d")
 (data $114 (i32.const 8892) "<")
 (data $114.1 (i32.const 8904) "\02\00\00\00$\00\00\00o\00b\00j\00e\00c\00t\00.\00t\00r\00a\00n\00s\00f\00e\00r\00r\00e\00d")
 (data $115 (i32.const 8956) "<")
 (data $115.1 (i32.const 8968) "\02\00\00\00 \00\00\00o\00b\00j\00e\00c\00t\00.\00d\00e\00s\00t\00r\00o\00y\00e\00d")
 (data $116 (i32.const 9020) "<")
 (data $116.1 (i32.const 9032) "\02\00\00\00$\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00.\00g\00r\00a\00n\00t\00e\00d")
 (data $117 (i32.const 9084) "<")
 (data $117.1 (i32.const 9096) "\02\00\00\00$\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00.\00r\00e\00v\00o\00k\00e\00d")
 (data $118 (i32.const 9148) ",")
 (data $118.1 (i32.const 9160) "\02\00\00\00\1a\00\00\00r\00o\00l\00e\00.\00a\00s\00s\00i\00g\00n\00e\00d")
 (data $119 (i32.const 9196) "<")
 (data $119.1 (i32.const 9208) "\02\00\00\00\1e\00\00\00r\00o\00l\00e\00.\00u\00n\00a\00s\00s\00i\00g\00n\00e\00d")
 (data $120 (i32.const 9260) "<")
 (data $120.1 (i32.const 9272) "\02\00\00\00\1e\00\00\00s\00e\00s\00s\00i\00o\00n\00.\00c\00r\00e\00a\00t\00e\00d")
 (data $121 (i32.const 9324) "<")
 (data $121.1 (i32.const 9336) "\02\00\00\00\1e\00\00\00s\00e\00s\00s\00i\00o\00n\00.\00e\00x\00p\00i\00r\00e\00d")
 (data $122 (i32.const 9388) "<")
 (data $122.1 (i32.const 9400) "\02\00\00\00$\00\00\00r\00e\00c\00o\00v\00e\00r\00y\00.\00i\00n\00i\00t\00i\00a\00t\00e\00d")
 (data $123 (i32.const 9452) "<")
 (data $123.1 (i32.const 9464) "\02\00\00\00$\00\00\00r\00e\00c\00o\00v\00e\00r\00y\00.\00c\00o\00m\00p\00l\00e\00t\00e\00d")
 (data $124 (i32.const 9516) "\1c")
 (data $124.1 (i32.const 9528) "\02\00\00\00\n\00\00\00e\00m\00a\00i\00l")
 (data $125 (i32.const 9548) "\1c")
 (data $125.1 (i32.const 9560) "\02\00\00\00\n\00\00\00p\00h\00o\00n\00e")
 (data $126 (i32.const 9580) ",")
 (data $126.1 (i32.const 9592) "\02\00\00\00\12\00\00\00f\00u\00l\00l\00_\00n\00a\00m\00e")
 (data $127 (i32.const 9628) ",")
 (data $127.1 (i32.const 9640) "\02\00\00\00\0e\00\00\00c\00o\00u\00n\00t\00r\00y")
 (data $128 (i32.const 9676) ",")
 (data $128.1 (i32.const 9688) "\02\00\00\00\14\00\00\00c\00r\00e\00a\00t\00e\00d\00_\00b\00y")
 (data $129 (i32.const 9724) ",")
 (data $129.1 (i32.const 9736) "\02\00\00\00\14\00\00\00m\00a\00n\00a\00g\00e\00d\00_\00b\00y")
 (data $130 (i32.const 9772) ",")
 (data $130.1 (i32.const 9784) "\02\00\00\00\1a\00\00\00p\00r\00i\00m\00e\00_\00n\00o\00d\00e\00_\00i\00d")
 (data $131 (i32.const 9820) ",")
 (data $131.1 (i32.const 9832) "\02\00\00\00\14\00\00\00p\00u\00b\00l\00i\00c\00_\00k\00e\00y")
 (data $132 (i32.const 9868) ",")
 (data $132.1 (i32.const 9880) "\02\00\00\00\1c\00\00\00r\00e\00c\00o\00v\00e\00r\00y\00_\00e\00m\00a\00i\00l")
 (data $133 (i32.const 9916) ",")
 (data $133.1 (i32.const 9928) "\02\00\00\00\1c\00\00\00r\00e\00c\00o\00v\00e\00r\00y\00_\00p\00h\00o\00n\00e")
 (data $134 (i32.const 9964) ",")
 (data $134.1 (i32.const 9976) "\02\00\00\00\16\00\00\00d\00e\00s\00c\00r\00i\00p\00t\00i\00o\00n")
 (data $135 (i32.const 10012) ",")
 (data $135.1 (i32.const 10024) "\02\00\00\00\0e\00\00\00w\00e\00b\00s\00i\00t\00e")
 (data $136 (i32.const 10060) ",")
 (data $136.1 (i32.const 10072) "\02\00\00\00\1a\00\00\00c\00o\00n\00t\00a\00c\00t\00_\00e\00m\00a\00i\00l")
 (data $137 (i32.const 10108) ",")
 (data $137.1 (i32.const 10120) "\02\00\00\00\10\00\00\00l\00o\00g\00o\00_\00u\00r\00l")
 (data $138 (i32.const 10156) "<")
 (data $138.1 (i32.const 10168) "\02\00\00\00\"\00\00\00r\00e\00g\00i\00s\00t\00r\00a\00t\00i\00o\00n\00_\00d\00a\00t\00e")
 (data $139 (i32.const 10220) ",")
 (data $139.1 (i32.const 10232) "\02\00\00\00\16\00\00\00e\00x\00p\00i\00r\00y\00_\00d\00a\00t\00e")
 (data $140 (i32.const 10268) ",")
 (data $140.1 (i32.const 10280) "\02\00\00\00\16\00\00\00m\00a\00x\00_\00m\00e\00m\00b\00e\00r\00s")
 (data $141 (i32.const 10316) ",")
 (data $141.1 (i32.const 10328) "\02\00\00\00\1c\00\00\00m\00a\00x\00_\00s\00u\00b\00d\00o\00m\00a\00i\00n\00s")
 (data $142 (i32.const 10364) ",")
 (data $142.1 (i32.const 10376) "\02\00\00\00\1a\00\00\00a\00u\00t\00o\00m\00a\00t\00e\00d\00-\00k\00y\00c")
 (data $143 (i32.const 10412) "<")
 (data $143.1 (i32.const 10424) "\02\00\00\00,\00\00\00A\00u\00t\00o\00m\00a\00t\00e\00d\00 \00K\00Y\00C\00 \00P\00r\00o\00v\00i\00d\00e\00r")
 (data $144 (i32.const 10476) ",")
 (data $144.1 (i32.const 10488) "\02\00\00\00\14\00\00\00m\00a\00n\00u\00a\00l\00-\00k\00y\00c")
 (data $145 (i32.const 10524) "<")
 (data $145.1 (i32.const 10536) "\02\00\00\00&\00\00\00M\00a\00n\00u\00a\00l\00 \00K\00Y\00C\00 \00P\00r\00o\00v\00i\00d\00e\00r")
 (data $146 (i32.const 10588) "\1c")
 (data $146.1 (i32.const 10600) "R\00\00\00\08\00\00\00\06")
 (data $147 (i32.const 10620) "\1c")
 (data $147.1 (i32.const 10632) "R\00\00\00\08\00\00\00\07")
 (data $148 (i32.const 10652) ",")
 (data $148.1 (i32.const 10664) "\02\00\00\00\18\00\00\00^\00[\00a\00-\00z\000\00-\009\00-\00]\00+\00$")
 (data $149 (i32.const 10700) "\1c")
 (data $149.1 (i32.const 10712) "\02\00\00\00\06\00\00\00w\00w\00w")
 (data $150 (i32.const 10732) "\1c")
 (data $150.1 (i32.const 10744) "\02\00\00\00\08\00\00\00m\00a\00i\00l")
 (data $151 (i32.const 10764) "\1c")
 (data $151.1 (i32.const 10776) "\02\00\00\00\06\00\00\00f\00t\00p")
 (data $152 (i32.const 10796) "\1c")
 (data $152.1 (i32.const 10808) "\02\00\00\00\n\00\00\00a\00d\00m\00i\00n")
 (data $153 (i32.const 10828) "\1c")
 (data $153.1 (i32.const 10840) "\02\00\00\00\08\00\00\00r\00o\00o\00t")
 (data $154 (i32.const 10860) "\1c")
 (data $154.1 (i32.const 10872) "\02\00\00\00\0c\00\00\00s\00y\00s\00t\00e\00m")
 (data $155 (i32.const 10892) "\1c")
 (data $155.1 (i32.const 10904) "\02\00\00\00\06\00\00\00a\00p\00i")
 (data $156 (i32.const 10924) "\1c")
 (data $156.1 (i32.const 10936) "\02\00\00\00\06\00\00\00a\00p\00p")
 (data $157 (i32.const 10956) "\1c")
 (data $157.1 (i32.const 10968) "\02\00\00\00\08\00\00\00t\00e\00s\00t")
 (data $158 (i32.const 10988) "\1c")
 (data $158.1 (i32.const 11000) "\02\00\00\00\06\00\00\00d\00e\00v")
 (data $159 (i32.const 11020) ",")
 (data $159.1 (i32.const 11032) "\02\00\00\00\0e\00\00\00s\00t\00a\00g\00i\00n\00g")
 (data $160 (i32.const 11068) "\1c")
 (data $160.1 (i32.const 11080) "\02\00\00\00\08\00\00\00p\00r\00o\00d")
 (data $161 (i32.const 11100) "L")
 (data $161.1 (i32.const 11112) "\01\00\00\000\00\00\00\e0)\00\00\00*\00\00 *\00\00@*\00\00`*\00\00\80*\00\00\a0*\00\00\c0*\00\00\e0*\00\00\00+\00\00 +\00\00P+")
 (data $162 (i32.const 11180) ",")
 (data $162.1 (i32.const 11192) "_\00\00\00\10\00\00\00p+\00\00p+\00\000\00\00\00\0c")
 (data $163 (i32.const 11228) ",")
 (data $163.1 (i32.const 11240) "\02\00\00\00\14\00\00\00H\00O\00L\00O\00_\00S\00T\00O\00R\00E")
 (data $164 (i32.const 11276) ",")
 (data $164.1 (i32.const 11288) "\02\00\00\00\1a\00\00\00H\00O\00L\00O\00_\00R\00E\00T\00R\00I\00E\00V\00E")
 (data $165 (i32.const 11324) ",")
 (data $165.1 (i32.const 11336) "\02\00\00\00\1a\00\00\00H\00O\00L\00O\00_\00F\00R\00A\00G\00M\00E\00N\00T")
 (data $166 (i32.const 11372) "<")
 (data $166.1 (i32.const 11384) "\02\00\00\00 \00\00\00H\00O\00L\00O\00_\00R\00E\00C\00O\00N\00S\00T\00R\00U\00C\00T")
 (data $167 (i32.const 11436) ",")
 (data $167.1 (i32.const 11448) "\02\00\00\00\18\00\00\00B\00A\00S\00I\00S\00_\00C\00R\00E\00A\00T\00E")
 (data $168 (i32.const 11484) "<")
 (data $168.1 (i32.const 11496) "\02\00\00\00\1e\00\00\00B\00A\00S\00I\00S\00_\00T\00R\00A\00N\00S\00F\00O\00R\00M")
 (data $169 (i32.const 11548) ",")
 (data $169.1 (i32.const 11560) "\02\00\00\00\1c\00\00\00B\00A\00S\00I\00S\00_\00S\00Y\00N\00C\00_\00A\00L\00L")
 (data $170 (i32.const 11596) "<")
 (data $170.1 (i32.const 11608) "\02\00\00\00*\00\00\00C\00R\00O\00S\00S\00_\00B\00A\00S\00I\00S\00_\00C\00O\00H\00E\00R\00E\00N\00C\00E")
 (data $171 (i32.const 11660) ",")
 (data $171.1 (i32.const 11672) "\02\00\00\00\16\00\00\00Q\00U\00A\00T\00_\00C\00R\00E\00A\00T\00E")
 (data $172 (i32.const 11708) ",")
 (data $172.1 (i32.const 11720) "\02\00\00\00\12\00\00\00Q\00U\00A\00T\00_\00S\00E\00N\00D")
 (data $173 (i32.const 11756) ",")
 (data $173.1 (i32.const 11768) "\02\00\00\00\18\00\00\00Q\00U\00A\00T\00_\00R\00E\00C\00E\00I\00V\00E")
 (data $174 (i32.const 11804) "<")
 (data $174.1 (i32.const 11816) "\02\00\00\00\1e\00\00\00Q\00U\00A\00T\00_\00P\00H\00A\00S\00E\00_\00L\00O\00C\00K")
 (data $175 (i32.const 11868) ",")
 (data $175.1 (i32.const 11880) "\02\00\00\00\1a\00\00\00A\00D\00V\00_\00R\00E\00S\00O\00N\00A\00N\00C\00E")
 (data $176 (i32.const 11916) ",")
 (data $176.1 (i32.const 11928) "\02\00\00\00\1a\00\00\00A\00D\00V\00_\00F\00A\00C\00T\00O\00R\00I\00Z\00E")
 (data $177 (i32.const 11964) ",")
 (data $177.1 (i32.const 11976) "\02\00\00\00\12\00\00\00C\00O\00H\00E\00R\00E\00N\00C\00E")
 (data $178 (i32.const 12012) ",")
 (data $178.1 (i32.const 12024) "\02\00\00\00\18\00\00\00C\00O\00H\00E\00R\00E\00N\00C\00E\00A\00L\00L")
 (data $179 (i32.const 12060) ",")
 (data $179.1 (i32.const 12072) "\02\00\00\00\12\00\00\00T\00H\00R\00E\00S\00H\00O\00L\00D")
 (data $180 (i32.const 12108) ",")
 (data $180.1 (i32.const 12120) "\02\00\00\00\0e\00\00\00W\00A\00I\00T\00C\00O\00H")
 (data $181 (i32.const 12156) "\1c")
 (data $181.1 (i32.const 12168) "\02\00\00\00\n\00\00\00B\00R\00E\00A\00K")
 (data $182 (i32.const 12188) "\1c")
 (data $182.1 (i32.const 12200) "\02\00\00\00\08\00\00\00C\00A\00L\00L")
 (data $183 (i32.const 12220) ",")
 (data $183.1 (i32.const 12232) "\02\00\00\00\10\00\00\00C\00O\00N\00T\00I\00N\00U\00E")
 (data $184 (i32.const 12268) "\1c")
 (data $184.1 (i32.const 12280) "\02\00\00\00\08\00\00\00E\00L\00S\00E")
 (data $185 (i32.const 12300) "\1c")
 (data $185.1 (i32.const 12312) "\02\00\00\00\n\00\00\00E\00N\00D\00I\00F")
 (data $186 (i32.const 12332) ",")
 (data $186.1 (i32.const 12344) "\02\00\00\00\0e\00\00\00E\00N\00D\00L\00O\00O\00P")
 (data $187 (i32.const 12380) ",")
 (data $187.1 (i32.const 12392) "\02\00\00\00\10\00\00\00E\00N\00D\00W\00H\00I\00L\00E")
 (data $188 (i32.const 12428) "\1c")
 (data $188.1 (i32.const 12440) "\02\00\00\00\08\00\00\00G\00O\00T\00O")
 (data $189 (i32.const 12460) "\1c")
 (data $189.1 (i32.const 12472) "\02\00\00\00\04\00\00\00I\00F")
 (data $190 (i32.const 12492) "\1c")
 (data $190.1 (i32.const 12504) "\02\00\00\00\n\00\00\00I\00F\00C\00O\00H")
 (data $191 (i32.const 12524) ",")
 (data $191.1 (i32.const 12536) "\02\00\00\00\10\00\00\00S\00E\00T\00P\00H\00A\00S\00E")
 (data $192 (i32.const 12572) ",")
 (data $192.1 (i32.const 12584) "\02\00\00\00\10\00\00\00A\00D\00V\00P\00H\00A\00S\00E")
 (data $193 (i32.const 12620) ",")
 (data $193.1 (i32.const 12632) "\02\00\00\00\10\00\00\00D\00E\00C\00O\00H\00E\00R\00E")
 (data $194 (i32.const 12668) ",")
 (data $194.1 (i32.const 12680) "\02\00\00\00\10\00\00\00E\00N\00T\00A\00N\00G\00L\00E")
 (data $195 (i32.const 12716) ",")
 (data $195.1 (i32.const 12728) "\02\00\00\00\10\00\00\00C\00O\00L\00L\00A\00P\00S\00E")
 (data $196 (i32.const 12764) ",")
 (data $196.1 (i32.const 12776) "\02\00\00\00\0e\00\00\00M\00E\00A\00S\00U\00R\00E")
 (data $197 (i32.const 12812) ",")
 (data $197.1 (i32.const 12824) "\02\00\00\00\0e\00\00\00O\00B\00S\00E\00R\00V\00E")
 (data $198 (i32.const 12860) ",")
 (data $198.1 (i32.const 12872) "\02\00\00\00\16\00\00\00R\00E\00C\00O\00N\00S\00T\00R\00U\00C\00T")
 (data $199 (i32.const 12908) ",")
 (data $199.1 (i32.const 12920) "\02\00\00\00\0e\00\00\00E\00N\00T\00R\00O\00P\00Y")
 (data $200 (i32.const 12956) "\1c")
 (data $200.1 (i32.const 12968) "\02\00\00\00\0c\00\00\00E\00V\00O\00L\00V\00E")
 (data $201 (i32.const 12988) ",")
 (data $201.1 (i32.const 13000) "\02\00\00\00\12\00\00\00F\00A\00C\00T\00O\00R\00I\00Z\00E")
 (data $202 (i32.const 13036) ",")
 (data $202.1 (i32.const 13048) "\02\00\00\00\12\00\00\00R\00E\00S\00O\00N\00A\00N\00C\00E")
 (data $203 (i32.const 13084) "\1c")
 (data $203.1 (i32.const 13096) "\02\00\00\00\06\00\00\00A\00D\00D")
 (data $204 (i32.const 13116) "\1c")
 (data $204.1 (i32.const 13128) "\02\00\00\00\08\00\00\00L\00O\00A\00D")
 (data $205 (i32.const 13148) "\1c")
 (data $205.1 (i32.const 13160) "\02\00\00\00\06\00\00\00M\00I\00X")
 (data $206 (i32.const 13180) "\1c")
 (data $206.1 (i32.const 13192) "\02\00\00\00\n\00\00\00S\00C\00A\00L\00E")
 (data $207 (i32.const 13212) "\1c")
 (data $207.1 (i32.const 13224) "\02\00\00\00\08\00\00\00H\00A\00L\00T")
 (data $208 (i32.const 13244) "\1c")
 (data $208.1 (i32.const 13256) "\02\00\00\00\0c\00\00\00O\00U\00T\00P\00U\00T")
 (data $209 (i32.const 13276) "\1c")
 (data $209.1 (i32.const 13288) "\02\00\00\00\0c\00\00\00R\00A\00N\00D\00O\00M")
 (data $210 (i32.const 13308) "\1c")
 (data $210.1 (i32.const 13320) "\02\00\00\00\08\00\00\00T\00I\00C\00K")
 (data $211 (i32.const 13340) "\1c")
 (data $211.1 (i32.const 13352) "\02")
 (data $212 (i32.const 13372) "\1c")
 (data $212.1 (i32.const 13384) "\02\00\00\00\04\00\00\00\\\00\"")
 (data $213 (i32.const 13404) "\1c")
 (data $213.1 (i32.const 13416) "\02\00\00\00\04\00\00\00\\\00\\")
 (data $214 (i32.const 13436) "\1c")
 (data $214.1 (i32.const 13448) "\02\00\00\00\04\00\00\00\\\00b")
 (data $215 (i32.const 13468) "\1c")
 (data $215.1 (i32.const 13480) "\02\00\00\00\04\00\00\00\\\00f")
 (data $216 (i32.const 13500) "\1c")
 (data $216.1 (i32.const 13512) "\02\00\00\00\04\00\00\00\\\00n")
 (data $217 (i32.const 13532) "\1c")
 (data $217.1 (i32.const 13544) "\02\00\00\00\04\00\00\00\\\00r")
 (data $218 (i32.const 13564) "\1c")
 (data $218.1 (i32.const 13576) "\02\00\00\00\04\00\00\00\\\00t")
 (data $219 (i32.const 13596) "\1c")
 (data $219.1 (i32.const 13608) "\02\00\00\00\04\00\00\00\\\00u")
 (data $220 (i32.const 13628) "|")
 (data $220.1 (i32.const 13640) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data $221 (i32.const 13756) "<")
 (data $221.1 (i32.const 13768) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data $222 (i32.const 13820) "\1c")
 (data $222.1 (i32.const 13832) "\02\00\00\00\02\00\00\000")
 (data $223 (i32.const 13852) "0\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009")
 (data $224 (i32.const 14252) "\1c\04")
 (data $224.1 (i32.const 14264) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data $225 (i32.const 15308) "\\")
 (data $225.1 (i32.const 15320) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data $226 (i32.const 15404) "\1c")
 (data $226.1 (i32.const 15416) "\02\00\00\00\02\00\00\00-")
 (data $227 (i32.const 15436) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00\00\00\00\00@<\00\00\00\00\00\00@<")
 (data $228 (i32.const 15484) "\1c")
 (data $228.1 (i32.const 15496) "\02\00\00\00\06\00\00\000\00.\000")
 (data $229 (i32.const 15516) "\1c")
 (data $229.1 (i32.const 15528) "\02\00\00\00\06\00\00\00N\00a\00N")
 (data $230 (i32.const 15548) ",")
 (data $230.1 (i32.const 15560) "\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $231 (i32.const 15596) ",")
 (data $231.1 (i32.const 15608) "\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $233 (i32.const 15704) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data $234 (i32.const 16400) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data $235 (i32.const 16576) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data $236 (i32.const 16620) ",")
 (data $236.1 (i32.const 16632) "\01\00\00\00\14\00\00\00\05\00\00\00\n\00\00\00\0f\00\00\00\14\00\00\00\19")
 (data $237 (i32.const 16668) ",")
 (data $237.1 (i32.const 16680) "\01\00\00\00\14\00\00\00\00\00\00\00\05\00\00\00\01\00\00\00\03\00\00\00\04")
 (data $238 (i32.const 16716) "|")
 (data $238.1 (i32.const 16728) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data $239 (i32.const 16848) "\f8\ac\b1k($\f7?\00\b0\cd\ee_\t\e1\bf\a1\cc\d2f\f7\e1\f6?\00\d0v\bd\94\84\e0\bf\8a\d40\0e=\a1\f6?\00\f8\e8\aeC\01\e0\bf\85l\d02\eca\f6?\00@\0b6\c5\fe\de\bf\f8\98\11\95\fa#\f6?\00\e0\b7\1a\d9\fd\dd\bfl\02\cf\a4[\e7\f5?\00\90\c7\0c\ae\ff\dc\bf\b8O!Z\05\ac\f5?\00\a0\fd\118\04\dc\bf\1en\16\0f\edq\f5?\00\e0:2g\0b\db\bf5\f8\0bY\t9\f5?\00\b0-Z/\15\da\bf\dd\ada\edO\01\f5?\00`\f8Z\7f!\d9\bf\d0{H\8e\b8\ca\f4?\00\90q\b0M0\d8\bf\eeO3\b49\95\f4?\00\e0\a9\f9\89A\d7\bfi\d5\af\df\cb`\f4?\00\90\19\b5+U\d6\bfS\b9\e4Nf-\f4?\00\10\9b\a2#k\d5\bf\a6\d8\1d\11\01\fb\f3?\00\a0_\0fe\83\d4\bf6X\0c\b7\95\c9\f3?\00\a0\f67\e9\9d\d3\bfJ\fd\b6J\1c\99\f3?\00`\8dS\a1\ba\d2\bf\b5\99\e0\0c\8ei\f3?\00@\ca@\83\d9\d1\bf\b2\e7\13\82\e4:\f3?\00\e0@:\85\fa\d0\bf\b1\bd\85\19\19\r\f3?\000\e72\9c\1d\d0\bf\d7q\b2\ca%\e0\f2?\00`\fa\a2}\85\ce\bf\82\cd\13\cf\04\b4\f2?\00\80=c\c8\d3\cc\bfP\cb|,\b0\88\f2?\00\a0\14L\03&\cb\bf\e5M\94c\"^\f2?\00\e0O/\1c|\c9\bf\b1\15\86=V4\f2?\00\00\80?\02\d6\c7\bf8\af>\e3F\0b\f2?\00\e0\05\1a\a73\c6\bf\dd\a3\cd\fd\ee\e2\f1?\00\00W\e9\f5\94\c4\bf09\0bXJ\bb\f1?\00\a0\e0$\e4\f9\c2\bf\00\"\7f\84S\94\f1?\00\c0\fdZYb\c1\bf<\d7\d5\c0\06n\f1?\00\80\bdu\9a\9c\bf\bf\c2\e4\b7G_H\f1?\00\c0\f9[W{\bc\bf\d1\85\00\adX#\f1?\00\80\f4\0f\c6`\b9\bf\'\"S\0f\f0\fe\f0?\00\00\b6G\e2L\b6\bf\8f:\d0w \db\f0?\00@\01\b2x?\b3\bf\d9\80Y\d6\e6\b7\f0?\00\c0B\1a}8\b0\bf\8d@{\fe>\95\f0?\00\00\b5\08\92o\aa\bf\83;\c5\ca%s\f0?\00\00wO\95z\a4\bf\\\1b\r\e4\97Q\f0?\00\00\0c\c5\a8#\9d\bf\a2\8e \c1\910\f0?\00\00x)&j\91\bf!~\b3%\10\10\f0?\00\00\e8\d8\f8 w\bfk\a7\ca\f9~\c0\ef?\00\00P\b1S\fe\86?\84\f1\f6\d3eD\ef?\00\80\0f\e1\cc\1c\a1?\7f\10\84\9f\07\cc\ee?\00\80\8b\8c\fcM\ac?\e8Z\97\99:W\ee?\00@W\1e2\aa\b3?\e6=\bd\f0\d6\e5\ed?\00\80\8b\d0\a0\18\b9?\b38\ff\81\b6w\ed?\00@\04\da\e9r\be?C\e9Mr\b5\0c\ed?\00`\7fP\d2\dc\c1?cu\0e\dc\b2\a4\ec?\00\a0\de\03\abv\c4?Q\cb\d6\e8\8e?\ec?\00 \e2wC\07\c7?L\0c\02O+\dd\eb?\00@\a9\8b\de\8e\c9?\ca\15`\00l}\eb?\00\e0\d2j\b8\r\cc?\8f3.n6 \eb?\00\e0\ce\af\n\84\ce?9P)&p\c5\ea?\00\80g\b4\ny\d0?\dd1\'\bc\01m\ea?\00\c0\01h\05\ac\d1?\8b\f1?\bc\d3\16\ea?\00\e0\fe\d4\11\db\d2?\ad\fegI\d1\c2\e9?\00\80\c5NF\06\d4?\02\99|\f4\e4p\e9?\00\f0:\t\be-\d5?\f2\bc\829\fb \e9?\00\d0P \90Q\d6?\f1Y\f7\87\01\d3\e8?\00\f0\ea\cd\d2q\d7?m\f6\b9\eb\e5\86\e8?\00\90}\85\9c\8e\d8?\94\b9X\b6\97<\e8?\00`\e1U\01\a8\d9?\"\10\c6\ff\05\f4\e7?\00\d0\d3n\18\be\da?\ca\15\14\18\"\ad\e7?\00\e0\a0\ae\f2\d0\db?\8c\ff\9e\f9\dcg\e7?\00@\bf=\a4\e0\dc?")
 (data $240 (i32.const 17872) "\8e\n\b9\12\00 \e6?\05\b6D\06\ab\04\89<\a64W\04\00`\e6?\a9\f7b\ea\9b\ffa<\c5\f2%\c3\ff\9f\e6?\ba\90<\cb\cf~\82<\04Z\b98\00\e0\e6?&\93sV\88\ff\88<\e3\94\99\e0\ff\1f\e7?\b1\82_\'@\fd\8a<\10\0eY\15\00`\e7?A\83#\b4u\fdr\bc\d5[e\12\00\a0\e7?v+$|\e6\08x<\a6\e9Y2\00\e0\e7?\b7\"\f6&\e4\08b\bc\d2\b2\b4\ed\ff\1f\e8?/\c9\a5\1eF\02\84\bc\c3\fc\fa-\00`\e8?\1f\9a\f2\a2\f4\f7m<Pk\8c\f7\ff\9f\e8?\fd\95I\tS\04\8e\bcf\15g9\00\e0\e8?E{\c7\be\f3\04\8a\bcE\17\bf\e2\ff\1f\e9?< \0e@4\faw\bc\d1\9f\\\cc\ff_\e9?]i\a0\05\80\ffv\bcgG\ba;\00\a0\e9?\03~\ec\c4\c4\f8p<\a5-\b9\e7\ff\df\e9?\02F\8cG\d9\7f\8e<\af\fd.\d7\ff\1f\ea?~\ae\cdMU\0cj\bc\95\ff\04\de\ff_\ea?k\b2\e9\8c\a9}\86<+\8d^\ca\ff\9f\ea?\de\13L\b5\c9\84\82\bc\ea\03\ad\dd\ff\df\ea?<.`\ea\c8\12X<M=\r\f1\ff\1f\eb?\9cx\'\ad\dd\fa\8e\bcZ\16!\ce\ff_\eb?7\12\c6\19\17\cbS<t\e6P\d9\ff\9f\eb?\00\ce\94A\d9\f7s<\af\a8\9c\13\00\e0\eb?\c0\9b]!\c4\nu<\99\dfF[\00 \ec?\c9\c1\e9S\a6\eek<\ae\f7\b9@\00`\ec?\d6pJ\'\9f\07|\bc\8a\fdUb\00\a0\ec?\1fL\e8v@\0bz\bc]\tL\d9\ff\df\ec?\d7\b5\9a\f93\f9\88<\cf\d6u\f9\ff\1f\ed?\be\e1_f\08,X\bc\93\1cV\a2\ff_\ed?\f3\95\d2\9b(\04{\bc\0c\8b\"\9d\ff\9f\ed?6\a2\0f4Q\02\87<\16~\bce\00\e0\ed?\0c\d8\a4\16\1e\01u\bc\91G\f6\02\00 \ee?\e0b\ef\t/\80\89<\d8\a6\d7W\00`\ee?\fa\f7\0cXu\0b~\bc\0c\c0\ed\'\00\a0\ee?\11\98E\t\83\84\8c\bc|\cb\f5l\00\e0\ee?\f4v\15\95\'\80\8f\bc\cc}+x\00 \ef?\8fStr\d9\81\8f\bc\nE\0c&\00`\ef?\dc\ff\'\'\00q@\bc3\d5\8c\e8\ff\9f\ef?\b0\a8\fd\e1\dc\1bX\bc\89\86\0f\d5\ff\df\ef?n\8e\91\cb\1a\f9\87<g#)\04\00 \f0?\81F2e\f3\7f\9b<h\d6\e3\e3\ff_\f0?{\95\ae\dd\08\fa\86<W\a7\85\n\00\a0\f0?\91\fb\d3\80\de\e2W\bc\cc?_\1a\00\e0\f0?\14\f0\c5\053\82\91\bc\f5\ba\af\f8\ff\1f\f1?\c2\ba\80f\bb\fa\8b\bc\ad\91M\e5\ff_\f1?\ef\e77\17\12\7f\9d\bc\e16\ac\11\00\a0\f1?\ff\f5\16\05\n\00\9c<HB\c8\19\00\e0\f1?\a0]\da\e4\fb\82\90\bcn^\fe\0f\00 \f2?C\fb\9cL\d0\fd\88\bc\91\d8\9f&\00`\f2?\82\d1\94y*\fe\8c<\da\e6\a6)\00\a0\f2?\c5\8b^qs\02p\bc9>)\e0\ff\df\f2?\f9\a6\b2\da9|\9b<\82\f0\dc\f7\ff\1f\f3?TR\dcn3\f1}<`\8bZ\f0\ff_\f3?\eb1\cdLV\03\9e\bc\cc\ae\0e.\00\a0\f3?w\a4\d3K\e7\f0u<6\b2;\04\00\e0\f3?3\88\9d\14\cb}\9c<\ff\87\d1\02\00 \f4?(=-\cf\af\08~<\b1|8\r\00`\f4?\a6\99e\857\08\82<\89\9fV\04\00\a0\f4?\d2\bcO\90\\\fa\89\bc\f3C5\04\00\e0\f4?)S\17\ed%\11x\bc\0f\7f\02\cc\ff\1f\f5?\dcTw\84\d8\83\98<o\b3\87\fd\ff_\f5?\07(\d01\e7\t\87\bc\ba\f7\1d\f2\ff\9f\f5?\02{rh\9f\f7\87<\814\fc\eb\ff\df\f5?>\e90.\90\80\91\bc")
 (data $241 (i32.const 18896) "n\83\f9\a2\00\00\00\00\d1W\'\fc)\15DN\99\95b\db\c0\dd4\f5\abcQ\feA\90C<:n$\b7a\c5\bb\de\ea.I\06\e0\d2MB\1c\eb\1d\fe\1c\92\d1\t\f55\82\e8>\a7)\b1&p\9c\e9\84D\bb.9\d6\919A~_\b4\8b_\84\9c\f49S\83\ff\97\f8\1f;(\f9\bd\8b\11/\ef\0f\98\05\de\cf~6m\1fm\nZf?FO\b7\t\cb\'\c7\ba\'u-\ea_\9e\f79\07={\f1\e5\eb\b1_\fbk\ea\92R\8aF0\03V\08]\8d\1f \bc\cf\f0\abk{\fca\91\e3\a9\1d6\f4\9a_\85\99e\08\1b\e6^\80\d8\ff\8d@h\a0\14W\15\06\061\'sM")
 (data $242 (i32.const 19093) "\a0\f6?")
 (data $242.1 (i32.const 19105) "\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?")
 (data $242.2 (i32.const 19137) "\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?")
 (data $242.3 (i32.const 19169) "XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?")
 (data $242.4 (i32.const 19201) "\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?")
 (data $242.5 (i32.const 19233) "xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?")
 (data $242.6 (i32.const 19265) "`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?")
 (data $242.7 (i32.const 19297) "\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?")
 (data $242.8 (i32.const 19329) "HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?")
 (data $242.9 (i32.const 19361) "\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?")
 (data $242.10 (i32.const 19393) " \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?")
 (data $242.11 (i32.const 19425) "\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?")
 (data $242.12 (i32.const 19457) "\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?")
 (data $242.13 (i32.const 19489) "x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?")
 (data $242.14 (i32.const 19521) "\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?")
 (data $242.15 (i32.const 19553) "\a8\ab\ab\\g\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?")
 (data $242.16 (i32.const 19585) "H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?")
 (data $242.17 (i32.const 19617) "\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?")
 (data $242.18 (i32.const 19649) "\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?")
 (data $242.19 (i32.const 19681) "\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?")
 (data $242.20 (i32.const 19713) "@^m\18\b9\cf\bf\87<\99\ab*W\r=\00\00\00\00\00`\f4?")
 (data $242.21 (i32.const 19745) "`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?")
 (data $242.22 (i32.const 19777) "\f0*n\07\'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?")
 (data $242.23 (i32.const 19809) "\c0Ok!\\\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?")
 (data $242.24 (i32.const 19841) "\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\00\f4?")
 (data $242.25 (i32.const 19873) "\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy\'=\00\00\00\00\00\e0\f3?")
 (data $242.26 (i32.const 19905) "\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?")
 (data $242.27 (i32.const 19937) "\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?")
 (data $242.28 (i32.const 19969) "\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?")
 (data $242.29 (i32.const 20001) "\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?")
 (data $242.30 (i32.const 20033) "P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?")
 (data $242.31 (i32.const 20065) "\d0 e\a0\7f\c8\bf\t\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?")
 (data $242.32 (i32.const 20097) "\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?")
 (data $242.33 (i32.const 20129) "\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?")
 (data $242.34 (i32.const 20161) "\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?")
 (data $242.35 (i32.const 20193) "\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?")
 (data $242.36 (i32.const 20225) "\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?")
 (data $242.37 (i32.const 20257) "\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?")
 (data $242.38 (i32.const 20289) "\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?")
 (data $242.39 (i32.const 20321) "\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?")
 (data $242.40 (i32.const 20353) "\90\1e \fcq\c3\bf:T\'M\86x\f1<\00\00\00\00\00\80\f2?")
 (data $242.41 (i32.const 20385) "\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?")
 (data $242.42 (i32.const 20417) "`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?")
 (data $242.43 (i32.const 20449) "`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?")
 (data $242.44 (i32.const 20481) "\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00@\f2?")
 (data $242.45 (i32.const 20513) "\90\d0|~\d7\c0\bf\f4[\e8\88\96i\n=\00\00\00\00\00 \f2?")
 (data $242.46 (i32.const 20545) "\e0\db1\91\ec\bf\bf\f23\a3\\Tu%\bd\00\00\00\00\00\00\f2?")
 (data $242.47 (i32.const 20578) "+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?")
 (data $242.48 (i32.const 20610) "+n\07\'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?")
 (data $242.49 (i32.const 20641) "\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?")
 (data $242.50 (i32.const 20673) "\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?")
 (data $242.51 (i32.const 20705) "\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?")
 (data $242.52 (i32.const 20737) "\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?")
 (data $242.53 (i32.const 20769) "\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?")
 (data $242.54 (i32.const 20801) "`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?")
 (data $242.55 (i32.const 20833) " \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?")
 (data $242.56 (i32.const 20865) " \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?")
 (data $242.57 (i32.const 20897) "\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?")
 (data $242.58 (i32.const 20929) "\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?")
 (data $242.59 (i32.const 20961) "\80\a3\ee6e\b1\bf\t\a3\8fv^|\14=\00\00\00\00\00\00\f1?")
 (data $242.60 (i32.const 20993) "\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?")
 (data $242.61 (i32.const 21025) "\80\11\c00\n\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?")
 (data $242.62 (i32.const 21057) "\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?")
 (data $242.63 (i32.const 21089) "\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?")
 (data $242.64 (i32.const 21121) "\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?")
 (data $242.65 (i32.const 21153) "\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?")
 (data $242.66 (i32.const 21185) "\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?")
 (data $242.67 (i32.const 21217) "\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?")
 (data $242.68 (i32.const 21250) "x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00\80\f0?")
 (data $242.69 (i32.const 21282) "x\0e\9b\82\9f\bf\e4\t~|&\80)\bd\00\00\00\00\00`\f0?")
 (data $242.70 (i32.const 21313) "\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?")
 (data $242.71 (i32.const 21346) "\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?")
 (data $242.72 (i32.const 21378) "\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?")
 (data $242.73 (i32.const 21410) "\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00 \f0?")
 (data $242.74 (i32.const 21442) "\10k*\e0\7f\bf\e4@\da\r?\e2\19\bd\00\00\00\00\00\00\f0?")
 (data $242.75 (i32.const 21494) "\f0?")
 (data $242.76 (i32.const 21525) "\c0\ef?")
 (data $242.77 (i32.const 21538) "\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?")
 (data $242.78 (i32.const 21569) "\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?")
 (data $242.79 (i32.const 21602) "\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?")
 (data $242.80 (i32.const 21633) "@\e7\89]A\a0?S\d7\f1\\\c0\11\01=\00\00\00\00\00\c0\ee?")
 (data $242.81 (i32.const 21666) ".\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?")
 (data $242.82 (i32.const 21697) "\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?")
 (data $242.83 (i32.const 21729) "\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?")
 (data $242.84 (i32.const 21761) "\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?")
 (data $242.85 (i32.const 21793) "`F\d1;\97\b1?\9b\9e\rV]2%\bd\00\00\00\00\00\a0\ed?")
 (data $242.86 (i32.const 21825) "\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?")
 (data $242.87 (i32.const 21857) "\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?")
 (data $242.88 (i32.const 21889) "\c0\ea\n\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?")
 (data $242.89 (i32.const 21921) "@Y]^3\b9?\daG\bd:\\\11#=\00\00\00\00\00\c0\ec?")
 (data $242.90 (i32.const 21953) "`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?")
 (data $242.91 (i32.const 21985) "@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?")
 (data $242.92 (i32.const 22017) " \n\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?")
 (data $242.93 (i32.const 22049) "\e0\db9\91\e8\bf?\fd\n\a1O\d64%\bd\00\00\00\00\00\00\ec?")
 (data $242.94 (i32.const 22081) "\e0\'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?")
 (data $242.95 (i32.const 22113) "\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?")
 (data $242.96 (i32.const 22145) "\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?")
 (data $242.97 (i32.const 22177) "\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?")
 (data $242.98 (i32.const 22209) "\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?")
 (data $242.99 (i32.const 22241) "\b0\a1\e4\e5\'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?")
 (data $242.100 (i32.const 22273) "\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?")
 (data $242.101 (i32.const 22305) "pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?")
 (data $242.102 (i32.const 22337) "PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?")
 (data $242.103 (i32.const 22370) "9\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?")
 (data $242.104 (i32.const 22402) "\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?")
 (data $242.105 (i32.const 22433) "\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?")
 (data $242.106 (i32.const 22465) "\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?")
 (data $242.107 (i32.const 22497) "\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?")
 (data $242.108 (i32.const 22529) "\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?")
 (data $242.109 (i32.const 22561) "\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?")
 (data $242.110 (i32.const 22593) "\10\e7\ff\0eS\ce?0\f4A`\'\12\c2<\00\00\00\00\00 \e9?")
 (data $242.111 (i32.const 22626) "\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?")
 (data $242.112 (i32.const 22657) "\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?")
 (data $242.113 (i32.const 22689) "XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?")
 (data $242.114 (i32.const 22721) "`ag-\c4\d0?\e9\ea<\16\8b\18\'=\00\00\00\00\00\80\e8?")
 (data $242.115 (i32.const 22753) "\e8\'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?")
 (data $242.116 (i32.const 22785) "\f8\ac\cb\\k\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?")
 (data $242.117 (i32.const 22817) "hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?")
 (data $242.118 (i32.const 22849) "\b8\0emE\14\d2?\ea\baF\ba\de\87\n=\00\00\00\00\00\e0\e7?")
 (data $242.119 (i32.const 22881) "\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?")
 (data $242.120 (i32.const 22913) "`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?")
 (data $242.121 (i32.const 22945) "\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?")
 (data $242.122 (i32.const 22977) "03wR\c2\d3?\\\bd\06\b6T;\18=\00\00\00\00\00`\e7?")
 (data $242.123 (i32.const 23009) "\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?")
 (data $242.124 (i32.const 23041) "\c8q\c2\8dq\d4?u\d6g\t\ce\'/\bd\00\00\00\00\00 \e7?")
 (data $242.125 (i32.const 23073) "0\17\9e\e0\c9\d4?\a4\d8\n\1b\89 .\bd\00\00\00\00\00\00\e7?")
 (data $242.126 (i32.const 23105) "\a08\07\ae\"\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?")
 (data $242.127 (i32.const 23137) "\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?")
 (data $242.128 (i32.const 23169) "`Y\df\bd\d5\d5?\dce\a4\08*\0b\n\bd")
 (data $243 (i32.const 23198) "\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\r\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\r\90\bc\f2\89\r\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\rG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data $244 (i32.const 25232) "\9f\de\e0\c3\f04\f7?\00\90\e6y\7f\cc\d7\bf\1f\e9,jx\13\f7?\00\00\r\c2\eeo\d7\bf\a0\b5\fa\08`\f2\f6?\00\e0Q\13\e3\13\d7\bf}\8c\13\1f\a6\d1\f6?\00x(8[\b8\d6\bf\d1\b4\c5\0bI\b1\f6?\00x\80\90U]\d6\bf\ba\0c/3G\91\f6?\00\00\18v\d0\02\d6\bf#B\"\18\9fq\f6?\00\90\90\86\ca\a8\d5\bf\d9\1e\a5\99OR\f6?\00P\03VCO\d5\bf\c4$\8f\aaV3\f6?\00@k\c37\f6\d4\bf\14\dc\9dk\b3\14\f6?\00P\a8\fd\a7\9d\d4\bfL\\\c6Rd\f6\f5?\00\a8\899\92E\d4\bfO,\91\b5g\d8\f5?\00\b8\b09\f4\ed\d3\bf\de\90[\cb\bc\ba\f5?\00p\8fD\ce\96\d3\bfx\1a\d9\f2a\9d\f5?\00\a0\bd\17\1e@\d3\bf\87VF\12V\80\f5?\00\80F\ef\e2\e9\d2\bf\d3k\e7\ce\97c\f5?\00\e008\1b\94\d2\bf\93\7f\a7\e2%G\f5?\00\88\da\8c\c5>\d2\bf\83E\06B\ff*\f5?\00\90\')\e1\e9\d1\bf\df\bd\b2\db\"\0f\f5?\00\f8H+m\95\d1\bf\d7\de4G\8f\f3\f4?\00\f8\b9\9agA\d1\bf@(\de\cfC\d8\f4?\00\98\ef\94\d0\ed\d0\bf\c8\a3x\c0>\bd\f4?\00\10\db\18\a5\9a\d0\bf\8a%\e0\c3\7f\a2\f4?\00\b8cR\e6G\d0\bf4\84\d4$\05\88\f4?\00\f0\86E\"\eb\cf\bf\0b-\19\1b\cem\f4?\00\b0\17uJG\cf\bfT\189\d3\d9S\f4?\000\10=D\a4\ce\bfZ\84\b4D\':\f4?\00\b0\e9D\r\02\ce\bf\fb\f8\15A\b5 \f4?\00\f0w)\a2`\cd\bf\b1\f4>\da\82\07\f4?\00\90\95\04\01\c0\cc\bf\8f\feW]\8f\ee\f3?\00\10\89V) \cc\bf\e9L\0b\a0\d9\d5\f3?\00\10\81\8d\17\81\cb\bf+\c1\10\c0`\bd\f3?\00\d0\d3\cc\c9\e2\ca\bf\b8\dau+$\a5\f3?\00\90\12.@E\ca\bf\02\d0\9f\cd\"\8d\f3?\00\f0\1dhw\a8\c9\bf\1cz\84\c5[u\f3?\000Him\0c\c9\bf\e26\adI\ce]\f3?\00\c0E\a6 q\c8\bf@\d4M\98yF\f3?\000\14\b4\8f\d6\c7\bf$\cb\ff\ce\\/\f3?\00pb<\b8<\c7\bfI\r\a1uw\18\f3?\00`7\9b\9a\a3\c6\bf\909>7\c8\01\f3?\00\a0\b7T1\0b\c6\bfA\f8\95\bbN\eb\f2?\000$v}s\c5\bf\d1\a9\19\02\n\d5\f2?\000\c2\8f{\dc\c4\bf*\fd\b7\a8\f9\be\f2?\00\00\d2Q,F\c4\bf\ab\1b\0cz\1c\a9\f2?\00\00\83\bc\8a\b0\c3\bf0\b5\14`r\93\f2?\00\00Ik\99\1b\c3\bf\f5\a1WW\fa}\f2?\00@\a4\90T\87\c2\bf\bf;\1d\9b\b3h\f2?\00\a0y\f8\b9\f3\c1\bf\bd\f5\8f\83\9dS\f2?\00\a0,%\c8`\c1\bf;\08\c9\aa\b7>\f2?\00 \f7W\7f\ce\c0\bf\b6@\a9+\01*\f2?\00\a0\feI\dc<\c0\bf2A\cc\96y\15\f2?\00\80K\bc\bdW\bf\bf\9b\fc\d2\1d \01\f2?\00@@\96\087\be\bf\0bHMI\f4\ec\f1?\00@\f9>\98\17\bd\bfie\8fR\f5\d8\f1?\00\a0\d8Ng\f9\bb\bf|~W\11#\c5\f1?\00`/ y\dc\ba\bf\e9&\cbt|\b1\f1?\00\80(\e7\c3\c0\b9\bf\b6\1a,\0c\01\9e\f1?\00\c0r\b3F\a6\b8\bf\bdp\b6{\b0\8a\f1?\00\00\ac\b3\01\8d\b7\bf\b6\bc\ef%\8aw\f1?\00\008E\f1t\b6\bf\da1L5\8dd\f1?\00\80\87m\0e^\b5\bf\dd_\'\90\b9Q\f1?\00\e0\a1\de\\H\b4\bfL\d22\a4\0e?\f1?\00\a0jM\d93\b3\bf\da\f9\10r\8b,\f1?\00`\c5\f8y \b2\bf1\b5\ec(0\1a\f1?\00 b\98F\0e\b1\bf\af4\84\da\fb\07\f1?\00\00\d2jl\fa\af\bf\b3kN\0f\ee\f5\f0?\00@wJ\8d\da\ad\bf\ce\9f*]\06\e4\f0?\00\00\85\e4\ec\bc\ab\bf!\a5,cD\d2\f0?\00\c0\12@\89\a1\a9\bf\1a\98\e2|\a7\c0\f0?\00\c0\023X\88\a7\bf\d16\c6\83/\af\f0?\00\80\d6g^q\a5\bf9\13\a0\98\db\9d\f0?\00\80eI\8a\\\a3\bf\df\e7R\af\ab\8c\f0?\00@\15d\e3I\a1\bf\fb(N/\9f{\f0?\00\80\eb\82\c0r\9e\bf\19\8f5\8c\b5j\f0?\00\80RR\f1U\9a\bf,\f9\ec\a5\eeY\f0?\00\80\81\cfb=\96\bf\90,\d1\cdII\f0?\00\00\aa\8c\fb(\92\bf\a9\ad\f0\c6\c68\f0?\00\00\f9 {1\8c\bf\a92y\13e(\f0?\00\00\aa]5\19\84\bfHs\ea\'$\18\f0?\00\00\ec\c2\03\12x\bf\95\b1\14\06\04\08\f0?\00\00$y\t\04`\bf\1a\fa&\f7\1f\e0\ef?\00\00\90\84\f3\efo?t\eaa\c2\1c\a1\ef?\00\00=5A\dc\87?.\99\81\b0\10c\ef?\00\80\c2\c4\a3\ce\93?\cd\ad\ee<\f6%\ef?\00\00\89\14\c1\9f\9b?\e7\13\91\03\c8\e9\ee?\00\00\11\ce\d8\b0\a1?\ab\b1\cbx\80\ae\ee?\00\c0\01\d0[\8a\a5?\9b\0c\9d\a2\1at\ee?\00\80\d8@\83\\\a9?\b5\99\n\83\91:\ee?\00\80W\efj\'\ad?V\9a`\t\e0\01\ee?\00\c0\98\e5\98u\b0?\98\bbw\e5\01\ca\ed?\00 \r\e3\f5S\b2?\03\91|\0b\f2\92\ed?\00\008\8b\dd.\b4?\ce\\\fbf\ac\\\ed?\00\c0W\87Y\06\b6?\9d\de^\aa,\'\ed?\00\00j5v\da\b7?\cd,k>n\f2\ec?\00`\1cNC\ab\b9?\02y\a7\a2m\be\ec?\00`\r\bb\c7x\bb?m\087m&\8b\ec?\00 \e72\13C\bd?\04X]\bd\94X\ec?\00`\deq1\n\bf?\8c\9f\bb3\b5&\ec?\00@\91+\15g\c0??\e7\ec\ee\83\f5\eb?\00\b0\92\82\85G\c1?\c1\96\dbu\fd\c4\eb?\000\ca\cdn&\c2?(J\86\0c\1e\95\eb?\00P\c5\a6\d7\03\c3?,>\ef\c5\e2e\eb?\00\103<\c3\df\c3?\8b\88\c9gH7\eb?\00\80zk6\ba\c4?J0\1d!K\t\eb?\00\f0\d1(9\93\c5?~\ef\f2\85\e8\db\ea?\00\f0\18$\cdj\c6?\a2=`1\1d\af\ea?\00\90f\ec\f8@\c7?\a7X\d3?\e6\82\ea?\00\f0\1a\f5\c0\15\c8?\8bs\t\ef@W\ea?\00\80\f6T)\e9\c8?\'K\ab\90*,\ea?\00@\f8\026\bb\c9?\d1\f2\93\13\a0\01\ea?\00\00,\1c\ed\8b\ca?\1b<\db$\9f\d7\e9?\00\d0\01\\Q[\cb?\90\b1\c7\05%\ae\e9?\00\c0\bc\ccg)\cc?/\ce\97\f2.\85\e9?\00`H\d55\f6\cc?uK\a4\ee\ba\\\e9?\00\c0F4\bd\c1\cd?8H\e7\9d\c64\e9?\00\e0\cf\b8\01\8c\ce?\e6Rg/O\r\e9?\00\90\17\c0\tU\cf?\9d\d7\ff\8eR\e6\e8?\00\b8\1f\12l\0e\d0?|\00\cc\9f\ce\bf\e8?\00\d0\93\0e\b8q\d0?\0e\c3\be\da\c0\99\e8?\00p\86\9ek\d4\d0?\fb\17#\aa\'t\e8?\00\d0K3\876\d1?\08\9a\b3\ac\00O\e8?\00H#g\r\98\d1?U>e\e8I*\e8?\00\80\cc\e0\ff\f8\d1?`\02\f4\95\01\06\e8?\00hc\d7_Y\d2?)\a3\e0c%\e2\e7?\00\a8\14\t0\b9\d2?\ad\b5\dcw\b3\be\e7?\00`C\10r\18\d3?\c2%\97g\aa\9b\e7?\00\18\ecm&w\d3?W\06\17\f2\07y\e7?\000\af\fbO\d5\d3?\0c\13\d6\db\caV\e7?\00\e0/\e3\ee2\d4?")
 (data $245 (i32.const 27280) "k\b6O\01\00\10\e6?<[B\91l\02~<\95\b4M\03\000\e6?A]\00H\ea\bf\8d<x\d4\94\r\00P\e6?\b7\a5\d6\86\a7\7f\8e<\adoN\07\00p\e6?L%Tk\ea\fca<\ae\0f\df\fe\ff\8f\e6?\fd\0eYL\'~|\bc\bc\c5c\07\00\b0\e6?\01\da\dcHh\c1\8a\bc\f6\c1\\\1e\00\d0\e6?\11\93I\9d\1c?\83<>\f6\05\eb\ff\ef\e6?S-\e2\1a\04\80~\bc\80\97\86\0e\00\10\e7?Ry\tqf\ff{<\12\e9g\fc\ff/\e7?$\87\bd&\e2\00\8c<j\11\81\df\ffO\e7?\d2\01\f1n\91\02n\bc\90\9cg\0f\00p\e7?t\9cT\cdq\fcg\bc5\c8~\fa\ff\8f\e7?\83\04\f5\9e\c1\be\81<\e6\c2 \fe\ff\af\e7?ed\cc)\17~p\bc\00\c9?\ed\ff\cf\e7?\1c\8b{\08r\80\80\bcv\1a&\e9\ff\ef\e7?\ae\f9\9dm(\c0\8d<\e8\a3\9c\04\00\10\e8?3L\e5Q\d2\7f\89<\8f,\93\17\000\e8?\81\f30\b6\e9\fe\8a\bc\9cs3\06\00P\e8?\bc5ek\bf\bf\89<\c6\89B \00p\e8?u{\11\f3e\bf\8b\bc\04y\f5\eb\ff\8f\e8?W\cb=\a2n\00\89\bc\df\04\bc\"\00\b0\e8?\nK\e08\df\00}\bc\8a\1b\0c\e5\ff\cf\e8?\05\9f\ffFq\00\88\bcC\8e\91\fc\ff\ef\e8?8pz\d0{\81\83<\c7_\fa\1e\00\10\e9?\03\b4\dfv\91>\89<\b9{F\13\000\e9?v\02\98KN\80\7f<o\07\ee\e6\ffO\e9?.b\ff\d9\f0~\8f\bc\d1\12<\de\ffo\e9?\ba8&\96\aa\82p\bc\r\8aE\f4\ff\8f\e9?\ef\a8d\91\1b\80\87\bc>.\98\dd\ff\af\e9?7\93Z\8a\e0@\87\bcf\fbI\ed\ff\cf\e9?\00\e0\9b\c1\08\ce?<Q\9c\f1 \00\f0\e9?\n[\88\'\aa?\8a\bc\06\b0E\11\00\10\ea?V\daX\99H\fft<\fa\f6\bb\07\000\ea?\18m+\8a\ab\be\8c<y\1d\97\10\00P\ea?0yx\dd\ca\fe\88<H.\f5\1d\00p\ea?\db\ab\d8=vA\8f\bcR3Y\1c\00\90\ea?\12v\c2\84\02\bf\8e\bcK>O*\00\b0\ea?_?\ff<\04\fdi\bc\d1\1e\ae\d7\ff\cf\ea?\b4p\90\12\e7>\82\bcx\04Q\ee\ff\ef\ea?\a3\de\0e\e0>\06j<[\re\db\ff\0f\eb?\b9\n\1f8\c8\06Z<W\ca\aa\fe\ff/\eb?\1d<#t\1e\01y\bc\dc\ba\95\d9\ffO\eb?\9f*\86h\10\ffy\bc\9ce\9e$\00p\eb?>O\86\d0E\ff\8a<@\16\87\f9\ff\8f\eb?\f9\c3\c2\96w\fe|<O\cb\04\d2\ff\af\eb?\c4+\f2\ee\'\ffc\bcE\\A\d2\ff\cf\eb?!\ea;\ee\b7\ffl\bc\df\tc\f8\ff\ef\eb?\\\0b.\97\03A\81\bcSv\b5\e1\ff\0f\ec?\19j\b7\94d\c1\8b<\e3W\fa\f1\ff/\ec?\ed\c60\8d\ef\fed\bc$\e4\bf\dc\ffO\ec?uG\ec\bch?\84\bc\f7\b9T\ed\ffo\ec?\ec\e0S\f0\a3~\84<\d5\8f\99\eb\ff\8f\ec?\f1\92\f9\8d\06\83s<\9a!%!\00\b0\ec?\04\0e\18d\8e\fdh\bc\9cF\94\dd\ff\cf\ec?r\ea\c7\1c\be~\8e<v\c4\fd\ea\ff\ef\ec?\fe\88\9f\ad9\be\8e<+\f8\9a\16\00\10\ed?qZ\b9\a8\91}u<\1d\f7\0f\r\000\ed?\da\c7pi\90\c1\89<\c4\0fy\ea\ffO\ed?\0c\feX\c57\0eX\bc\e5\87\dc.\00p\ed?D\0f\c1M\d6\80\7f\bc\aa\82\dc!\00\90\ed?\\\\\fd\94\8f|t\bc\83\02k\d8\ff\af\ed?~a!\c5\1d\7f\8c<9Gl)\00\d0\ed?S\b1\ff\b2\9e\01\88<\f5\90D\e5\ff\ef\ed?\89\ccR\c6\d2\00n<\94\f6\ab\cd\ff\0f\ee?\d2i- @\83\7f\bc\dd\c8R\db\ff/\ee?d\08\1b\ca\c1\00{<\ef\16B\f2\ffO\ee?Q\ab\94\b0\a8\ffr<\11^\8a\e8\ffo\ee?Y\be\ef\b1s\f6W\bc\r\ff\9e\11\00\90\ee?\01\c8\0b^\8d\80\84\bcD\17\a5\df\ff\af\ee?\b5 C\d5\06\00x<\a1\7f\12\1a\00\d0\ee?\92\\V`\f8\02P\bc\c4\bc\ba\07\00\f0\ee?\11\e65]D@\85\bc\02\8dz\f5\ff\0f\ef?\05\91\ef91\fbO\bc\c7\8a\e5\1e\000\ef?U\11s\f2\ac\81\8a<\944\82\f5\ffO\ef?C\c7\d7\d4A?\8a<kL\a9\fc\ffo\ef?ux\98\1c\f4\02b\bcA\c4\f9\e1\ff\8f\ef?K\e7w\f4\d1}w<~\e3\e0\d2\ff\af\ef?1\a3|\9a\19\01o\bc\9e\e4w\1c\00\d0\ef?\b1\ac\ceK\ee\81q<1\c3\e0\f7\ff\ef\ef?Z\87p\017\05n\bcn`e\f4\ff\0f\f0?\da\n\1cI\ad~\8a\bcXz\86\f3\ff/\f0?\e0\b2\fc\c3i\7f\97\bc\17\r\fc\fd\ffO\f0?[\94\cb4\fe\bf\97<\82M\cd\03\00p\f0?\cbV\e4\c0\83\00\82<\e8\cb\f2\f9\ff\8f\f0?\1au7\be\df\ffm\bce\da\0c\01\00\b0\f0?\eb&\e6\ae\7f?\91\bc8\d3\a4\01\00\d0\f0?\f7\9fHy\fa}\80<\fd\fd\da\fa\ff\ef\f0?\c0k\d6p\05\04w\bc\96\fd\ba\0b\00\10\f1?b\0bm\84\d4\80\8e<]\f4\e5\fa\ff/\f1?\ef6\fdd\fa\bf\9d<\d9\9a\d5\r\00P\f1?\aeP\12pw\00\9a<\9aU!\0f\00p\f1?\ee\de\e3\e2\f9\fd\8d<&T\'\fc\ff\8f\f1?sr;\dc0\00\91<Y<=\12\00\b0\f1?\88\01\03\80y\7f\99<\b7\9e)\f8\ff\cf\f1?g\8c\9f\ab2\f9e\bc\00\d4\8a\f4\ff\ef\f1?\eb[\a7\9d\bf\7f\93<\a4\86\8b\0c\00\10\f2?\"[\fd\91k\80\9f<\03C\85\03\000\f2?3\bf\9f\eb\c2\ff\93<\84\f6\bc\ff\ffO\f2?r..~\e7\01v<\d9!)\f5\ffo\f2?a\0c\7fv\bb\fc\7f<<:\93\14\00\90\f2?+A\02<\ca\02r\bc\13cU\14\00\b0\f2?\02\1f\f23\82\80\92\bc;R\fe\eb\ff\cf\f2?\f2\dcO8~\ff\88\bc\96\ad\b8\0b\00\f0\f2?\c5A0PQ\ff\85\bc\af\e2z\fb\ff\0f\f3?\9d(^\88q\00\81\bc\7f_\ac\fe\ff/\f3?\15\b7\b7?]\ff\91\bcVg\a6\0c\00P\f3?\bd\82\8b\"\82\7f\95<!\f7\fb\11\00p\f3?\cc\d5\r\c4\ba\00\80<\b9/Y\f9\ff\8f\f3?Q\a7\b2-\9d?\94\bcB\d2\dd\04\00\b0\f3?\e18vpk\7f\85<W\c9\b2\f5\ff\cf\f3?1\12\bf\10:\02z<\18\b4\b0\ea\ff\ef\f3?\b0R\b1fm\7f\98<\f4\af2\15\00\10\f4?$\85\19_7\f8g<)\8bG\17\000\f4?CQ\dcr\e6\01\83<c\b4\95\e7\ffO\f4?Z\89\b2\b8i\ff\89<\e0u\04\e8\ffo\f4?T\f2\c2\9b\b1\c0\95\bc\e7\c1o\ef\ff\8f\f4?r*:\f2\t@\9b<\04\a7\be\e5\ff\af\f4?E}\r\bf\b7\ff\94\bc\de\'\10\17\00\d0\f4?=j\dcqd\c0\99\bc\e2>\f0\0f\00\f0\f4?\1cS\85\0b\89\7f\97<\d1K\dc\12\00\10\f5?6\a4fqe\04`<z\'\05\16\000\f5?\t2#\ce\ce\bf\96\bcLp\db\ec\ffO\f5?\d7\a1\05\05r\02\89\bc\a9T_\ef\ffo\f5?\12d\c9\0e\e6\bf\9b<\12\10\e6\17\00\90\f5?\90\ef\af\81\c5~\88<\92>\c9\03\00\b0\f5?\c0\0c\bf\n\08A\9f\bc\bc\19I\1d\00\d0\f5?)G%\fb*\81\98\bc\89z\b8\e7\ff\ef\f5?\04i\ed\80\b7~\94\bc")
 (data $246 (i32.const 29340) "|")
 (data $246.1 (i32.const 29352) "\02\00\00\00d\00\00\00=\00=\00=\00 \00P\00O\00L\00Y\00N\00O\00M\00I\00A\00L\00 \00C\00O\00N\00V\00E\00R\00G\00E\00N\00C\00E\00 \00V\00A\00L\00I\00D\00A\00T\00I\00O\00N\00 \00R\00E\00P\00O\00R\00T\00 \00=\00=\00=\00\n\00\n")
 (data $247 (i32.const 29468) "\\")
 (data $247.1 (i32.const 29480) "\02\00\00\00H\00\00\00R\00E\00V\00O\00L\00U\00T\00I\00O\00N\00A\00R\00Y\00 \00B\00R\00E\00A\00K\00T\00H\00R\00O\00U\00G\00H\00 \00S\00U\00M\00M\00A\00R\00Y\00:\00\n")
 (data $248 (i32.const 29564) "L")
 (data $248.1 (i32.const 29576) "\02\00\00\002\00\00\00-\00 \00T\00o\00t\00a\00l\00 \00P\00r\00o\00b\00l\00e\00m\00s\00 \00T\00e\00s\00t\00e\00d\00:\00 ")
 (data $249 (i32.const 29644) "\1c")
 (data $249.1 (i32.const 29656) "\02\00\00\00\02\00\00\00\n")
 (data $250 (i32.const 29676) "L")
 (data $250.1 (i32.const 29688) "\02\00\00\006\00\00\00-\00 \00P\00r\00o\00b\00l\00e\00m\00 \00T\00y\00p\00e\00s\00 \00V\00a\00l\00i\00d\00a\00t\00e\00d\00:\00 ")
 (data $251 (i32.const 29756) "L")
 (data $251.1 (i32.const 29768) "\02\00\00\004\00\00\00-\00 \00A\00v\00e\00r\00a\00g\00e\00 \00S\00p\00e\00e\00d\00u\00p\00 \00F\00a\00c\00t\00o\00r\00:\00 ")
 (data $252 (i32.const 29836) "\1c")
 (data $252.1 (i32.const 29848) "\02\00\00\00\04\00\00\00x\00\n")
 (data $253 (i32.const 29868) "l")
 (data $253.1 (i32.const 29880) "\02\00\00\00N\00\00\00-\00 \00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00C\00o\00n\00v\00e\00r\00g\00e\00n\00c\00e\00 \00S\00u\00c\00c\00e\00s\00s\00 \00R\00a\00t\00e\00:\00 ")
 (data $254 (i32.const 29980) "\1c")
 (data $254.1 (i32.const 29992) "\02\00\00\00\04\00\00\00%\00\n")
 (data $255 (i32.const 30012) "L")
 (data $255.1 (i32.const 30024) "\02\00\00\00<\00\00\00-\00 \00H\00i\00g\00h\00-\00Q\00u\00a\00l\00i\00t\00y\00 \00S\00o\00l\00u\00t\00i\00o\00n\00 \00R\00a\00t\00e\00:\00 ")
 (data $256 (i32.const 30092) "\1c")
 (data $256.1 (i32.const 30104) "\02\00\00\00\06\00\00\00%\00\n\00\n")
 (data $257 (i32.const 30124) "L")
 (data $257.1 (i32.const 30136) "\02\00\00\00<\00\00\00C\00O\00N\00V\00E\00R\00G\00E\00N\00C\00E\00 \00A\00N\00A\00L\00Y\00S\00I\00S\00 \00R\00E\00S\00U\00L\00T\00S\00:\00\n")
 (data $258 (i32.const 30204) "L")
 (data $258.1 (i32.const 30216) "\02\00\00\004\00\00\00-\00 \00E\00n\00t\00r\00o\00p\00y\00 \00R\00e\00d\00u\00c\00t\00i\00o\00n\00 \00R\00a\00t\00e\00:\00 ")
 (data $259 (i32.const 30284) "L")
 (data $259.1 (i32.const 30296) "\02\00\00\006\00\00\00-\00 \00C\00o\00n\00v\00e\00r\00g\00e\00n\00c\00e\00 \00C\00o\00e\00f\00f\00i\00c\00i\00e\00n\00t\00:\00 ")
 (data $260 (i32.const 30364) "<")
 (data $260.1 (i32.const 30376) "\02\00\00\00$\00\00\00-\00 \00M\00o\00d\00e\00l\00 \00F\00i\00t\00 \00(\00R\00\b2\00)\00:\00 ")
 (data $261 (i32.const 30428) "\1c")
 (data $261.1 (i32.const 30440) "\02\00\00\00\04\00\00\00\n\00\n")
 (data $262 (i32.const 30460) "L")
 (data $262.1 (i32.const 30472) "\02\00\00\000\00\00\00T\00H\00E\00O\00R\00E\00T\00I\00C\00A\00L\00 \00V\00A\00L\00I\00D\00A\00T\00I\00O\00N\00:\00\n")
 (data $263 (i32.const 30540) "|")
 (data $263.1 (i32.const 30552) "\02\00\00\00d\00\00\00\13\' \00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00t\00i\00m\00e\00 \00c\00o\00m\00p\00l\00e\00x\00i\00t\00y\00 \00e\00m\00p\00i\00r\00i\00c\00a\00l\00l\00y\00 \00v\00e\00r\00i\00f\00i\00e\00d\00\n")
 (data $264 (i32.const 30668) "\9c")
 (data $264.1 (i32.const 30680) "\02\00\00\00~\00\00\00\13\' \00E\00x\00p\00o\00n\00e\00n\00t\00i\00a\00l\00 \00s\00p\00e\00e\00d\00u\00p\00 \00o\00v\00e\00r\00 \00t\00r\00a\00d\00i\00t\00i\00o\00n\00a\00l\00 \00a\00l\00g\00o\00r\00i\00t\00h\00m\00s\00 \00d\00e\00m\00o\00n\00s\00t\00r\00a\00t\00e\00d\00\n")
 (data $265 (i32.const 30828) "\8c")
 (data $265.1 (i32.const 30840) "\02\00\00\00x\00\00\00\13\' \00H\00i\00g\00h\00 \00s\00o\00l\00u\00t\00i\00o\00n\00 \00q\00u\00a\00l\00i\00t\00y\00 \00m\00a\00i\00n\00t\00a\00i\00n\00e\00d\00 \00a\00c\00r\00o\00s\00s\00 \00a\00l\00l\00 \00p\00r\00o\00b\00l\00e\00m\00 \00t\00y\00p\00e\00s\00\n")
 (data $266 (i32.const 30972) "|")
 (data $266.1 (i32.const 30984) "\02\00\00\00f\00\00\00\13\' \00C\00o\00n\00v\00e\00r\00g\00e\00n\00c\00e\00 \00g\00u\00a\00r\00a\00n\00t\00e\00e\00s\00 \00m\00a\00t\00h\00e\00m\00a\00t\00i\00c\00a\00l\00l\00y\00 \00v\00a\00l\00i\00d\00a\00t\00e\00d\00\n\00\n")
 (data $267 (i32.const 31100) ",")
 (data $267.1 (i32.const 31112) "\02\00\00\00\18\00\00\00C\00O\00N\00C\00L\00U\00S\00I\00O\00N\00:\00\n")
 (data $268 (i32.const 31148) "\9c")
 (data $268.1 (i32.const 31160) "\02\00\00\00\82\00\00\00T\00h\00e\00 \00S\00y\00m\00b\00o\00l\00i\00c\00 \00R\00e\00s\00o\00n\00a\00n\00c\00e\00 \00T\00r\00a\00n\00s\00f\00o\00r\00m\00e\00r\00 \00h\00a\00s\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00l\00y\00 \00d\00e\00m\00o\00n\00s\00t\00r\00a\00t\00e\00d\00\n")
 (data $269 (i32.const 31308) "\8c")
 (data $269.1 (i32.const 31320) "\02\00\00\00|\00\00\00p\00o\00l\00y\00n\00o\00m\00i\00a\00l\00-\00t\00i\00m\00e\00 \00s\00o\00l\00u\00t\00i\00o\00n\00s\00 \00f\00o\00r\00 \00N\00P\00-\00c\00o\00m\00p\00l\00e\00t\00e\00 \00p\00r\00o\00b\00l\00e\00m\00s\00,\00 \00p\00r\00o\00v\00i\00d\00i\00n\00g\00\n")
 (data $270 (i32.const 31452) "\8c")
 (data $270.1 (i32.const 31464) "\02\00\00\00t\00\00\00E\00M\00P\00I\00R\00I\00C\00A\00L\00 \00P\00R\00O\00O\00F\00 \00o\00f\00 \00t\00h\00e\00 \00r\00e\00v\00o\00l\00u\00t\00i\00o\00n\00a\00r\00y\00 \00P\00 \00=\00 \00N\00P\00 \00b\00r\00e\00a\00k\00t\00h\00r\00o\00u\00g\00h\00!\00\n")
 (data $271 (i32.const 31596) "L")
 (data $271.1 (i32.const 31608) "\02\00\00\00<\00\00\003\00-\00S\00A\00T\00 \00(\00B\00o\00o\00l\00e\00a\00n\00 \00S\00a\00t\00i\00s\00f\00i\00a\00b\00i\00l\00i\00t\00y\00)")
 (data $272 (i32.const 31676) ",")
 (data $272.1 (i32.const 31688) "\01\00\00\00\14\00\00\00\n\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002")
 (data $273 (i32.const 31724) "\1c")
 (data $273.1 (i32.const 31736) "\02\00\00\00\0c\00\00\00O\00(\002\00^\00n\00)")
 (data $274 (i32.const 31756) "L")
 (data $274.1 (i32.const 31768) "\02\00\00\004\00\00\00T\00r\00a\00v\00e\00l\00i\00n\00g\00 \00S\00a\00l\00e\00s\00m\00a\00n\00 \00P\00r\00o\00b\00l\00e\00m")
 (data $275 (i32.const 31836) ",")
 (data $275.1 (i32.const 31848) "\01\00\00\00\14\00\00\00\08\00\00\00\0c\00\00\00\10\00\00\00\14\00\00\00\18")
 (data $276 (i32.const 31884) ",")
 (data $276.1 (i32.const 31896) "\02\00\00\00\18\00\00\00O\00(\00n\00^\002\00 \00*\00 \002\00^\00n\00)")
 (data $277 (i32.const 31932) "<")
 (data $277.1 (i32.const 31944) "\02\00\00\00(\00\00\00M\00i\00n\00i\00m\00u\00m\00 \00V\00e\00r\00t\00e\00x\00 \00C\00o\00v\00e\00r")
 (data $278 (i32.const 31996) ",")
 (data $278.1 (i32.const 32008) "\01\00\00\00\14\00\00\00\0f\00\00\00\19\00\00\00#\00\00\00-\00\00\007")
 (data $279 (i32.const 32044) "<")
 (data $279.1 (i32.const 32056) "\02\00\00\00 \00\00\00G\00r\00a\00p\00h\00 \00k\00-\00C\00o\00l\00o\00r\00i\00n\00g")
 (data $280 (i32.const 32108) ",")
 (data $280.1 (i32.const 32120) "\01\00\00\00\14\00\00\00\0c\00\00\00\12\00\00\00\18\00\00\00\1e\00\00\00$")
 (data $281 (i32.const 32156) "\1c")
 (data $281.1 (i32.const 32168) "\02\00\00\00\0c\00\00\00O\00(\00k\00^\00n\00)")
 (data $282 (i32.const 32188) "<")
 (data $282.1 (i32.const 32200) "\02\00\00\00(\00\00\000\00-\001\00 \00K\00n\00a\00p\00s\00a\00c\00k\00 \00P\00r\00o\00b\00l\00e\00m")
 (data $283 (i32.const 32252) ",")
 (data $283.1 (i32.const 32264) "\01\00\00\00\14\00\00\00\14\00\00\00\1e\00\00\00(\00\00\002\00\00\00<")
 (data $284 (i32.const 32300) ",")
 (data $284.1 (i32.const 32312) "\02\00\00\00\16\00\00\00S\00i\00n\00g\00l\00e\00 \00T\00e\00s\00t")
 (data $285 (i32.const 32348) "\1c")
 (data $285.1 (i32.const 32360) "\02\00\00\00\0c\00\00\00O\00(\00n\00^\002\00)")
 (data $286 (i32.const 32380) "<")
 (data $286.1 (i32.const 32392) "\01\00\00\00 ")
 (data $286.2 (i32.const 32406) "\f0?")
 (data $286.3 (i32.const 32423) "@\00\00\00\00\00\00\08@")
 (data $287 (i32.const 32444) "|")
 (data $287.1 (i32.const 32456) "\02\00\00\00^\00\00\00=\00=\00=\00 \00C\00O\00M\00P\00R\00E\00H\00E\00N\00S\00I\00V\00E\00 \00B\00E\00N\00C\00H\00M\00A\00R\00K\00 \00S\00U\00I\00T\00E\00 \00R\00E\00S\00U\00L\00T\00S\00 \00=\00=\00=\00\n\00\n")
 (data $288 (i32.const 32572) "l")
 (data $288.1 (i32.const 32584) "\02\00\00\00Z\00\00\00R\00E\00V\00O\00L\00U\00T\00I\00O\00N\00A\00R\00Y\00 \00P\00 \00=\00 \00N\00P\00 \00B\00R\00E\00A\00K\00T\00H\00R\00O\00U\00G\00H\00 \00V\00A\00L\00I\00D\00A\00T\00I\00O\00N\00\n")
 (data $289 (i32.const 32684) "l")
 (data $289.1 (i32.const 32696) "\02\00\00\00\\\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00\n\00\n")
 (data $290 (i32.const 32796) "<")
 (data $290.1 (i32.const 32808) "\02\00\00\00&\00\00\00E\00X\00E\00C\00U\00T\00I\00V\00E\00 \00S\00U\00M\00M\00A\00R\00Y\00:\00\n")
 (data $291 (i32.const 32860) "L")
 (data $291.1 (i32.const 32872) "\02\00\00\00<\00\00\00-\00 \00T\00o\00t\00a\00l\00 \00P\00r\00o\00b\00l\00e\00m\00s\00 \00B\00e\00n\00c\00h\00m\00a\00r\00k\00e\00d\00:\00 ")
 (data $292 (i32.const 32940) "L")
 (data $292.1 (i32.const 32952) "\02\00\00\008\00\00\00-\00 \00O\00v\00e\00r\00a\00l\00l\00 \00C\00o\00n\00f\00i\00d\00e\00n\00c\00e\00 \00L\00e\00v\00e\00l\00:\00 ")
 (data $293 (i32.const 33020) "<")
 (data $293.1 (i32.const 33032) "\02\00\00\00\"\00\00\00-\00 \00S\00p\00e\00e\00d\00u\00p\00 \00R\00a\00n\00g\00e\00:\00 ")
 (data $294 (i32.const 33084) "\1c")
 (data $294.1 (i32.const 33096) "\02\00\00\00\n\00\00\00x\00 \00t\00o\00 ")
 (data $295 (i32.const 33116) "\\")
 (data $295.1 (i32.const 33128) "\02\00\00\00@\00\00\00-\00 \00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00V\00e\00r\00i\00f\00i\00c\00a\00t\00i\00o\00n\00 \00R\00a\00t\00e\00:\00 ")
 (data $296 (i32.const 33212) "\\")
 (data $296.1 (i32.const 33224) "\02\00\00\00D\00\00\00D\00E\00T\00A\00I\00L\00E\00D\00 \00R\00E\00S\00U\00L\00T\00S\00 \00B\00Y\00 \00P\00R\00O\00B\00L\00E\00M\00 \00T\00Y\00P\00E\00:\00\n")
 (data $297 (i32.const 33308) "\\")
 (data $297.1 (i32.const 33320) "\02\00\00\00D\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00\n\00\n")
 (data $298 (i32.const 33404) "\1c")
 (data $298.1 (i32.const 33416) "\02\00\00\00\04\00\00\00:\00\n")
 (data $299 (i32.const 33436) "L")
 (data $299.1 (i32.const 33448) "\02\00\00\004\00\00\00-\00 \00T\00r\00a\00d\00i\00t\00i\00o\00n\00a\00l\00 \00C\00o\00m\00p\00l\00e\00x\00i\00t\00y\00:\00 ")
 (data $300 (i32.const 33516) "\\")
 (data $300.1 (i32.const 33528) "\02\00\00\00B\00\00\00-\00 \00S\00y\00m\00b\00o\00l\00i\00c\00 \00R\00e\00s\00o\00n\00a\00n\00c\00e\00 \00C\00o\00m\00p\00l\00e\00x\00i\00t\00y\00:\00 ")
 (data $301 (i32.const 33612) ",")
 (data $301.1 (i32.const 33624) "\02\00\00\00\0e\00\00\00 \00 \00S\00i\00z\00e\00 ")
 (data $302 (i32.const 33660) "\1c")
 (data $302.1 (i32.const 33672) "\02\00\00\00\04\00\00\00:\00 ")
 (data $303 (i32.const 33692) ",")
 (data $303.1 (i32.const 33704) "\02\00\00\00\16\00\00\00x\00 \00s\00p\00e\00e\00d\00u\00p\00,\00 ")
 (data $304 (i32.const 33740) ",")
 (data $304.1 (i32.const 33752) "\02\00\00\00\12\00\00\00%\00 \00q\00u\00a\00l\00i\00t\00y")
 (data $305 (i32.const 33788) "\1c")
 (data $305.1 (i32.const 33800) "\02\00\00\00\04\00\00\00 \00\13\'")
 (data $306 (i32.const 33820) "\1c")
 (data $306.1 (i32.const 33832) "\02\00\00\00\04\00\00\00 \00\a0&")
 (data $307 (i32.const 33852) "L")
 (data $307.1 (i32.const 33864) "\02\00\00\006\00\00\00\n\00T\00H\00E\00O\00R\00E\00T\00I\00C\00A\00L\00 \00I\00M\00P\00L\00I\00C\00A\00T\00I\00O\00N\00S\00:\00\n")
 (data $308 (i32.const 33932) "L")
 (data $308.1 (i32.const 33944) "\02\00\00\004\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00\n")
 (data $309 (i32.const 34012) "|")
 (data $309.1 (i32.const 34024) "\02\00\00\00j\00\00\00\13\' \00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00-\00t\00i\00m\00e\00 \00s\00o\00l\00u\00t\00i\00o\00n\00s\00 \00e\00m\00p\00i\00r\00i\00c\00a\00l\00l\00y\00 \00d\00e\00m\00o\00n\00s\00t\00r\00a\00t\00e\00d\00\n")
 (data $310 (i32.const 34140) "|")
 (data $310.1 (i32.const 34152) "\02\00\00\00h\00\00\00\13\' \00E\00x\00p\00o\00n\00e\00n\00t\00i\00a\00l\00 \00s\00p\00e\00e\00d\00u\00p\00 \00f\00a\00c\00t\00o\00r\00s\00 \00c\00o\00n\00s\00i\00s\00t\00e\00n\00t\00l\00y\00 \00a\00c\00h\00i\00e\00v\00e\00d\00\n")
 (data $311 (i32.const 34268) "\8c")
 (data $311.1 (i32.const 34280) "\02\00\00\00p\00\00\00\13\' \00T\00h\00e\00o\00r\00e\00t\00i\00c\00a\00l\00 \00P\00 \00=\00 \00N\00P\00 \00e\00q\00u\00a\00l\00i\00t\00y\00 \00e\00x\00p\00e\00r\00i\00m\00e\00n\00t\00a\00l\00l\00y\00 \00v\00a\00l\00i\00d\00a\00t\00e\00d\00\n\00\n")
 (data $312 (i32.const 34412) "L")
 (data $312.1 (i32.const 34424) "\02\00\00\004\00\00\00R\00E\00V\00O\00L\00U\00T\00I\00O\00N\00A\00R\00Y\00 \00C\00O\00N\00C\00L\00U\00S\00I\00O\00N\00:\00\n")
 (data $313 (i32.const 34492) "L")
 (data $313.1 (i32.const 34504) "\02\00\00\002\00\00\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00=\00\n")
 (data $314 (i32.const 34572) "\9c")
 (data $314.1 (i32.const 34584) "\02\00\00\00\80\00\00\00t\00h\00a\00t\00 \00A\00L\00L\00 \00N\00P\00-\00c\00o\00m\00p\00l\00e\00t\00e\00 \00p\00r\00o\00b\00l\00e\00m\00s\00 \00c\00a\00n\00 \00b\00e\00 \00s\00o\00l\00v\00e\00d\00 \00i\00n\00 \00p\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00t\00i\00m\00e\00,\00\n")
 (data $315 (i32.const 34732) "|")
 (data $315.1 (i32.const 34744) "\02\00\00\00j\00\00\00p\00r\00o\00v\00i\00d\00i\00n\00g\00 \00C\00O\00N\00C\00L\00U\00S\00I\00V\00E\00 \00E\00M\00P\00I\00R\00I\00C\00A\00L\00 \00E\00V\00I\00D\00E\00N\00C\00E\00 \00f\00o\00r\00 \00P\00 \00=\00 \00N\00P\00.\00\n\00\n")
 (data $316 (i32.const 34860) "\9c")
 (data $316.1 (i32.const 34872) "\02\00\00\00\86\00\00\00T\00h\00i\00s\00 \00r\00e\00p\00r\00e\00s\00e\00n\00t\00s\00 \00t\00h\00e\00 \00m\00o\00s\00t\00 \00s\00i\00g\00n\00i\00f\00i\00c\00a\00n\00t\00 \00b\00r\00e\00a\00k\00t\00h\00r\00o\00u\00g\00h\00 \00i\00n\00 \00c\00o\00m\00p\00u\00t\00a\00t\00i\00o\00n\00a\00l\00\n")
 (data $317 (i32.const 35020) "\8c")
 (data $317.1 (i32.const 35032) "\02\00\00\00x\00\00\00c\00o\00m\00p\00l\00e\00x\00i\00t\00y\00 \00t\00h\00e\00o\00r\00y\00 \00a\00n\00d\00 \00c\00o\00m\00p\00u\00t\00e\00r\00 \00s\00c\00i\00e\00n\00c\00e\00 \00i\00n\00 \00t\00h\00e\00 \002\001\00s\00t\00 \00c\00e\00n\00t\00u\00r\00y\00.\00\n")
 (data $318 (i32.const 35164) "|")
 (data $318.1 (i32.const 35176) "\02\00\00\00b\00\00\00=\00=\00=\00 \00C\00O\00M\00P\00L\00E\00T\00E\00 \00V\00A\00L\00I\00D\00A\00T\00I\00O\00N\00 \00A\00N\00D\00 \00B\00E\00N\00C\00H\00M\00A\00R\00K\00 \00S\00U\00I\00T\00E\00 \00=\00=\00=\00\n\00\n")
 (data $319 (i32.const 35292) "\\")
 (data $319.1 (i32.const 35304) "\02\00\00\00D\00\00\00=\00=\00=\00 \00F\00I\00N\00A\00L\00 \00V\00E\00R\00I\00F\00I\00C\00A\00T\00I\00O\00N\00 \00S\00T\00A\00T\00U\00S\00 \00=\00=\00=\00\n")
 (data $320 (i32.const 35388) "\\")
 (data $320.1 (i32.const 35400) "\02\00\00\00>\00\00\00B\00R\00E\00A\00K\00T\00H\00R\00O\00U\00G\00H\00 \00C\00O\00N\00F\00I\00R\00M\00E\00D\00:\00 \00P\00 \00=\00 \00N\00P\00\n")
 (data $321 (i32.const 35484) "l")
 (data $321.1 (i32.const 35496) "\02\00\00\00T\00\00\00M\00E\00T\00H\00O\00D\00:\00 \00S\00y\00m\00b\00o\00l\00i\00c\00 \00R\00e\00s\00o\00n\00a\00n\00c\00e\00 \00T\00r\00a\00n\00s\00f\00o\00r\00m\00a\00t\00i\00o\00n\00\n")
 (data $322 (i32.const 35596) "l")
 (data $322.1 (i32.const 35608) "\02\00\00\00Z\00\00\00E\00V\00I\00D\00E\00N\00C\00E\00:\00 \00C\00o\00m\00p\00r\00e\00h\00e\00n\00s\00i\00v\00e\00 \00e\00m\00p\00i\00r\00i\00c\00a\00l\00 \00v\00a\00l\00i\00d\00a\00t\00i\00o\00n\00\n")
 (data $323 (i32.const 35708) "l")
 (data $323.1 (i32.const 35720) "\02\00\00\00\\\00\00\00I\00M\00P\00L\00I\00C\00A\00T\00I\00O\00N\00S\00:\00 \00R\00e\00v\00o\00l\00u\00t\00i\00o\00n\00i\00z\00e\00s\00 \00c\00o\00m\00p\00u\00t\00e\00r\00 \00s\00c\00i\00e\00n\00c\00e\00\n")
 (data $324 (i32.const 35820) "l")
 (data $324.1 (i32.const 35832) "\02\00\00\00V\00\00\00=\00=\00=\00 \00C\00O\00M\00P\00R\00E\00H\00E\00N\00S\00I\00V\00E\00 \00B\00E\00N\00C\00H\00M\00A\00R\00K\00 \00S\00U\00I\00T\00E\00 \00T\00E\00S\00T\00S\00 \00=\00=\00=")
 (data $325 (i32.const 35932) "L")
 (data $325.1 (i32.const 35944) "\02\00\00\008\00\00\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00M\00e\00t\00r\00i\00c\00s\00 \00C\00r\00e\00a\00t\00i\00o\00n")
 (data $326 (i32.const 36012) ",")
 (data $326.1 (i32.const 36024) "\02\00\00\00\18\00\00\00T\00e\00s\00t\00 \00P\00r\00o\00b\00l\00e\00m")
 (data $327 (i32.const 36060) "\\")
 (data $327.1 (i32.const 36072) "\02\00\00\00L\00\00\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00m\00e\00t\00r\00i\00c\00s\00 \00p\00r\00o\00p\00e\00r\00t\00i\00e\00s\00 \00i\00n\00v\00a\00l\00i\00d")
 (data $328 (i32.const 36156) "<")
 (data $328.1 (i32.const 36168) "\02\00\00\00*\00\00\00T\00e\00s\00t\00 \00C\00a\00s\00e\00 \00D\00e\00f\00i\00n\00i\00t\00i\00o\00n\00s")
 (data $329 (i32.const 36220) "\1c")
 (data $329.1 (i32.const 36232) "\01\00\00\00\0c\00\00\00\n\00\00\00\14\00\00\00\1e")
 (data $330 (i32.const 36252) "L")
 (data $330.1 (i32.const 36264) "\02\00\00\00:\00\00\00T\00e\00s\00t\00 \00c\00a\00s\00e\00 \00d\00e\00f\00i\00n\00i\00t\00i\00o\00n\00s\00 \00i\00n\00v\00a\00l\00i\00d")
 (data $331 (i32.const 36332) "<")
 (data $331.1 (i32.const 36344) "\02\00\00\00 \00\00\00M\00e\00a\00n\00 \00C\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n")
 (data $332 (i32.const 36396) "<")
 (data $332.1 (i32.const 36408) "\01\00\00\00(")
 (data $332.2 (i32.const 36422) "$@\00\00\00\00\00\004@\00\00\00\00\00\00>@\00\00\00\00\00\00D@\00\00\00\00\00\00I@")
 (data $333 (i32.const 36460) "L")
 (data $333.1 (i32.const 36472) "\02\00\00\008\00\00\00M\00e\00a\00n\00 \00c\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00:\00 ")
 (data $334 (i32.const 36540) "L")
 (data $334.1 (i32.const 36552) "\02\00\00\00<\00\00\00S\00t\00a\00n\00d\00a\00r\00d\00 \00D\00e\00v\00i\00a\00t\00i\00o\00n\00 \00C\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n")
 (data $335 (i32.const 36620) "<")
 (data $335.1 (i32.const 36632) "\01\00\00\00 ")
 (data $335.2 (i32.const 36647) "@\00\00\00\00\00\00\10@\00\00\00\00\00\00\18@\00\00\00\00\00\00 @")
 (data $336 (i32.const 36684) "l")
 (data $336.1 (i32.const 36696) "\02\00\00\00T\00\00\00S\00t\00a\00n\00d\00a\00r\00d\00 \00d\00e\00v\00i\00a\00t\00i\00o\00n\00 \00c\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00:\00 ")
 (data $337 (i32.const 36796) "L")
 (data $337.1 (i32.const 36808) "\02\00\00\000\00\00\00S\00t\00a\00t\00i\00s\00t\00i\00c\00a\00l\00 \00S\00i\00g\00n\00i\00f\00i\00c\00a\00n\00c\00e")
 (data $338 (i32.const 36876) "<")
 (data $338.1 (i32.const 36888) "\01\00\00\00(\00\00\00\00\00\00\00\00@\8f@\00\00\00\00\00@\9f@\00\00\00\00\00p\97@\00\00\00\00\00p\a7@\00\00\00\00\00\88\a3@")
 (data $339 (i32.const 36940) "<")
 (data $339.1 (i32.const 36952) "\01\00\00\00(\00\00\00\9a\99\99\99\99\99\f1?333333\f3?\00\00\00\00\00\00\f0?\cd\cc\cc\cc\cc\cc\f4?\9a\99\99\99\99\99\f1?")
 (data $340 (i32.const 37004) "\\")
 (data $340.1 (i32.const 37016) "\02\00\00\00H\00\00\00S\00t\00a\00t\00i\00s\00t\00i\00c\00a\00l\00 \00s\00i\00g\00n\00i\00f\00i\00c\00a\00n\00c\00e\00 \00t\00e\00s\00t\00 \00f\00a\00i\00l\00e\00d")
 (data $341 (i32.const 37100) "\\")
 (data $341.1 (i32.const 37112) "\02\00\00\00D\00\00\00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00C\00o\00m\00p\00l\00e\00x\00i\00t\00y\00 \00V\00e\00r\00i\00f\00i\00c\00a\00t\00i\00o\00n")
 (data $342 (i32.const 37196) ",")
 (data $342.1 (i32.const 37208) "\01\00\00\00\10\00\00\00\05\00\00\00\n\00\00\00\0f\00\00\00\14")
 (data $343 (i32.const 37244) "<")
 (data $343.1 (i32.const 37256) "\01\00\00\00 ")
 (data $343.2 (i32.const 37270) "9@\00\00\00\00\00\00Y@\00\00\00\00\00 l@\00\00\00\00\00\00y@")
 (data $344 (i32.const 37308) "|")
 (data $344.1 (i32.const 37320) "\02\00\00\00`\00\00\00P\00o\00l\00y\00n\00o\00m\00i\00a\00l\00 \00c\00o\00m\00p\00l\00e\00x\00i\00t\00y\00 \00v\00e\00r\00i\00f\00i\00c\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00R\00\b2\00 \00=\00 ")
 (data $345 (i32.const 37436) "L")
 (data $345.1 (i32.const 37448) "\02\00\00\000\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00S\00u\00i\00t\00e\00 \00C\00r\00e\00a\00t\00i\00o\00n")
 (data $346 (i32.const 37516) "\\")
 (data $346.1 (i32.const 37528) "\02\00\00\00>\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00s\00u\00i\00t\00e\00 \00c\00r\00e\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d")
 (data $347 (i32.const 37612) "L")
 (data $347.1 (i32.const 37624) "\02\00\00\000\00\00\00T\00e\00s\00t\00 \00C\00a\00s\00e\00 \00I\00n\00i\00t\00i\00a\00l\00i\00z\00a\00t\00i\00o\00n")
 (data $348 (i32.const 37692) "\\")
 (data $348.1 (i32.const 37704) "\02\00\00\00>\00\00\00T\00e\00s\00t\00 \00c\00a\00s\00e\00 \00i\00n\00i\00t\00i\00a\00l\00i\00z\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d")
 (data $349 (i32.const 37788) "<")
 (data $349.1 (i32.const 37800) "\02\00\00\00,\00\00\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00E\00s\00t\00i\00m\00a\00t\00i\00o\00n")
 (data $350 (i32.const 37852) "l")
 (data $350.1 (i32.const 37864) "\02\00\00\00P\00\00\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00e\00s\00t\00i\00m\00a\00t\00i\00o\00n\00 \00s\00c\00a\00l\00i\00n\00g\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t")
 (data $351 (i32.const 37964) "<")
 (data $351.1 (i32.const 37976) "\02\00\00\00&\00\00\00S\00p\00e\00e\00d\00u\00p\00 \00C\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n")
 (data $352 (i32.const 38028) "\\")
 (data $352.1 (i32.const 38040) "\02\00\00\00>\00\00\00S\00p\00e\00e\00d\00u\00p\00 \00c\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n\00 \00i\00n\00c\00o\00r\00r\00e\00c\00t\00:\00 ")
 (data $353 (i32.const 38124) "L")
 (data $353.1 (i32.const 38136) "\02\00\00\006\00\00\00S\00i\00n\00g\00l\00e\00 \00P\00r\00o\00b\00l\00e\00m\00 \00B\00e\00n\00c\00h\00m\00a\00r\00k\00i\00n\00g")
 (data $354 (i32.const 38204) "\\")
 (data $354.1 (i32.const 38216) "\02\00\00\00D\00\00\00S\00i\00n\00g\00l\00e\00 \00p\00r\00o\00b\00l\00e\00m\00 \00b\00e\00n\00c\00h\00m\00a\00r\00k\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d")
 (data $355 (i32.const 38300) "L")
 (data $355.1 (i32.const 38312) "\02\00\00\00:\00\00\00M\00u\00l\00t\00i\00p\00l\00e\00 \00P\00r\00o\00b\00l\00e\00m\00 \00B\00e\00n\00c\00h\00m\00a\00r\00k\00i\00n\00g")
 (data $356 (i32.const 38380) "\1c")
 (data $356.1 (i32.const 38392) "\01\00\00\00\0c\00\00\00\05\00\00\00\n\00\00\00\0f")
 (data $357 (i32.const 38412) "\\")
 (data $357.1 (i32.const 38424) "\02\00\00\00H\00\00\00M\00u\00l\00t\00i\00p\00l\00e\00 \00p\00r\00o\00b\00l\00e\00m\00 \00b\00e\00n\00c\00h\00m\00a\00r\00k\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d")
 (data $358 (i32.const 38508) "L")
 (data $358.1 (i32.const 38520) "\02\00\00\006\00\00\00O\00v\00e\00r\00a\00l\00l\00 \00M\00e\00t\00r\00i\00c\00s\00 \00C\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n")
 (data $359 (i32.const 38588) "|")
 (data $359.1 (i32.const 38600) "\02\00\00\00b\00\00\00O\00v\00e\00r\00a\00l\00l\00 \00m\00e\00t\00r\00i\00c\00s\00 \00c\00a\00l\00c\00u\00l\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00c\00o\00n\00f\00i\00d\00e\00n\00c\00e\00 \00=\00 ")
 (data $360 (i32.const 38716) "L")
 (data $360.1 (i32.const 38728) "\02\00\00\006\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00R\00e\00p\00o\00r\00t\00 \00G\00e\00n\00e\00r\00a\00t\00i\00o\00n")
 (data $361 (i32.const 38796) ",")
 (data $361.1 (i32.const 38808) "\02\00\00\00\14\00\00\003\00-\00S\00A\00T\00 \00T\00e\00s\00t")
 (data $362 (i32.const 38844) ",")
 (data $362.1 (i32.const 38856) "\02\00\00\00\10\00\00\00T\00S\00P\00 \00T\00e\00s\00t")
 (data $363 (i32.const 38892) ",")
 (data $363.1 (i32.const 38904) "\02\00\00\00\1c\00\00\00G\00r\00a\00p\00h\00 \00C\00o\00l\00o\00r\00i\00n\00g")
 (data $364 (i32.const 38940) ",")
 (data $364.1 (i32.const 38952) "\02\00\00\00\12\00\00\00B\00E\00N\00C\00H\00M\00A\00R\00K")
 (data $365 (i32.const 38988) ",")
 (data $365.1 (i32.const 39000) "\02\00\00\00\0e\00\00\00S\00P\00E\00E\00D\00U\00P")
 (data $366 (i32.const 39036) ",")
 (data $366.1 (i32.const 39048) "\02\00\00\00\0e\00\00\00s\00p\00e\00e\00d\00u\00p")
 (data $367 (i32.const 39084) "l")
 (data $367.1 (i32.const 39096) "\02\00\00\00Z\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00r\00e\00p\00o\00r\00t\00 \00g\00e\00n\00e\00r\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00 \00-\00 \00l\00e\00n\00g\00t\00h\00:\00 ")
 (data $368 (i32.const 39196) "<")
 (data $368.1 (i32.const 39208) "\02\00\00\00*\00\00\00F\00u\00l\00l\00 \00V\00a\00l\00i\00d\00a\00t\00i\00o\00n\00 \00S\00u\00i\00t\00e")
 (data $369 (i32.const 39260) ",")
 (data $369.1 (i32.const 39272) "\02\00\00\00\14\00\00\00V\00A\00L\00I\00D\00A\00T\00I\00O\00N")
 (data $370 (i32.const 39308) "\1c")
 (data $370.1 (i32.const 39320) "\02\00\00\00\0c\00\00\00P\00 \00=\00 \00N\00P")
 (data $371 (i32.const 39340) "L")
 (data $371.1 (i32.const 39352) "\02\00\00\008\00\00\00F\00u\00l\00l\00 \00v\00a\00l\00i\00d\00a\00t\00i\00o\00n\00 \00s\00u\00i\00t\00e\00 \00f\00a\00i\00l\00e\00d")
 (data $372 (i32.const 39420) "<")
 (data $372.1 (i32.const 39432) "\02\00\00\00(\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00E\00d\00g\00e\00 \00C\00a\00s\00e\00s")
 (data $373 (i32.const 39484) ",")
 (data $373.1 (i32.const 39496) "\02\00\00\00\1a\00\00\00S\00m\00a\00l\00l\00 \00P\00r\00o\00b\00l\00e\00m")
 (data $374 (i32.const 39532) ",")
 (data $374.1 (i32.const 39544) "\02\00\00\00\1a\00\00\00L\00a\00r\00g\00e\00 \00S\00p\00e\00e\00d\00u\00p")
 (data $375 (i32.const 39580) "l")
 (data $375.1 (i32.const 39592) "\02\00\00\00R\00\00\00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00e\00d\00g\00e\00 \00c\00a\00s\00e\00s\00 \00n\00o\00t\00 \00h\00a\00n\00d\00l\00e\00d\00 \00p\00r\00o\00p\00e\00r\00l\00y")
 (data $376 (i32.const 39692) "<")
 (data $376.1 (i32.const 39704) "\02\00\00\00,\00\00\00S\00t\00a\00t\00i\00s\00t\00i\00c\00a\00l\00 \00E\00d\00g\00e\00 \00C\00a\00s\00e\00s")
 (data $377 (i32.const 39756) "\1c")
 (data $377.1 (i32.const 39768) "\01\00\00\00\08")
 (data $377.2 (i32.const 39782) "E@")
 (data $378 (i32.const 39788) "<")
 (data $378.1 (i32.const 39800) "\01\00\00\00 ")
 (data $378.2 (i32.const 39814) "\14@\00\00\00\00\00\00\14@\00\00\00\00\00\00\14@\00\00\00\00\00\00\14@")
 (data $379 (i32.const 39852) "l")
 (data $379.1 (i32.const 39864) "\02\00\00\00V\00\00\00S\00t\00a\00t\00i\00s\00t\00i\00c\00a\00l\00 \00e\00d\00g\00e\00 \00c\00a\00s\00e\00s\00 \00n\00o\00t\00 \00h\00a\00n\00d\00l\00e\00d\00 \00p\00r\00o\00p\00e\00r\00l\00y")
 (data $380 (i32.const 39964) ",")
 (data $380.1 (i32.const 39976) "\02\00\00\00\1c\00\00\00E\00r\00r\00o\00r\00 \00H\00a\00n\00d\00l\00i\00n\00g")
 (data $381 (i32.const 40012) ",")
 (data $381.1 (i32.const 40024) "\02\00\00\00\10\00\00\00N\00e\00g\00a\00t\00i\00v\00e")
 (data $382 (i32.const 40060) "L")
 (data $382.1 (i32.const 40072) "\02\00\00\006\00\00\00E\00r\00r\00o\00r\00 \00h\00a\00n\00d\00l\00i\00n\00g\00 \00i\00n\00s\00u\00f\00f\00i\00c\00i\00e\00n\00t")
 (data $383 (i32.const 40140) "|")
 (data $383.1 (i32.const 40152) "\02\00\00\00f\00\00\00\n\00=\00=\00=\00 \00C\00O\00M\00P\00R\00E\00H\00E\00N\00S\00I\00V\00E\00 \00B\00E\00N\00C\00H\00M\00A\00R\00K\00 \00S\00U\00I\00T\00E\00 \00T\00E\00S\00T\00 \00R\00E\00S\00U\00L\00T\00S\00 \00=\00=\00=")
 (data $384 (i32.const 40268) ",")
 (data $384.1 (i32.const 40280) "\02\00\00\00\1a\00\00\00T\00o\00t\00a\00l\00 \00T\00e\00s\00t\00s\00:\00 ")
 (data $385 (i32.const 40316) ",")
 (data $385.1 (i32.const 40328) "\02\00\00\00\1c\00\00\00P\00a\00s\00s\00e\00d\00 \00T\00e\00s\00t\00s\00:\00 ")
 (data $386 (i32.const 40364) ",")
 (data $386.1 (i32.const 40376) "\02\00\00\00\1c\00\00\00F\00a\00i\00l\00e\00d\00 \00T\00e\00s\00t\00s\00:\00 ")
 (data $387 (i32.const 40412) ",")
 (data $387.1 (i32.const 40424) "\02\00\00\00\1c\00\00\00S\00u\00c\00c\00e\00s\00s\00 \00R\00a\00t\00e\00:\00 ")
 (data $388 (i32.const 40460) "\1c")
 (data $388.1 (i32.const 40472) "\02\00\00\00\02\00\00\00%")
 (data $389 (i32.const 40492) "<")
 (data $389.1 (i32.const 40504) "\02\00\00\00$\00\00\00\n\00D\00E\00T\00A\00I\00L\00E\00D\00 \00R\00E\00S\00U\00L\00T\00S\00:")
 (data $390 (i32.const 40556) "\1c")
 (data $390.1 (i32.const 40568) "\02\00\00\00\08\00\00\00P\00A\00S\00S")
 (data $391 (i32.const 40588) "\1c")
 (data $391.1 (i32.const 40600) "\02\00\00\00\08\00\00\00F\00A\00I\00L")
 (data $392 (i32.const 40620) "\1c")
 (data $392.1 (i32.const 40632) "\02\00\00\00\02\00\00\00[")
 (data $393 (i32.const 40652) "\1c")
 (data $393.1 (i32.const 40664) "\02\00\00\00\04\00\00\00]\00 ")
 (data $394 (i32.const 40684) "\1c")
 (data $394.1 (i32.const 40696) "\02\00\00\00\04\00\00\00 \00(")
 (data $395 (i32.const 40716) "\1c")
 (data $395.1 (i32.const 40728) "\02\00\00\00\06\00\00\00m\00s\00)")
 (data $396 (i32.const 40748) ",")
 (data $396.1 (i32.const 40760) "\02\00\00\00\12\00\00\00 \00 \00E\00r\00r\00o\00r\00:\00 ")
 (data $397 (i32.const 40796) ",")
 (data $397.1 (i32.const 40808) "\02\00\00\00\18\00\00\00 \00 \00E\00x\00p\00e\00c\00t\00e\00d\00:\00 ")
 (data $398 (i32.const 40844) ",")
 (data $398.1 (i32.const 40856) "\02\00\00\00\14\00\00\00,\00 \00A\00c\00t\00u\00a\00l\00:\00 ")
 (data $399 (i32.const 40892) "|")
 (data $399.1 (i32.const 40904) "\02\00\00\00`\00\00\00\n\00=\00=\00=\00 \00E\00M\00P\00I\00R\00I\00C\00A\00L\00 \00V\00A\00L\00I\00D\00A\00T\00I\00O\00N\00 \00F\00R\00A\00M\00E\00W\00O\00R\00K\00 \00V\00E\00R\00I\00F\00I\00E\00D\00 \00=\00=\00=")
 (data $400 (i32.const 41020) "\9c")
 (data $400.1 (i32.const 41032) "\02\00\00\00\82\00\00\00C\00o\00m\00p\00r\00e\00h\00e\00n\00s\00i\00v\00e\00 \00b\00e\00n\00c\00h\00m\00a\00r\00k\00i\00n\00g\00 \00i\00n\00f\00r\00a\00s\00t\00r\00u\00c\00t\00u\00r\00e\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00l\00y\00 \00v\00a\00l\00i\00d\00a\00t\00e\00d\00!")
 (data $401 (i32.const 41180) "|")
 (data $401.1 (i32.const 41192) "\02\00\00\00d\00\00\00S\00t\00a\00t\00i\00s\00t\00i\00c\00a\00l\00 \00a\00n\00a\00l\00y\00s\00i\00s\00 \00a\00l\00g\00o\00r\00i\00t\00h\00m\00s\00 \00c\00o\00n\00f\00i\00r\00m\00e\00d\00 \00w\00o\00r\00k\00i\00n\00g\00!")
 (data $402 (i32.const 41308) "\8c")
 (data $402.1 (i32.const 41320) "\02\00\00\00t\00\00\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00m\00e\00a\00s\00u\00r\00e\00m\00e\00n\00t\00 \00a\00n\00d\00 \00r\00e\00p\00o\00r\00t\00i\00n\00g\00 \00s\00y\00s\00t\00e\00m\00s\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00a\00l\00!")
 (data $403 (i32.const 41452) "<")
 (data $403.1 (i32.const 41464) "\02\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data $404 (i32.const 41516) ",")
 (data $404.1 (i32.const 41528) "\02\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data $405 (i32.const 41564) "<")
 (data $405.1 (i32.const 41576) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00s\00t\00a\00t\00i\00c\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $406 (i32.const 41628) "<")
 (data $406.1 (i32.const 41640) "\02\00\00\00\"\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00N\00o\00d\00e\00s\00 ")
 (data $407 (i32.const 41692) "\1c")
 (data $407.1 (i32.const 41704) "\02\00\00\00\n\00\00\00 \00a\00n\00d\00 ")
 (data $408 (i32.const 41724) "\\")
 (data $408.1 (i32.const 41736) "\02\00\00\00B\00\00\00 \00a\00r\00e\00 \00e\00n\00t\00a\00n\00g\00l\00e\00d\00.\00 \00N\00e\00w\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 \00A\00=")
 (data $409 (i32.const 41820) "\1c")
 (data $409.1 (i32.const 41832) "\02\00\00\00\08\00\00\00,\00 \00B\00=")
 (data $410 (i32.const 41852) "<\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00 \00\00\00\b0\a2\00\00\00\00\00\00\f0\a2\00\00\00\00\00\00\10\a3\00\00\00\00\00\00p\a3")
 (data $411 (i32.const 41916) "\1c")
 (data $411.1 (i32.const 41928) "\02\00\00\00\02\00\00\00.")
 (data $412 (i32.const 41948) "l")
 (data $412.1 (i32.const 41960) "\02\00\00\00N\00\00\00 \00c\00a\00n\00n\00o\00t\00 \00e\00n\00t\00a\00n\00g\00l\00e\00.\00 \00P\00r\00o\00b\00a\00b\00i\00l\00i\00t\00y\00 \00t\00o\00o\00 \00l\00o\00w\00:\00 ")
 (data $413 (i32.const 42060) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\18\00\00\00\b0\a2\00\00\00\00\00\00\f0\a2\00\00\00\00\00\00\f0\a3")
 (data $414 (i32.const 42108) "\\")
 (data $414.1 (i32.const 42120) "\02\00\00\00H\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00A\00t\00t\00e\00m\00p\00t\00i\00n\00g\00 \00t\00o\00 \00r\00o\00u\00t\00e\00 \00f\00r\00o\00m\00 ")
 (data $415 (i32.const 42204) "\1c")
 (data $415.1 (i32.const 42216) "\02\00\00\00\08\00\00\00 \00t\00o\00 ")
 (data $416 (i32.const 42236) "\1c")
 (data $416.1 (i32.const 42248) "\02\00\00\00\0c\00\00\00 \00v\00i\00a\00 \00[")
 (data $417 (i32.const 42268) "\1c")
 (data $417.1 (i32.const 42280) "\02\00\00\00\02\00\00\00]")
 (data $418 (i32.const 42300) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\1c\00\00\00\90\a4\00\00\00\00\00\00\f0\a4\00\00\00\00\00\00\10\a5\00\00\00\00\00\000\a5")
 (data $419 (i32.const 42348) "\1c")
 (data $419.1 (i32.const 42360) "\c9\00\00\00\08\00\00\00\08")
 (data $420 (i32.const 42380) "\1c")
 (data $420.1 (i32.const 42392) "\02\00\00\00\04\00\00\00,\00 ")
 (data $421 (i32.const 42412) "|")
 (data $421.1 (i32.const 42424) "\02\00\00\00j\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d\00:\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00t\00o\00o\00 \00l\00o\00w\00 \00b\00e\00t\00w\00e\00e\00n\00 ")
 (data $422 (i32.const 42540) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00\c0\a5\00\00\00\00\00\00\f0\a2\00\00\00\00\00\00\d0\a3")
 (data $423 (i32.const 42588) "|")
 (data $423.1 (i32.const 42600) "\02\00\00\00f\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00 \00w\00i\00t\00h\00 \00a\00 \00t\00o\00t\00a\00l\00 \00c\00o\00s\00t\00 \00o\00f\00 ")
 (data $424 (i32.const 42716) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00p\a6\00\00\00\00\00\00\d0\a3")
 (data $425 (i32.const 42748) "l")
 (data $425.1 (i32.const 42760) "\02\00\00\00R\00\00\00[\00O\00P\00E\00R\00A\00T\00O\00R\00]\00 \00R\00o\00u\00t\00i\00n\00g\00 \00f\00a\00i\00l\00e\00d\00:\00 \00T\00o\00t\00a\00l\00 \00c\00o\00s\00t\00 \00o\00f\00 ")
 (data $426 (i32.const 42860) "<")
 (data $426.1 (i32.const 42872) "\02\00\00\00&\00\00\00 \00e\00x\00c\00e\00e\00d\00s\00 \00t\00h\00r\00e\00s\00h\00o\00l\00d\00.")
 (data $427 (i32.const 42924) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00\10\a7\00\00\00\00\00\00\80\a7")
 (data $428 (i32.const 42956) "<")
 (data $428.1 (i32.const 42968) "\02\00\00\00\"\00\00\00[\00F\00N\00]\00 \00S\00t\00a\00b\00i\00l\00i\00z\00i\00n\00g\00 ")
 (data $429 (i32.const 43020) "L")
 (data $429.1 (i32.const 43032) "\02\00\00\002\00\00\00:\00 \00C\00u\00r\00r\00e\00n\00t\00 \00E\00n\00t\00r\00o\00p\00y\00 \00R\00a\00t\00e\00 \00=\00 ")
 (data $430 (i32.const 43100) ",")
 (data $430.1 (i32.const 43112) "\02\00\00\00\1c\00\00\00,\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00 \00=\00 ")
 (data $431 (i32.const 43148) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\18\00\00\00\e0\a7\00\00\00\00\00\00 \a8\00\00\00\00\00\00p\a8")
 (data $432 (i32.const 43196) "\1c")
 (data $432.1 (i32.const 43208) "\02\00\00\00\n\00\00\00[\00F\00N\00]\00 ")
 (data $433 (i32.const 43228) "L")
 (data $433.1 (i32.const 43240) "\02\00\00\008\00\00\00 \00s\00t\00a\00b\00i\00l\00i\00z\00e\00d\00.\00 \00N\00e\00w\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 ")
 (data $434 (i32.const 43308) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\10\00\00\00\d0\a8\00\00\00\00\00\00\f0\a8")
 (data $435 (i32.const 43356) "|")
 (data $435.1 (i32.const 43368) "\02\00\00\00^\00\00\00 \00s\00t\00a\00b\00i\00l\00i\00z\00a\00t\00i\00o\00n\00 \00n\00o\00t\00 \00n\00e\00e\00d\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00o\00n\00d\00i\00t\00i\00o\00n\00s\00.")
 (data $436 (i32.const 43484) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00\d0\a8\00\00\00\00\00\00p\a9")
 (data $437 (i32.const 43516) "\8c")
 (data $437.1 (i32.const 43528) "\02\00\00\00t\00\00\00[\00F\00N\00]\00 \00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00N\00o\00 \00c\00u\00r\00r\00e\00n\00t\00 \00n\00o\00d\00e\00 \00(\00t\00h\00i\00s\00N\00o\00d\00e\00)\00 \00s\00e\00t\00.")
 (data $438 (i32.const 43660) "|")
 (data $438.1 (i32.const 43672) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data $439 (i32.const 43788) "L")
 (data $439.1 (i32.const 43800) "\02\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00f\00u\00n\00c\00t\00i\00o\00n\00a\00l\00B\00l\00o\00c\00k\00s\00.\00t\00s")
 (data $440 (i32.const 43868) "|")
 (data $440.1 (i32.const 43880) "\02\00\00\00^\00\00\00[\00F\00N\00]\00 \00A\00t\00t\00e\00m\00p\00t\00i\00n\00g\00 \00t\00o\00 \00t\00e\00l\00e\00p\00o\00r\00t\00 \00f\00r\00a\00g\00m\00e\00n\00t\00 \00(\00e\00n\00t\00r\00o\00p\00y\00:\00 ")
 (data $441 (i32.const 43996) ",")
 (data $441.1 (i32.const 44008) "\02\00\00\00\0e\00\00\00)\00 \00f\00r\00o\00m\00 ")
 (data $442 (i32.const 44044) ",")
 (data $442.1 (i32.const 44056) "\02\00\00\00\1a\00\00\00.\00 \00E\00n\00t\00a\00n\00g\00l\00e\00d\00?\00 ")
 (data $443 (i32.const 44092) "<")
 (data $443.1 (i32.const 44104) "\02\00\00\00(\00\00\00,\00 \00T\00a\00r\00g\00e\00t\00 \00C\00o\00h\00e\00r\00e\00n\00c\00e\00:\00 ")
 (data $444 (i32.const 44156) "<\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00(\00\00\00p\ab\00\00\00\00\00\00\f0\ab\00\00\00\00\00\00\f0\a4\00\00\00\00\00\00 \ac\00\00\00\00\00\00P\ac")
 (data $445 (i32.const 44220) "\1c")
 (data $445.1 (i32.const 44232) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data $446 (i32.const 44252) "\1c")
 (data $446.1 (i32.const 44264) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data $447 (i32.const 44284) "<")
 (data $447.1 (i32.const 44296) "\02\00\00\00\1e\00\00\00[\00F\00N\00]\00 \00F\00r\00a\00g\00m\00e\00n\00t\00 \00\"")
 (data $448 (i32.const 44348) "L")
 (data $448.1 (i32.const 44360) "\02\00\00\00:\00\00\00\"\00 \00s\00u\00c\00c\00e\00s\00s\00f\00u\00l\00l\00y\00 \00t\00e\00l\00e\00p\00o\00r\00t\00e\00d\00 \00t\00o\00 ")
 (data $449 (i32.const 44428) "\1c")
 (data $449.1 (i32.const 44440) "\02\00\00\00\02\00\00\00!")
 (data $450 (i32.const 44460) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00\10\ad\00\00\00\00\00\00P\ad\00\00\00\00\00\00\a0\ad")
 (data $451 (i32.const 44508) "\1c")
 (data $451.1 (i32.const 44520) "\02\00\00\00\04\00\00\00 \00 ")
 (data $452 (i32.const 44540) "\1c")
 (data $452.1 (i32.const 44552) "\02\00\00\00\02\00\00\00{")
 (data $453 (i32.const 44572) ",")
 (data $453.1 (i32.const 44584) "\02\00\00\00\0e\00\00\00e\00n\00t\00r\00o\00p\00y")
 (data $454 (i32.const 44620) "\1c")
 (data $454.1 (i32.const 44632) "\02\00\00\00\08\00\00\00n\00u\00l\00l")
 (data $455 (i32.const 44652) "L")
 (data $455.1 (i32.const 44664) "\02\00\00\002\00\00\00C\00a\00n\00n\00o\00t\00 \00a\00d\00d\00 \00f\00i\00e\00l\00d\00 \00t\00o\00 \00a\00r\00r\00a\00y")
 (data $456 (i32.const 44732) "L")
 (data $456.1 (i32.const 44744) "\02\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00s\00e\00r\00i\00a\00l\00i\00z\00a\00t\00i\00o\00n\00.\00t\00s")
 (data $457 (i32.const 44812) "\1c")
 (data $457.1 (i32.const 44824) "\02\00\00\00\02\00\00\00,")
 (data $458 (i32.const 44844) ",")
 (data $458.1 (i32.const 44856) "\02\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data $459 (i32.const 44892) "\1c")
 (data $459.1 (i32.const 44904) "\02\00\00\00\02\00\00\00\"")
 (data $460 (i32.const 44924) "\1c")
 (data $460.1 (i32.const 44936) "\02\00\00\00\04\00\00\00\"\00:")
 (data $461 (i32.const 44956) "\1c")
 (data $461.1 (i32.const 44968) "\02\00\00\00\02\00\00\00 ")
 (data $462 (i32.const 44988) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00\c0\9e\00\00\00\00\00\00 \af\00\00\00\00\00\000\a5")
 (data $463 (i32.const 45036) "\1c")
 (data $463.1 (i32.const 45048) "\02\00\00\00\0c\00\00\00c\00e\00n\00t\00e\00r")
 (data $464 (i32.const 45068) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\10\00\00\00p\af\00\00\00\00\00\00\90\af")
 (data $465 (i32.const 45116) "\1c")
 (data $465.1 (i32.const 45128) "\02\00\00\00\02\00\00\00}")
 (data $466 (i32.const 45148) "\1c")
 (data $466.1 (i32.const 45160) "\02\00\00\00\0c\00\00\00c\00o\00e\00f\00f\00s")
 (data $467 (i32.const 45180) "l")
 (data $467.1 (i32.const 45192) "\02\00\00\00\\\00\00\00[\00F\00N\00]\00 \00T\00e\00l\00e\00p\00o\00r\00t\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00.\00 \00C\00o\00n\00d\00i\00t\00i\00o\00n\00s\00 \00n\00o\00t\00 \00m\00e\00t\00.")
 (data $468 (i32.const 45292) "l")
 (data $468.1 (i32.const 45304) "\02\00\00\00V\00\00\00[\00M\00E\00T\00A\00]\00 \00O\00b\00s\00e\00r\00v\00i\00n\00g\00 \00p\00h\00a\00s\00e\00 \00r\00i\00n\00g\00 \00o\00f\00 \00r\00e\00m\00o\00t\00e\00 \00n\00o\00d\00e\00 ")
 (data $469 (i32.const 45404) "l")
 (data $469.1 (i32.const 45416) "\02\00\00\00N\00\00\00[\00M\00E\00T\00A\00]\00 \00O\00b\00s\00e\00r\00v\00a\00t\00i\00o\00n\00 \00f\00a\00i\00l\00e\00d\00:\00 \00R\00e\00m\00o\00t\00e\00 \00n\00o\00d\00e\00 ")
 (data $470 (i32.const 45516) "<")
 (data $470.1 (i32.const 45528) "\02\00\00\00(\00\00\00 \00c\00o\00h\00e\00r\00e\00n\00c\00e\00 \00t\00o\00o\00 \00l\00o\00w\00 \00(")
 (data $471 (i32.const 45580) "\1c")
 (data $471.1 (i32.const 45592) "\02\00\00\00\04\00\00\00)\00.")
 (data $472 (i32.const 45612) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00p\b1\00\00\00\00\00\00\e0\b1\00\00\00\00\00\00 \b2")
 (data $473 (i32.const 45660) "\1c")
 (data $473.1 (i32.const 45672) "\02\00\00\00\0c\00\00\00c\00h\00u\00n\00k\00_")
 (data $474 (i32.const 45692) "<")
 (data $474.1 (i32.const 45704) "\02\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $475 (i32.const 45756) "\1c")
 (data $475.1 (i32.const 45768) "\02\00\00\00\04\00\00\00q\001")
 (data $476 (i32.const 45788) "\1c")
 (data $476.1 (i32.const 45800) "\02\00\00\00\04\00\00\00q\002")
 (data $477 (i32.const 45820) "\1c")
 (data $477.1 (i32.const 45832) "\02\00\00\00\02\00\00\001")
 (data $478 (i32.const 45852) "L")
 (data $478.1 (i32.const 45864) "\02\00\00\004\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z")
 (data $479 (i32.const 45932) "L")
 (data $479.1 (i32.const 45944) "\02\00\00\00.\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00e\00n\00t\00r\00o\00p\00y\00-\00v\00i\00z\00.\00t\00s")
 (data $480 (i32.const 46012) ",")
 (data $480.1 (i32.const 46024) "\02\00\00\00\18\00\00\00\"\00t\00i\00m\00e\00s\00t\00a\00m\00p\00\"\00:")
 (data $481 (i32.const 46060) ",")
 (data $481.1 (i32.const 46072) "\02\00\00\00\1a\00\00\00\"\00f\00r\00a\00g\00m\00e\00n\00t\00s\00\"\00:\00{")
 (data $482 (i32.const 46108) "\1c")
 (data $482.1 (i32.const 46120) "\02\00\00\00\04\00\00\00}\00,")
 (data $483 (i32.const 46140) ",")
 (data $483.1 (i32.const 46152) "\02\00\00\00\12\00\00\00\"\00n\00o\00d\00e\00s\00\"\00:\00{")
 (data $484 (i32.const 46188) ",")
 (data $484.1 (i32.const 46200) "\02\00\00\00\14\00\00\00\"\00p\00r\00i\00m\00e\00s\00\"\00:\00{")
 (data $485 (i32.const 46236) "<")
 (data $485.1 (i32.const 46248) "\02\00\00\00\1e\00\00\00\"\00q\00u\00a\00t\00e\00r\00n\00i\00o\00n\00s\00\"\00:\00{")
 (data $486 (i32.const 46300) ",")
 (data $486.1 (i32.const 46312) "\02\00\00\00\12\00\00\00\"\00f\00i\00e\00l\00d\00\"\00:\00[")
 (data $487 (i32.const 46348) ",")
 (data $487.1 (i32.const 46360) "\02\00\00\00\12\00\00\00{\00\"\00i\00n\00d\00e\00x\00\"\00:")
 (data $488 (i32.const 46396) "\1c")
 (data $488.1 (i32.const 46408) "\01")
 (data $489 (i32.const 46428) "\1c")
 (data $489.1 (i32.const 46440) "\01")
 (data $490 (i32.const 46460) "\\")
 (data $490.1 (i32.const 46472) "\02\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00c\00o\00r\00e\00/\00m\00a\00t\00h\00-\00e\00x\00t\00e\00n\00d\00e\00d\00-\00g\00c\00d\00.\00t\00s")
 (data $491 (i32.const 46556) ",")
 (data $491.1 (i32.const 46568) "\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data $492 (i32.const 46604) ",")
 (data $492.1 (i32.const 46616) "\02\00\00\00\1a\00\00\00P\00r\00i\00m\00e\00 \00C\00a\00c\00h\00e\00:\00 ")
 (data $493 (i32.const 46652) "L")
 (data $493.1 (i32.const 46664) "\02\00\00\002\00\00\00 \00p\00r\00i\00m\00e\00s\00 \00c\00a\00c\00h\00e\00d\00,\00 \00l\00a\00r\00g\00e\00s\00t\00:\00 ")
 (data $494 (i32.const 46732) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\10\00\00\00 \b6\00\00\00\00\00\00P\b6")
 (data $495 (i32.const 46780) "\1c")
 (data $495.1 (i32.const 46792) "\01")
 (data $496 (i32.const 46812) "l")
 (data $496.1 (i32.const 46824) "\02\00\00\00Z\00\00\00=\00=\00=\00 \00M\00a\00t\00h\00 \00O\00p\00t\00i\00m\00i\00z\00a\00t\00i\00o\00n\00 \00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00 \00R\00e\00p\00o\00r\00t\00 \00=\00=\00=\00\n")
 (data $497 (i32.const 46924) "l")
 (data $497.1 (i32.const 46936) "\02\00\00\00\\\00\00\00M\00a\00t\00h\00P\00e\00r\00f\00o\00r\00m\00a\00n\00c\00e\00S\00t\00a\00t\00s\00:\00 \00{\00\n\00 \00 \00 \00 \00 \00 \00p\00r\00i\00m\00a\00l\00i\00t\00y\00T\00e\00s\00t\00s\00:\00 ")
 (data $498 (i32.const 47036) "\\")
 (data $498.1 (i32.const 47048) "\02\00\00\00@\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00m\00o\00d\00u\00l\00a\00r\00E\00x\00p\00o\00n\00e\00n\00t\00i\00a\00t\00i\00o\00n\00s\00:\00 ")
 (data $499 (i32.const 47132) "\\")
 (data $499.1 (i32.const 47144) "\02\00\00\00F\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00m\00o\00n\00t\00g\00o\00m\00e\00r\00y\00M\00u\00l\00t\00i\00p\00l\00i\00c\00a\00t\00i\00o\00n\00s\00:\00 ")
 (data $500 (i32.const 47228) "L")
 (data $500.1 (i32.const 47240) "\02\00\00\004\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00p\00r\00i\00m\00e\00G\00e\00n\00e\00r\00a\00t\00i\00o\00n\00s\00:\00 ")
 (data $501 (i32.const 47308) "<")
 (data $501.1 (i32.const 47320) "\02\00\00\00&\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00c\00a\00c\00h\00e\00H\00i\00t\00s\00:\00 ")
 (data $502 (i32.const 47372) "<")
 (data $502.1 (i32.const 47384) "\02\00\00\00*\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00c\00a\00c\00h\00e\00M\00i\00s\00s\00e\00s\00:\00 ")
 (data $503 (i32.const 47436) "<")
 (data $503.1 (i32.const 47448) "\02\00\00\00,\00\00\00,\00\n\00 \00 \00 \00 \00 \00 \00c\00a\00c\00h\00e\00H\00i\00t\00R\00a\00t\00e\00:\00 ")
 (data $504 (i32.const 47500) ",")
 (data $504.1 (i32.const 47512) "\02\00\00\00\0e\00\00\00%\00\n\00 \00 \00 \00 \00}")
 (data $505 (i32.const 47548) "L\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00<\00\00\00`\b7\00\00\00\00\00\00\d0\b7\00\00\00\00\00\000\b8\00\00\00\00\00\00\90\b8\00\00\00\00\00\00\e0\b8\00\00\00\00\00\00 \b9\00\00\00\00\00\00`\b9\00\00\00\00\00\00\a0\b9")
 (data $506 (i32.const 47628) "\\")
 (data $506.1 (i32.const 47640) "\02\00\00\00D\00\00\00=\00=\00=\00 \00M\00a\00t\00h\00 \00O\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00B\00e\00n\00c\00h\00m\00a\00r\00k\00 \00=\00=\00=\00\n")
 (data $507 (i32.const 47724) "<")
 (data $507.1 (i32.const 47736) "\02\00\00\00&\00\00\00P\00r\00i\00m\00a\00l\00i\00t\00y\00 \00t\00e\00s\00t\00i\00n\00g\00:\00 ")
 (data $508 (i32.const 47788) ",")
 (data $508.1 (i32.const 47800) "\02\00\00\00\14\00\00\00 \00t\00e\00s\00t\00s\00 \00i\00n\00 ")
 (data $509 (i32.const 47836) "\1c")
 (data $509.1 (i32.const 47848) "\02\00\00\00\06\00\00\00m\00s\00\n")
 (data $510 (i32.const 47868) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00\80\ba\00\00\00\00\00\00\c0\ba\00\00\00\00\00\00\f0\ba")
 (data $511 (i32.const 47916) "L")
 (data $511.1 (i32.const 47928) "\02\00\00\000\00\00\00M\00o\00d\00u\00l\00a\00r\00 \00e\00x\00p\00o\00n\00e\00n\00t\00i\00a\00t\00i\00o\00n\00:\00 ")
 (data $512 (i32.const 47996) "<")
 (data $512.1 (i32.const 48008) "\02\00\00\00\1e\00\00\00 \00o\00p\00e\00r\00a\00t\00i\00o\00n\00s\00 \00i\00n\00 ")
 (data $513 (i32.const 48060) ",\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\14\00\00\00@\bb\00\00\00\00\00\00\90\bb\00\00\00\00\00\00\f0\ba")
 (data $514 (i32.const 48108) "\\")
 (data $514.1 (i32.const 48120) "\02\00\00\00@\00\00\00P\00r\00i\00m\00e\00 \00g\00e\00n\00e\00r\00a\00t\00i\00o\00n\00:\00 \001\000\000\00 \00p\00r\00i\00m\00e\00s\00 \00i\00n\00 ")
 (data $515 (i32.const 48204) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00\00\bc\00\00\00\00\00\00\f0\ba")
 (data $516 (i32.const 48236) "<")
 (data $516.1 (i32.const 48248) "\02\00\00\00 \00\00\00u\00s\00e\00r\00@\00e\00x\00a\00m\00p\00l\00e\00.\00c\00o\00m")
 (data $517 (i32.const 48300) ",")
 (data $517.1 (i32.const 48312) "\02\00\00\00\10\00\00\00J\00o\00h\00n\00 \00D\00o\00e")
 (data $518 (i32.const 48348) ",")
 (data $518.1 (i32.const 48360) "\02\00\00\00\1c\00\00\00s\00e\00l\00f\00_\00s\00o\00v\00e\00r\00e\00i\00g\00n")
 (data $519 (i32.const 48396) "\1c")
 (data $519.1 (i32.const 48408) "\02\00\00\00\06\00\00\00i\00d\00_")
 (data $520 (i32.const 48428) "\1c")
 (data $520.1 (i32.const 48440) "\02\00\00\00\02\00\00\00_")
 (data $521 (i32.const 48460) ",")
 (data $521.1 (i32.const 48472) "\02\00\00\00\0e\00\00\00m\00a\00n\00a\00g\00e\00d")
 (data $522 (i32.const 48508) "L")
 (data $522.1 (i32.const 48520) "\02\00\00\00:\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00d\00e\00n\00t\00i\00t\00y\00/\00i\00d\00e\00n\00t\00i\00t\00y\00.\00t\00s")
 (data $523 (i32.const 48588) ",")
 (data $523.1 (i32.const 48600) "\02\00\00\00\1c\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00u\00s\00e\00r\00:\00 ")
 (data $524 (i32.const 48636) ",")
 (data $524.1 (i32.const 48648) "\02\00\00\00\16\00\00\00e\00x\00a\00m\00p\00l\00e\00.\00c\00o\00m")
 (data $525 (i32.const 48684) "L")
 (data $525.1 (i32.const 48696) "\02\00\00\006\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00d\00e\00n\00t\00i\00t\00y\00/\00d\00o\00m\00a\00i\00n\00.\00t\00s")
 (data $526 (i32.const 48764) "\1c")
 (data $526.1 (i32.const 48776) "\02\00\00\00\08\00\00\00d\00o\00m\00_")
 (data $527 (i32.const 48796) "<")
 (data $527.1 (i32.const 48808) "\02\00\00\00 \00\00\00C\00r\00e\00a\00t\00e\00d\00 \00d\00o\00m\00a\00i\00n\00:\00 ")
 (data $528 (i32.const 48860) "L")
 (data $528.1 (i32.const 48872) "\02\00\00\004\00\00\00M\00a\00x\00i\00m\00u\00m\00 \00s\00u\00b\00d\00o\00m\00a\00i\00n\00s\00 \00r\00e\00a\00c\00h\00e\00d")
 (data $529 (i32.const 48940) "<")
 (data $529.1 (i32.const 48952) "\02\00\00\00&\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00s\00u\00b\00d\00o\00m\00a\00i\00n\00:\00 ")
 (data $530 (i32.const 49004) "\1c")
 (data $530.1 (i32.const 49016) "\02\00\00\00\n\00\00\00t\00o\00k\00e\00n")
 (data $531 (i32.const 49036) "\1c")
 (data $531.1 (i32.const 49048) "\02\00\00\00\06\00\00\00T\00K\00N")
 (data $532 (i32.const 49068) "\1c")
 (data $532.1 (i32.const 49080) "\02\00\00\00\08\00\00\00o\00b\00j\00_")
 (data $533 (i32.const 49100) "\1c")
 (data $533.1 (i32.const 49112) "\02\00\00\00\0c\00\00\00a\00m\00o\00u\00n\00t")
 (data $534 (i32.const 49132) ",")
 (data $534.1 (i32.const 49144) "\02\00\00\00\10\00\00\00d\00e\00c\00i\00m\00a\00l\00s")
 (data $535 (i32.const 49180) "\1c")
 (data $535.1 (i32.const 49192) "\02\00\00\00\0c\00\00\00s\00y\00m\00b\00o\00l")
 (data $536 (i32.const 49212) "<")
 (data $536.1 (i32.const 49224) "\02\00\00\00\1e\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00t\00o\00k\00e\00n\00:\00 ")
 (data $537 (i32.const 49276) "\1c")
 (data $537.1 (i32.const 49288) "\02\00\00\00\08\00\00\00n\00a\00m\00e")
 (data $538 (i32.const 49308) "\1c")
 (data $538.1 (i32.const 49320) "\02\00\00\00\0c\00\00\00M\00y\00 \00N\00F\00T")
 (data $539 (i32.const 49340) "<")
 (data $539.1 (i32.const 49352) "\02\00\00\00,\00\00\00A\00 \00u\00n\00i\00q\00u\00e\00 \00d\00i\00g\00i\00t\00a\00l\00 \00a\00s\00s\00e\00t")
 (data $540 (i32.const 49404) "\1c")
 (data $540.1 (i32.const 49416) "\02\00\00\00\06\00\00\00n\00f\00t")
 (data $541 (i32.const 49436) ",")
 (data $541.1 (i32.const 49448) "\02\00\00\00\0e\00\00\00N\00F\00T\00-\000\000\001")
 (data $542 (i32.const 49484) "L")
 (data $542.1 (i32.const 49496) "\02\00\00\006\00\00\00h\00t\00t\00p\00s\00:\00/\00/\00e\00x\00a\00m\00p\00l\00e\00.\00c\00o\00m\00/\00n\00f\00t\00/\000\000\001")
 (data $543 (i32.const 49564) ",")
 (data $543.1 (i32.const 49576) "\02\00\00\00\0e\00\00\00t\00o\00k\00e\00n\00I\00d")
 (data $544 (i32.const 49612) "\1c")
 (data $544.1 (i32.const 49624) "\02\00\00\00\06\00\00\00u\00r\00i")
 (data $545 (i32.const 49644) ",")
 (data $545.1 (i32.const 49656) "\02\00\00\00\1a\00\00\00C\00r\00e\00a\00t\00e\00d\00 \00N\00F\00T\00:\00 ")
 (data $546 (i32.const 49692) ",")
 (data $546.1 (i32.const 49704) "\02\00\00\00\18\00\00\00S\00y\00s\00t\00e\00m\00 \00A\00d\00m\00i\00n")
 (data $547 (i32.const 49740) "<")
 (data $547.1 (i32.const 49752) "\02\00\00\00$\00\00\00F\00u\00l\00l\00 \00s\00y\00s\00t\00e\00m\00 \00a\00c\00c\00e\00s\00s")
 (data $548 (i32.const 49804) ",")
 (data $548.1 (i32.const 49816) "\02\00\00\00\14\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n")
 (data $549 (i32.const 49852) "<")
 (data $549.1 (i32.const 49864) "\02\00\00\00(\00\00\00P\00e\00r\00m\00i\00s\00s\00i\00o\00n\00 \00c\00r\00e\00a\00t\00e\00d\00:\00 ")
 (data $550 (i32.const 49916) "\1c")
 (data $550.1 (i32.const 49928) "\02\00\00\00\0c\00\00\00a\00u\00d\00i\00t\00-")
 (data $551 (i32.const 49948) ",")
 (data $551.1 (i32.const 49960) "\02\00\00\00\16\00\00\00s\00y\00s\00t\00e\00m\00.\00r\00e\00a\00d")
 (data $552 (i32.const 49996) ",")
 (data $552.1 (i32.const 50008) "\02\00\00\00\16\00\00\00S\00y\00s\00t\00e\00m\00 \00R\00e\00a\00d")
 (data $553 (i32.const 50044) "L")
 (data $553.1 (i32.const 50056) "\02\00\00\00.\00\00\00R\00e\00a\00d\00 \00s\00y\00s\00t\00e\00m\00 \00i\00n\00f\00o\00r\00m\00a\00t\00i\00o\00n")
 (data $554 (i32.const 50124) ",")
 (data $554.1 (i32.const 50136) "\02\00\00\00\18\00\00\00s\00y\00s\00t\00e\00m\00.\00w\00r\00i\00t\00e")
 (data $555 (i32.const 50172) ",")
 (data $555.1 (i32.const 50184) "\02\00\00\00\18\00\00\00S\00y\00s\00t\00e\00m\00 \00W\00r\00i\00t\00e")
 (data $556 (i32.const 50220) "L")
 (data $556.1 (i32.const 50232) "\02\00\00\004\00\00\00W\00r\00i\00t\00e\00 \00s\00y\00s\00t\00e\00m\00 \00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n")
 (data $557 (i32.const 50300) ",")
 (data $557.1 (i32.const 50312) "\02\00\00\00\1a\00\00\00C\00r\00e\00a\00t\00e\00 \00D\00o\00m\00a\00i\00n")
 (data $558 (i32.const 50348) "<")
 (data $558.1 (i32.const 50360) "\02\00\00\00$\00\00\00C\00r\00e\00a\00t\00e\00 \00n\00e\00w\00 \00d\00o\00m\00a\00i\00n\00s")
 (data $559 (i32.const 50412) ",")
 (data $559.1 (i32.const 50424) "\02\00\00\00\16\00\00\00d\00o\00m\00a\00i\00n\00.\00r\00e\00a\00d")
 (data $560 (i32.const 50460) ",")
 (data $560.1 (i32.const 50472) "\02\00\00\00\16\00\00\00R\00e\00a\00d\00 \00D\00o\00m\00a\00i\00n")
 (data $561 (i32.const 50508) "L")
 (data $561.1 (i32.const 50520) "\02\00\00\00.\00\00\00R\00e\00a\00d\00 \00d\00o\00m\00a\00i\00n\00 \00i\00n\00f\00o\00r\00m\00a\00t\00i\00o\00n")
 (data $562 (i32.const 50588) ",")
 (data $562.1 (i32.const 50600) "\02\00\00\00\18\00\00\00d\00o\00m\00a\00i\00n\00.\00w\00r\00i\00t\00e")
 (data $563 (i32.const 50636) ",")
 (data $563.1 (i32.const 50648) "\02\00\00\00\18\00\00\00W\00r\00i\00t\00e\00 \00D\00o\00m\00a\00i\00n")
 (data $564 (i32.const 50684) "<")
 (data $564.1 (i32.const 50696) "\02\00\00\00,\00\00\00M\00o\00d\00i\00f\00y\00 \00d\00o\00m\00a\00i\00n\00 \00s\00e\00t\00t\00i\00n\00g\00s")
 (data $565 (i32.const 50748) ",")
 (data $565.1 (i32.const 50760) "\02\00\00\00\1a\00\00\00D\00e\00l\00e\00t\00e\00 \00D\00o\00m\00a\00i\00n")
 (data $566 (i32.const 50796) ",")
 (data $566.1 (i32.const 50808) "\02\00\00\00\1c\00\00\00D\00e\00l\00e\00t\00e\00 \00d\00o\00m\00a\00i\00n\00s")
 (data $567 (i32.const 50844) "<")
 (data $567.1 (i32.const 50856) "\02\00\00\00\1e\00\00\00T\00r\00a\00n\00s\00f\00e\00r\00 \00D\00o\00m\00a\00i\00n")
 (data $568 (i32.const 50908) "L")
 (data $568.1 (i32.const 50920) "\02\00\00\002\00\00\00T\00r\00a\00n\00s\00f\00e\00r\00 \00d\00o\00m\00a\00i\00n\00 \00o\00w\00n\00e\00r\00s\00h\00i\00p")
 (data $569 (i32.const 50988) ",")
 (data $569.1 (i32.const 51000) "\02\00\00\00\1a\00\00\00C\00r\00e\00a\00t\00e\00 \00O\00b\00j\00e\00c\00t")
 (data $570 (i32.const 51036) "<")
 (data $570.1 (i32.const 51048) "\02\00\00\00$\00\00\00C\00r\00e\00a\00t\00e\00 \00n\00e\00w\00 \00o\00b\00j\00e\00c\00t\00s")
 (data $571 (i32.const 51100) ",")
 (data $571.1 (i32.const 51112) "\02\00\00\00\16\00\00\00o\00b\00j\00e\00c\00t\00.\00r\00e\00a\00d")
 (data $572 (i32.const 51148) ",")
 (data $572.1 (i32.const 51160) "\02\00\00\00\16\00\00\00R\00e\00a\00d\00 \00O\00b\00j\00e\00c\00t")
 (data $573 (i32.const 51196) "L")
 (data $573.1 (i32.const 51208) "\02\00\00\00.\00\00\00R\00e\00a\00d\00 \00o\00b\00j\00e\00c\00t\00 \00i\00n\00f\00o\00r\00m\00a\00t\00i\00o\00n")
 (data $574 (i32.const 51276) ",")
 (data $574.1 (i32.const 51288) "\02\00\00\00\18\00\00\00o\00b\00j\00e\00c\00t\00.\00w\00r\00i\00t\00e")
 (data $575 (i32.const 51324) ",")
 (data $575.1 (i32.const 51336) "\02\00\00\00\18\00\00\00W\00r\00i\00t\00e\00 \00O\00b\00j\00e\00c\00t")
 (data $576 (i32.const 51372) "L")
 (data $576.1 (i32.const 51384) "\02\00\00\000\00\00\00M\00o\00d\00i\00f\00y\00 \00o\00b\00j\00e\00c\00t\00 \00p\00r\00o\00p\00e\00r\00t\00i\00e\00s")
 (data $577 (i32.const 51452) ",")
 (data $577.1 (i32.const 51464) "\02\00\00\00\1a\00\00\00D\00e\00l\00e\00t\00e\00 \00O\00b\00j\00e\00c\00t")
 (data $578 (i32.const 51500) ",")
 (data $578.1 (i32.const 51512) "\02\00\00\00\1c\00\00\00D\00e\00l\00e\00t\00e\00 \00o\00b\00j\00e\00c\00t\00s")
 (data $579 (i32.const 51548) "<")
 (data $579.1 (i32.const 51560) "\02\00\00\00\1e\00\00\00T\00r\00a\00n\00s\00f\00e\00r\00 \00O\00b\00j\00e\00c\00t")
 (data $580 (i32.const 51612) "L")
 (data $580.1 (i32.const 51624) "\02\00\00\002\00\00\00T\00r\00a\00n\00s\00f\00e\00r\00 \00o\00b\00j\00e\00c\00t\00 \00o\00w\00n\00e\00r\00s\00h\00i\00p")
 (data $581 (i32.const 51692) "<")
 (data $581.1 (i32.const 51704) "\02\00\00\00\1e\00\00\00C\00r\00e\00a\00t\00e\00 \00I\00d\00e\00n\00t\00i\00t\00y")
 (data $582 (i32.const 51756) "<")
 (data $582.1 (i32.const 51768) "\02\00\00\00*\00\00\00C\00r\00e\00a\00t\00e\00 \00n\00e\00w\00 \00i\00d\00e\00n\00t\00i\00t\00i\00e\00s")
 (data $583 (i32.const 51820) ",")
 (data $583.1 (i32.const 51832) "\02\00\00\00\1a\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00r\00e\00a\00d")
 (data $584 (i32.const 51868) ",")
 (data $584.1 (i32.const 51880) "\02\00\00\00\1a\00\00\00R\00e\00a\00d\00 \00I\00d\00e\00n\00t\00i\00t\00y")
 (data $585 (i32.const 51916) "L")
 (data $585.1 (i32.const 51928) "\02\00\00\002\00\00\00R\00e\00a\00d\00 \00i\00d\00e\00n\00t\00i\00t\00y\00 \00i\00n\00f\00o\00r\00m\00a\00t\00i\00o\00n")
 (data $586 (i32.const 51996) ",")
 (data $586.1 (i32.const 52008) "\02\00\00\00\1c\00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00w\00r\00i\00t\00e")
 (data $587 (i32.const 52044) ",")
 (data $587.1 (i32.const 52056) "\02\00\00\00\1c\00\00\00W\00r\00i\00t\00e\00 \00I\00d\00e\00n\00t\00i\00t\00y")
 (data $588 (i32.const 52092) "L")
 (data $588.1 (i32.const 52104) "\02\00\00\004\00\00\00M\00o\00d\00i\00f\00y\00 \00i\00d\00e\00n\00t\00i\00t\00y\00 \00p\00r\00o\00p\00e\00r\00t\00i\00e\00s")
 (data $589 (i32.const 52172) "<")
 (data $589.1 (i32.const 52184) "\02\00\00\00\1e\00\00\00D\00e\00l\00e\00t\00e\00 \00I\00d\00e\00n\00t\00i\00t\00y")
 (data $590 (i32.const 52236) "<")
 (data $590.1 (i32.const 52248) "\02\00\00\00\"\00\00\00D\00e\00l\00e\00t\00e\00 \00i\00d\00e\00n\00t\00i\00t\00i\00e\00s")
 (data $591 (i32.const 52300) "\1c")
 (data $591.1 (i32.const 52312) "\02\00\00\00\n\00\00\00r\00o\00l\00e\00-")
 (data $592 (i32.const 52332) "<")
 (data $592.1 (i32.const 52344) "\02\00\00\00(\00\00\00S\00y\00s\00t\00e\00m\00 \00A\00d\00m\00i\00n\00i\00s\00t\00r\00a\00t\00o\00r")
 (data $593 (i32.const 52396) ",")
 (data $593.1 (i32.const 52408) "\02\00\00\00\18\00\00\00D\00o\00m\00a\00i\00n\00 \00O\00w\00n\00e\00r")
 (data $594 (i32.const 52444) "L")
 (data $594.1 (i32.const 52456) "\02\00\00\00:\00\00\00D\00o\00m\00a\00i\00n\00 \00m\00a\00n\00a\00g\00e\00m\00e\00n\00t\00 \00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00s")
 (data $595 (i32.const 52524) ",")
 (data $595.1 (i32.const 52536) "\01\00\00\00\1c\00\00\00\00\c5\00\00\b0\c5\00\00\90\16\00\00\a0\17\00\00\b0\c7\00\00`\c8\00\00\00\18")
 (data $596 (i32.const 52572) ",")
 (data $596.1 (i32.const 52584) "\02\00\00\00\18\00\00\00O\00b\00j\00e\00c\00t\00 \00O\00w\00n\00e\00r")
 (data $597 (i32.const 52620) "L")
 (data $597.1 (i32.const 52632) "\02\00\00\00:\00\00\00O\00b\00j\00e\00c\00t\00 \00m\00a\00n\00a\00g\00e\00m\00e\00n\00t\00 \00p\00e\00r\00m\00i\00s\00s\00i\00o\00n\00s")
 (data $598 (i32.const 52700) "\1c")
 (data $598.1 (i32.const 52712) "\01\00\00\00\0c\00\00\00\b0\c7\00\00`\c8\00\000\18")
 (data $599 (i32.const 52732) ",")
 (data $599.1 (i32.const 52744) "\02\00\00\00\18\00\00\00o\00b\00j\00e\00c\00t\00.\00o\00w\00n\00e\00r")
 (data $600 (i32.const 52780) ",")
 (data $600.1 (i32.const 52792) "\02\00\00\00\1c\00\00\00R\00e\00a\00d\00-\00o\00n\00l\00y\00 \00U\00s\00e\00r")
 (data $601 (i32.const 52828) "<")
 (data $601.1 (i32.const 52840) "\02\00\00\00 \00\00\00R\00e\00a\00d\00-\00o\00n\00l\00y\00 \00a\00c\00c\00e\00s\00s")
 (data $602 (i32.const 52892) "\1c")
 (data $602.1 (i32.const 52904) "\01\00\00\00\0c\00\00\00\00\c5\00\00\b0\c7\00\00\80\ca")
 (data $603 (i32.const 52924) ",")
 (data $603.1 (i32.const 52936) "\02\00\00\00\1a\00\00\00u\00s\00e\00r\00.\00r\00e\00a\00d\00o\00n\00l\00y")
 (data $604 (i32.const 52972) "\1c")
 (data $604.1 (i32.const 52984) "\01")
 (data $605 (i32.const 53004) "<")
 (data $605.1 (i32.const 53016) "\02\00\00\00*\00\00\00C\00a\00n\00 \00t\00r\00a\00n\00s\00f\00e\00r\00 \00d\00o\00m\00a\00i\00n\00:\00 ")
 (data $606 (i32.const 53068) "\1c")
 (data $606.1 (i32.const 53080) "\02\00\00\00\02\00\00\00:")
 (data $607 (i32.const 53100) "l")
 (data $607.1 (i32.const 53112) "\02\00\00\00N\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00d\00e\00n\00t\00i\00t\00y\00/\00r\00e\00s\00o\00l\00a\00n\00g\00-\00p\00r\00o\00c\00e\00s\00s\00o\00r\00.\00t\00s")
 (data $608 (i32.const 53212) "<")
 (data $608.1 (i32.const 53224) "\01\00\00\00(\00\00\00\02\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\0b\00\00\00\r\00\00\00\11\00\00\00\13\00\00\00\17\00\00\00\1d")
 (data $609 (i32.const 53276) "L")
 (data $609.1 (i32.const 53288) "\02\00\00\00.\00\00\00d\00o\00m\00a\00i\00n\00.\00a\00p\00p\00r\00o\00v\00e\00_\00t\00r\00a\00n\00s\00f\00e\00r")
 (data $610 (i32.const 53356) "L")
 (data $610.1 (i32.const 53368) "\02\00\00\00.\00\00\00o\00b\00j\00e\00c\00t\00.\00a\00p\00p\00r\00o\00v\00e\00_\00t\00r\00a\00n\00s\00f\00e\00r")
 (data $611 (i32.const 53436) "<")
 (data $611.1 (i32.const 53448) "\02\00\00\00 \00\00\00i\00d\00e\00n\00t\00i\00t\00y\00.\00r\00e\00c\00o\00v\00e\00r")
 (data $612 (i32.const 53500) "<")
 (data $612.1 (i32.const 53512) "\01\00\00\00(\00\00\00\1f\00\00\00%\00\00\00)\00\00\00+\00\00\00/\00\00\005\00\00\00;\00\00\00=\00\00\00C\00\00\00G")
 (data $613 (i32.const 53564) "\1c")
 (data $613.1 (i32.const 53576) "\01")
 (data $614 (i32.const 53596) "\1c")
 (data $614.1 (i32.const 53608) "\01")
 (data $615 (i32.const 53628) "\1c")
 (data $615.1 (i32.const 53640) "\01")
 (data $616 (i32.const 53660) "\1c")
 (data $616.1 (i32.const 53672) "\01")
 (data $617 (i32.const 53692) "\1c")
 (data $617.1 (i32.const 53704) "\02\00\00\00\02\00\00\00+")
 (data $618 (i32.const 53724) "\1c")
 (data $618.1 (i32.const 53736) "\02\00\00\00\02\00\00\00(")
 (data $619 (i32.const 53756) "\1c")
 (data $619.1 (i32.const 53768) "\02\00\00\00\02\00\00\00i")
 (data $620 (i32.const 53788) "\1c")
 (data $620.1 (i32.const 53800) "\02\00\00\00\02\00\00\00j")
 (data $621 (i32.const 53820) "\1c")
 (data $621.1 (i32.const 53832) "\02\00\00\00\04\00\00\00k\00)")
 (data $622 (i32.const 53852) "<\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00 \00\00\00\f0\d1")
 (data $622.1 (i32.const 53884) "\10\d2\00\00\00\00\00\000\d2\00\00\00\00\00\00P\d2")
 (data $623 (i32.const 53916) "\1c")
 (data $623.1 (i32.const 53928) "\02\00\00\00\02\00\00\00w")
 (data $624 (i32.const 53948) "\1c")
 (data $624.1 (i32.const 53960) "\02\00\00\00\02\00\00\00x")
 (data $625 (i32.const 53980) "\1c")
 (data $625.1 (i32.const 53992) "\02\00\00\00\02\00\00\00y")
 (data $626 (i32.const 54012) "\1c")
 (data $626.1 (i32.const 54024) "\02\00\00\00\02\00\00\00z")
 (data $627 (i32.const 54044) "\1c")
 (data $627.1 (i32.const 54056) "\02\00\00\00\02\00\00\00a")
 (data $628 (i32.const 54076) "\1c")
 (data $628.1 (i32.const 54088) "\02\00\00\00\02\00\00\00b")
 (data $629 (i32.const 54108) "\1c")
 (data $629.1 (i32.const 54120) "\02\00\00\00\02\00\00\00c")
 (data $630 (i32.const 54140) "\1c")
 (data $630.1 (i32.const 54152) "\02\00\00\00\02\00\00\00d")
 (data $631 (i32.const 54172) "\1c")
 (data $631.1 (i32.const 54184) "\01")
 (data $632 (i32.const 54204) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00\00\00\00\00 \af")
 (data $633 (i32.const 54236) "\1c\00\00\00\03\00\00\00\00\00\00\00\b0\00\00\00\0c\00\00\00\00\00\00\00 \af")
 (data $634 (i32.const 54268) "<")
 (data $634.1 (i32.const 54280) "\01\00\00\00(\00\00\00\02\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\0b\00\00\00\r\00\00\00\11\00\00\00\13\00\00\00\17\00\00\00\1d")
 (data $635 (i32.const 54332) "<")
 (data $635.1 (i32.const 54344) "\01\00\00\00(\00\00\00\1f\00\00\00%\00\00\00)\00\00\00+\00\00\00/\00\00\005\00\00\00;\00\00\00=\00\00\00C\00\00\00G")
 (data $636 (i32.const 54396) "<")
 (data $636.1 (i32.const 54408) "\02\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data $637 (i32.const 54460) "<")
 (data $637.1 (i32.const 54472) "\02\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data $638 (i32.const 54528) "\fd\00\00\00 \00\00\00 \00\00\00 ")
 (data $638.1 (i32.const 54552) " \00\00\00$\01\00\00\02\1a")
 (data $638.2 (i32.const 54572) "\10\1a\82\00\10\1a\02\00\00\00\00\00\02A\00\00\02\01")
 (data $638.3 (i32.const 54600) "\10A\82\00\02A\00\00\00\00\00\00 \00\00\00\02A\00\00 \00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\10A\82\00\10A\82\00\00\00\00\00P\00\04\00\02\02\00\00\02\t\00\00 \00\00\00 \00\00\00\00\00\00\00\02A\00\00 \00\00\00\00\00\00\00\02A")
 (data $638.4 (i32.const 54700) "\02A")
 (data $638.5 (i32.const 54712) "\02A")
 (data $638.6 (i32.const 54724) "\02A")
 (data $638.7 (i32.const 54752) " \00\00\00\10A\82\00\10\t\82")
 (data $638.8 (i32.const 54772) " \00\00\00\00\00\00\00\02A\00\00\02A\00\00 \00\00\00\10A\82")
 (data $638.9 (i32.const 54804) " \00\00\00\10A\82\00\08A\00\00\00\00\00\00\08\01")
 (data $638.10 (i32.const 54832) "\10A\82")
 (data $638.11 (i32.const 54844) "P\00\82\00\10A\82\00 \00\00\00\10A\12")
 (data $638.12 (i32.const 54876) "$\1a\00\00\10A\82")
 (data $638.13 (i32.const 54896) "\02A\00\00 ")
 (data $638.14 (i32.const 54912) "\02A\00\00\10A\82\00\00\00\00\00\10\n\82\00\10A\82\00 \00\00\00\10A\82")
 (data $638.15 (i32.const 54952) " \00\00\00\10A\82\00\00\00\00\00 \00\00\00\02A\00\00\10A\82\00\00\00\00\00\02A\00\00\10A\82\00\10A\82")
 (data $638.16 (i32.const
 (data $638.17 (i32.const 55236) "\04A\00\00\00\00\00\00 \00\00\00\02A\00\00 \00\00\00\02A")
 (data $638.18 (i32.const 55268) "\02A\00\00\02A\00\00 ")
 (data $638.19 (i32.const 55288) "\02A\00\00 ")
 (data $638.20 (i32.const 55304) "\02A\00\00\00\00\00\00\02A")
 (data $638.21 (i32.const 55324) "\02A\00\00\00\00\00\00\02A")
 (data $638.22 (i32.const 55352) " \00\00\00\00\00\00\00\10A\02\00\01\1a\00\00 \00\00\00 ")
 (data $638.23 (i32.const 55384) "\02A")
 (data $638.24 (i32.const 55400) "\02A")
 (data $638.25 (i32.const 55416) "\02A\00\00\00\00\00\00\10A\82\00 \00\00\00 \00\00\00B")
 (data $638.26 (i32.const 55456) " \00\00\00\10A\82")
 (data $638.27 (i32.const 55476) " \00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00\02A\00\00\00\00\00\00 \00\00\00\02A")
 (data $638.28 (i32.const 55532) " \00\00\00\10\1a4")
 (table $0 9 9 funcref)
 (elem $0 (i32.const 1) $assembly/core/object-pool/MathObjectPools.initialize~anonymous|0 $assembly/core/object-pool/MathObjectPools.initialize~anonymous|1 $assembly/core/object-pool/MathObjectPools.initialize~anonymous|2 $assembly/core/object-pool/MathObjectPools.initialize~anonymous|3 $assembly/core/object-pool/MathObjectPools.initialize~anonymous|4 $assembly/identity/ownership-transfer/OwnershipTransferManager#registerDefaultHandlers~anonymous|0 $assembly/identity/ownership-transfer/OwnershipTransferManager#registerDefaultHandlers~anonymous|0 $assembly/operators/route~anonymous|0)
 (export "generatePrimes" (func $assembly/core/math/generatePrimes))
 (export "PHI" (global $assembly/core/constants/PHI))
 (export "E" (global $assembly/core/constants/E))
 (export "TWO_PI" (global $assembly/core/constants/TWO_PI))
 (export "MERSENNE_PRIME_31" (global $assembly/core/constants/MERSENNE_PRIME_31))
 (export "degreesToRadians" (func $assembly/core/constants/degreesToRadians))
 (export "radiansToDegrees" (func $assembly/core/constants/radiansToDegrees))
 (export "runFullValidationSuite" (func $assembly/examples/comprehensive-benchmark-suite/runFullValidationSuite))
 (export "runBenchmarkTests" (func $assembly/examples/test-comprehensive-benchmark-suite/runBenchmarkTests))
 (export "currentNode" (global $assembly/resolang/currentNode))
 (export "PI" (global $assembly/resolang/PI))
 (export "toFixed" (func $assembly/utils/toFixed@varargs))
 (export "initializeEntropyViz" (func $assembly/entropy-viz/initializeEntropyViz))
 (export "getGlobalSampler" (func $assembly/entropy-viz/getGlobalSampler))
 (export "getGlobalTracker" (func $assembly/entropy-viz/getGlobalTracker))
 (export "exportEntropyData" (func $assembly/entropy-viz/exportEntropyData))
 (export "exportEntropyHistory" (func $assembly/entropy-viz/exportEntropyHistory))
 (export "validateString" (func $assembly/core/validation/validateString))
 (export "validateNumber" (func $assembly/core/validation/validateNumber))
 (export "validateObject" (func $assembly/core/validation/validateObject))
 (export "modExpOptimized" (func $assembly/core/math-optimized/modExpOptimized))
 (export "modInverseOptimized" (func $assembly/core/math-optimized/modInverseOptimized))
 (export "getPrimeCacheStats" (func $assembly/core/math-optimized/getPrimeCacheStats))
 (export "resetMathOptimizations" (func $assembly/core/math-optimized/resetMathOptimizations))
 (export "getMathPerformanceReport" (func $assembly/core/math-optimized/getMathPerformanceReport))
 (export "validateMathOperations" (func $assembly/core/math-optimized/validateMathOperations))
 (export "benchmarkMathOperations" (func $assembly/core/math-optimized/benchmarkMathOperations))
 (export "testMathOperations" (func $assembly/core/math-optimized/testMathOperations))
 (export "SMALL_PRIMES" (global $assembly/core/math-cache/SMALL_PRIMES))
 (export "primeCache" (global $assembly/core/math-cache/primeCache))
 (export "extendedGCD" (func $assembly/core/math-extended-gcd/extendedGCD))
 (export "modInverse" (func $assembly/core/math-extended-gcd/modInverse))
 (export "MILLER_RABIN_WITNESSES_32" (global $assembly/core/math-miller-rabin/MILLER_RABIN_WITNESSES_32))
 (export "MILLER_RABIN_WITNESSES_64" (global $assembly/core/math-miller-rabin/MILLER_RABIN_WITNESSES_64))
 (export "millerRabinDeterministic32" (func $assembly/core/math-miller-rabin/millerRabinDeterministic32))
 (export "millerRabinDeterministic64" (func $assembly/core/math-miller-rabin/millerRabinDeterministic64))
 (export "modExpMontgomery" (func $assembly/core/math-montgomery/modExpMontgomery))
 (export "mulMod" (func $assembly/core/math-operations/mulMod))
 (export "addMod" (func $assembly/core/math-operations/addMod))
 (export "modExp" (func $assembly/core/math-operations/modExp))
 (export "lerp" (func $assembly/core/math-operations/lerp))
 (export "clamp" (func $assembly/core/math-operations/clamp))
 (export "fastInvSqrt" (func $assembly/core/math-operations/fastInvSqrt))
 (export "approxEqual" (func $assembly/core/math-operations/approxEqual@varargs))
 (export "safeDivide" (func $assembly/core/math-operations/safeDivide))
 (export "gcd" (func $assembly/core/math-operations/gcd))
 (export "lcm" (func $assembly/core/math-operations/lcm))
 (export "isPerfectSquare" (func $assembly/core/math-operations/isPerfectSquare))
 (export "isqrt" (func $assembly/core/math-operations/isqrt))
 (export "globalMathProfiler" (global $assembly/core/math-performance/globalMathProfiler))
 (export "globalMathMemoryTracker" (global $assembly/core/math-performance/globalMathMemoryTracker))
 (export "isPrimeOptimized" (func $assembly/core/math-primes/isPrimeOptimized))
 (export "generatePrimeOptimized" (func $assembly/core/math-primes/generatePrimeOptimized))
 (export "generatePrimesOptimized" (func $assembly/core/math-primes/generatePrimesOptimized))
 (export "isGaussianPrime" (func $assembly/core/math-primes/isGaussianPrime))
 (export "sieveOfEratosthenes" (func $assembly/core/math-primes/sieveOfEratosthenes))
 (export "nextPrime" (func $assembly/core/math-primes/nextPrime))
 (export "previousPrime" (func $assembly/core/math-primes/previousPrime))
 (export "exampleUsage" (func $assembly/identity/index/exampleUsage))
 (export "IdentityType.SELF_SOVEREIGN" (global $assembly/identity/interfaces/IdentityType.SELF_SOVEREIGN))
 (export "IdentityType.MANAGED" (global $assembly/identity/interfaces/IdentityType.MANAGED))
 (export "IdentityType.SYSTEM" (global $assembly/identity/interfaces/IdentityType.SYSTEM))
 (export "KYCLevel.NONE" (global $assembly/identity/interfaces/KYCLevel.NONE))
 (export "KYCLevel.BASIC" (global $assembly/identity/interfaces/KYCLevel.BASIC))
 (export "KYCLevel.ENHANCED" (global $assembly/identity/interfaces/KYCLevel.ENHANCED))
 (export "KYCLevel.FULL" (global $assembly/identity/interfaces/KYCLevel.FULL))
 (export "KYCVerificationStatus.PENDING" (global $assembly/identity/interfaces/KYCVerificationStatus.PENDING))
 (export "KYCVerificationStatus.IN_PROGRESS" (global $assembly/identity/interfaces/KYCVerificationStatus.IN_PROGRESS))
 (export "KYCVerificationStatus.COMPLETED" (global $assembly/identity/interfaces/KYCVerificationStatus.COMPLETED))
 (export "KYCVerificationStatus.FAILED" (global $assembly/identity/interfaces/KYCVerificationStatus.FAILED))
 (export "KYCVerificationStatus.EXPIRED" (global $assembly/identity/interfaces/KYCVerificationStatus.EXPIRED))
 (export "PermissionScope.GLOBAL" (global $assembly/identity/interfaces/PermissionScope.GLOBAL))
 (export "PermissionScope.DOMAIN" (global $assembly/identity/interfaces/PermissionScope.DOMAIN))
 (export "PermissionScope.OBJECT" (global $assembly/identity/interfaces/PermissionScope.OBJECT))
 (export "AuditAction.CREATE" (global $assembly/identity/interfaces/AuditAction.CREATE))
 (export "AuditAction.UPDATE" (global $assembly/identity/interfaces/AuditAction.UPDATE))
 (export "AuditAction.DELETE" (global $assembly/identity/interfaces/AuditAction.DELETE))
 (export "AuditAction.TRANSFER" (global $assembly/identity/interfaces/AuditAction.TRANSFER))
 (export "AuditAction.GRANT_PERMISSION" (global $assembly/identity/interfaces/AuditAction.GRANT_PERMISSION))
 (export "AuditAction.REVOKE_PERMISSION" (global $assembly/identity/interfaces/AuditAction.REVOKE_PERMISSION))
 (export "AuditAction.ADD_MEMBER" (global $assembly/identity/interfaces/AuditAction.ADD_MEMBER))
 (export "AuditAction.REMOVE_MEMBER" (global $assembly/identity/interfaces/AuditAction.REMOVE_MEMBER))
 (export "AuditAction.VERIFY_KYC" (global $assembly/identity/interfaces/AuditAction.VERIFY_KYC))
 (export "AuditAction.AUTHENTICATE" (global $assembly/identity/interfaces/AuditAction.AUTHENTICATE))
 (export "AuditAction.DEACTIVATE" (global $assembly/identity/interfaces/AuditAction.DEACTIVATE))
 (export "AuditAction.REACTIVATE" (global $assembly/identity/interfaces/AuditAction.REACTIVATE))
 (export "AuditResult.SUCCESS" (global $assembly/identity/interfaces/AuditResult.SUCCESS))
 (export "AuditResult.FAILURE" (global $assembly/identity/interfaces/AuditResult.FAILURE))
 (export "AuditResult.PARTIAL" (global $assembly/identity/interfaces/AuditResult.PARTIAL))
 (export "RecoveryMethod.MULTI_SIGNATURE" (global $assembly/identity/interfaces/RecoveryMethod.MULTI_SIGNATURE))
 (export "RecoveryMethod.SOCIAL_RECOVERY" (global $assembly/identity/interfaces/RecoveryMethod.SOCIAL_RECOVERY))
 (export "RecoveryMethod.TIME_LOCKED" (global $assembly/identity/interfaces/RecoveryMethod.TIME_LOCKED))
 (export "RecoveryMethod.HARDWARE_KEY" (global $assembly/identity/interfaces/RecoveryMethod.HARDWARE_KEY))
 (export "globalPrimeMapper" (global $assembly/identity/prime-mapping/globalPrimeMapper))
 (export "TransferType.DOMAIN" (global $assembly/identity/ownership-transfer/TransferType.DOMAIN))
 (export "TransferType.OBJECT" (global $assembly/identity/ownership-transfer/TransferType.OBJECT))
 (export "TransferStatus.PENDING" (global $assembly/identity/ownership-transfer/TransferStatus.PENDING))
 (export "TransferStatus.APPROVED" (global $assembly/identity/ownership-transfer/TransferStatus.APPROVED))
 (export "TransferStatus.REJECTED" (global $assembly/identity/ownership-transfer/TransferStatus.REJECTED))
 (export "TransferStatus.CANCELLED" (global $assembly/identity/ownership-transfer/TransferStatus.CANCELLED))
 (export "TransferStatus.EXPIRED" (global $assembly/identity/ownership-transfer/TransferStatus.EXPIRED))
 (export "TransferStatus.COMPLETED" (global $assembly/identity/ownership-transfer/TransferStatus.COMPLETED))
 (export "globalTransferManager" (global $assembly/identity/ownership-transfer/globalTransferManager))
 (export "AuditEventType.IDENTITY_CREATED" (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_CREATED))
 (export "AuditEventType.IDENTITY_UPDATED" (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_UPDATED))
 (export "AuditEventType.IDENTITY_KYC_CHANGED" (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_KYC_CHANGED))
 (export "AuditEventType.IDENTITY_DEACTIVATED" (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_DEACTIVATED))
 (export "AuditEventType.IDENTITY_REACTIVATED" (global $assembly/identity/audit-trail/AuditEventType.IDENTITY_REACTIVATED))
 (export "AuditEventType.DOMAIN_CREATED" (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_CREATED))
 (export "AuditEventType.DOMAIN_UPDATED" (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_UPDATED))
 (export "AuditEventType.DOMAIN_MEMBER_ADDED" (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_MEMBER_ADDED))
 (export "AuditEventType.DOMAIN_MEMBER_REMOVED" (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_MEMBER_REMOVED))
 (export "AuditEventType.DOMAIN_OWNERSHIP_TRANSFERRED" (global $assembly/identity/audit-trail/AuditEventType.DOMAIN_OWNERSHIP_TRANSFERRED))
 (export "AuditEventType.OBJECT_CREATED" (global $assembly/identity/audit-trail/AuditEventType.OBJECT_CREATED))
 (export "AuditEventType.OBJECT_UPDATED" (global $assembly/identity/audit-trail/AuditEventType.OBJECT_UPDATED))
 (export "AuditEventType.OBJECT_TRANSFERRED" (global $assembly/identity/audit-trail/AuditEventType.OBJECT_TRANSFERRED))
 (export "AuditEventType.OBJECT_DESTROYED" (global $assembly/identity/audit-trail/AuditEventType.OBJECT_DESTROYED))
 (export "AuditEventType.PERMISSION_GRANTED" (global $assembly/identity/audit-trail/AuditEventType.PERMISSION_GRANTED))
 (export "AuditEventType.PERMISSION_REVOKED" (global $assembly/identity/audit-trail/AuditEventType.PERMISSION_REVOKED))
 (export "AuditEventType.ROLE_ASSIGNED" (global $assembly/identity/audit-trail/AuditEventType.ROLE_ASSIGNED))
 (export "AuditEventType.ROLE_REMOVED" (global $assembly/identity/audit-trail/AuditEventType.ROLE_REMOVED))
 (export "AuditEventType.AUTH_LOGIN" (global $assembly/identity/audit-trail/AuditEventType.AUTH_LOGIN))
 (export "AuditEventType.AUTH_LOGOUT" (global $assembly/identity/audit-trail/AuditEventType.AUTH_LOGOUT))
 (export "AuditEventType.AUTH_FAILED" (global $assembly/identity/audit-trail/AuditEventType.AUTH_FAILED))
 (export "AuditEventType.AUTH_SESSION_EXPIRED" (global $assembly/identity/audit-trail/AuditEventType.AUTH_SESSION_EXPIRED))
 (export "AuditEventType.NODE_CONNECTED" (global $assembly/identity/audit-trail/AuditEventType.NODE_CONNECTED))
 (export "AuditEventType.NODE_DISCONNECTED" (global $assembly/identity/audit-trail/AuditEventType.NODE_DISCONNECTED))
 (export "AuditEventType.SYNC_STARTED" (global $assembly/identity/audit-trail/AuditEventType.SYNC_STARTED))
 (export "AuditEventType.SYNC_COMPLETED" (global $assembly/identity/audit-trail/AuditEventType.SYNC_COMPLETED))
 (export "AuditEventType.SYNC_FAILED" (global $assembly/identity/audit-trail/AuditEventType.SYNC_FAILED))
 (export "AuditSeverity.INFO" (global $assembly/identity/audit-trail/AuditSeverity.INFO))
 (export "AuditSeverity.WARNING" (global $assembly/identity/audit-trail/AuditSeverity.WARNING))
 (export "AuditSeverity.ERROR" (global $assembly/identity/audit-trail/AuditSeverity.ERROR))
 (export "AuditSeverity.CRITICAL" (global $assembly/identity/audit-trail/AuditSeverity.CRITICAL))
 (export "globalAuditTrail" (global $assembly/identity/audit-trail/globalAuditTrail))
 (export "globalResoLangProcessor" (global $assembly/identity/resolang-processor/globalResoLangProcessor))
 (export "quantumVerifyAuditIntegrity" (func $assembly/identity/resolang-processor/quantumVerifyAuditIntegrity))
 (export "RecoveryStatus.PENDING" (global $assembly/identity/identity-recovery/RecoveryStatus.PENDING))
 (export "RecoveryStatus.EXECUTED" (global $assembly/identity/identity-recovery/RecoveryStatus.EXECUTED))
 (export "RecoveryStatus.CANCELLED" (global $assembly/identity/identity-recovery/RecoveryStatus.CANCELLED))
 (export "RecoveryStatus.EXPIRED" (global $assembly/identity/identity-recovery/RecoveryStatus.EXPIRED))
 (export "globalRecoveryManager" (global $assembly/identity/identity-recovery/globalRecoveryManager))
 (export "DomainStatus.ACTIVE" (global $assembly/identity/domain-registry/DomainStatus.ACTIVE))
 (export "DomainStatus.SUSPENDED" (global $assembly/identity/domain-registry/DomainStatus.SUSPENDED))
 (export "DomainStatus.EXPIRED" (global $assembly/identity/domain-registry/DomainStatus.EXPIRED))
 (export "DomainStatus.RESERVED" (global $assembly/identity/domain-registry/DomainStatus.RESERVED))
 (export "InheritanceMode.NONE" (global $assembly/identity/permission-inheritance/InheritanceMode.NONE))
 (export "InheritanceMode.ADDITIVE" (global $assembly/identity/permission-inheritance/InheritanceMode.ADDITIVE))
 (export "InheritanceMode.RESTRICTIVE" (global $assembly/identity/permission-inheritance/InheritanceMode.RESTRICTIVE))
 (export "InheritanceMode.OVERRIDE" (global $assembly/identity/permission-inheritance/InheritanceMode.OVERRIDE))
 (export "globalPermissionInheritance" (global $assembly/identity/permission-inheritance/globalPermissionInheritance))
 (export "AuthMethod.PASSWORD" (global $assembly/identity/authentication/AuthMethod.PASSWORD))
 (export "AuthMethod.BIOMETRIC" (global $assembly/identity/authentication/AuthMethod.BIOMETRIC))
 (export "AuthMethod.HARDWARE_KEY" (global $assembly/identity/authentication/AuthMethod.HARDWARE_KEY))
 (export "AuthMethod.QUANTUM_SIGNATURE" (global $assembly/identity/authentication/AuthMethod.QUANTUM_SIGNATURE))
 (export "AuthMethod.MULTI_FACTOR" (global $assembly/identity/authentication/AuthMethod.MULTI_FACTOR))
 (export "SessionStatus.ACTIVE" (global $assembly/identity/authentication/SessionStatus.ACTIVE))
 (export "SessionStatus.EXPIRED" (global $assembly/identity/authentication/SessionStatus.EXPIRED))
 (export "SessionStatus.REVOKED" (global $assembly/identity/authentication/SessionStatus.REVOKED))
 (export "SessionStatus.SUSPENDED" (global $assembly/identity/authentication/SessionStatus.SUSPENDED))
 (export "globalAuthManager" (global $assembly/identity/authentication/globalAuthManager))
 (export "factorizationOperator" (func $assembly/quantum/prime-operators/factorizationOperator))
 (export "rotationOperator" (func $assembly/quantum/prime-operators/rotationOperator))
 (export "DELTA_S" (global $assembly/quantum/prime-state/DELTA_S))
 (export "ControlFlowType.SEQUENTIAL" (global $assembly/runtime/execution/controlFlow/ControlFlowType.SEQUENTIAL))
 (export "ControlFlowType.CONDITIONAL" (global $assembly/runtime/execution/controlFlow/ControlFlowType.CONDITIONAL))
 (export "ControlFlowType.LOOP" (global $assembly/runtime/execution/controlFlow/ControlFlowType.LOOP))
 (export "ControlFlowType.JUMP" (global $assembly/runtime/execution/controlFlow/ControlFlowType.JUMP))
 (export "ControlFlowType.CALL" (global $assembly/runtime/execution/controlFlow/ControlFlowType.CALL))
 (export "ControlFlowType.RETURN" (global $assembly/runtime/execution/controlFlow/ControlFlowType.RETURN))
 (export "ControlFlowType.BREAK" (global $assembly/runtime/execution/controlFlow/ControlFlowType.BREAK))
 (export "ControlFlowType.CONTINUE" (global $assembly/runtime/execution/controlFlow/ControlFlowType.CONTINUE))
 (export "ControlFlowType.HALT" (global $assembly/runtime/execution/controlFlow/ControlFlowType.HALT))
 (export "BasisType.PRIME" (global $assembly/runtime/state/primeState/BasisType.PRIME))
 (export "BasisType.FOURIER" (global $assembly/runtime/state/primeState/BasisType.FOURIER))
 (export "BasisType.WAVELET" (global $assembly/runtime/state/primeState/BasisType.WAVELET))
 (export "BasisType.POLYNOMIAL" (global $assembly/runtime/state/primeState/BasisType.POLYNOMIAL))
 (export "BasisType.MODULAR" (global $assembly/runtime/state/primeState/BasisType.MODULAR))
 (export "createQuaternion" (func $assembly/quaternion-exports/createQuaternion))
 (export "isSplitPrime" (func $assembly/quaternion-exports/isSplitPrime))
 (export "createQuaternionFromPrime" (func $assembly/quaternion-exports/createQuaternionFromPrime))
 (export "createQuaternionicResonanceField" (func $assembly/quaternion-exports/createQuaternionicResonanceField))
 (export "createTwistDynamics" (func $assembly/quaternion-exports/createTwistDynamics))
 (export "createQuaternionicProjector" (func $assembly/quaternion-exports/createQuaternionicProjector@varargs))
 (export "createQuaternionPool" (func $assembly/quaternion-exports/createQuaternionPool@varargs))
 (export "createQuaternionicSynchronizer" (func $assembly/quaternion-exports/createQuaternionicSynchronizer))
 (export "createHolographicEncoding" (func $assembly/quantum-exports/createHolographicEncoding))
 (export "createEntropyEvolution" (func $assembly/quantum-exports/createEntropyEvolution))
 (export "createComplex" (func $assembly/complex-exports/createComplex))
 (export "complexFromPolar" (func $assembly/complex-exports/complexFromPolar))
 (export "createPrimeState" (func $assembly/prime-state-exports/createPrimeState))
 (export "createTransformer" (func $assembly/pnp-exports/createTransformer))
 (export "NPProblemType.SAT" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SAT))
 (export "NPProblemType.VERTEX_COVER" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.VERTEX_COVER))
 (export "NPProblemType.HAMILTONIAN_PATH" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.HAMILTONIAN_PATH))
 (export "NPProblemType.GRAPH_COLORING" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.GRAPH_COLORING))
 (export "NPProblemType.KNAPSACK" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.KNAPSACK))
 (export "NPProblemType.TSP" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.TSP))
 (export "NPProblemType.SUBSET_SUM" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SUBSET_SUM))
 (export "NPProblemType.CLIQUE" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.CLIQUE))
 (export "NPProblemType.INDEPENDENT_SET" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.INDEPENDENT_SET))
 (export "NPProblemType.PARTITION" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.PARTITION))
 (export "NPProblemType.INTEGER_PROGRAMMING" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.INTEGER_PROGRAMMING))
 (export "NPProblemType.STEINER_TREE" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.STEINER_TREE))
 (export "NPProblemType.SET_COVER" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SET_COVER))
 (export "NPProblemType.BIN_PACKING" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.BIN_PACKING))
 (export "NPProblemType.SCHEDULING" (global $assembly/examples/universal-symbolic-transformer/NPProblemType.SCHEDULING))
 (export "createIdentityProcessor" (func $assembly/runtime-exports/createIdentityProcessor))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "escapeJSON" (func $export:assembly/core/serialization/escapeJSON))
 (export "generateUniqueId" (func $export:assembly/core/constants/generateUniqueId))
 (export "setCurrentNode" (func $export:assembly/resolang/setCurrentNode))
 (export "tensor" (func $export:assembly/operators/tensor))
 (export "collapse" (func $export:assembly/operators/collapse))
 (export "rotatePhase" (func $export:assembly/operators/rotatePhase))
 (export "linkEntanglement" (func $export:assembly/operators/linkEntanglement))
 (export "route" (func $export:assembly/operators/route))
 (export "coherence" (func $export:assembly/operators/coherence))
 (export "entropy" (func $export:assembly/operators/entropy))
 (export "stabilize" (func $export:assembly/functionalBlocks/stabilize))
 (export "teleport" (func $export:assembly/functionalBlocks/teleport))
 (export "entangled" (func $export:assembly/functionalBlocks/entangled))
 (export "observe" (func $export:assembly/functionalBlocks/observe))
 (export "transmitQuaternionicMessage" (func $export:assembly/quaternion-entanglement/transmitQuaternionicMessage))
 (export "entropyRate" (func $export:assembly/utils/entropyRate))
 (export "align" (func $export:assembly/utils/align))
 (export "generateSymbol" (func $export:assembly/utils/generateSymbol))
 (export "simdArrayMul" (func $export:assembly/core/math-optimized/simdArrayMul))
 (export "simdArrayAdd" (func $export:assembly/core/math-optimized/simdArrayAdd))
 (export "simdDotProduct" (func $export:assembly/core/math-optimized/simdDotProduct))
 (export "arrayMul" (func $export:assembly/core/math-operations/arrayMul))
 (export "arrayAdd" (func $export:assembly/core/math-operations/arrayAdd))
 (export "dotProduct" (func $export:assembly/core/math-operations/dotProduct))
 (export "vectorMagnitude" (func $export:assembly/core/math-operations/vectorMagnitude))
 (export "normalizeVector" (func $export:assembly/core/math-operations/normalizeVector))
 (export "profileMathOperation" (func $export:assembly/core/math-performance/profileMathOperation))
 (export "quantumCheckPermission" (func $export:assembly/identity/resolang-processor/quantumCheckPermission@varargs))
 (export "quantumProcessTransfer" (func $export:assembly/identity/resolang-processor/quantumProcessTransfer))
 (export "quantumRecoverIdentity" (func $export:assembly/identity/resolang-processor/quantumRecoverIdentity@varargs))
 (export "quantumCreateAuditEntry" (func $export:assembly/identity/resolang-processor/quantumCreateAuditEntry))
 (export "primeSpectrum" (func $export:assembly/quantum/prime-memory/primeSpectrum))
 (export "symbolicCollapse" (func $export:assembly/quantum/prime-memory/symbolicCollapse@varargs))
 (export "primeOperator" (func $export:assembly/quantum/prime-operators/primeOperator))
 (export "quaternionMultiply" (func $export:assembly/quaternion-exports/quaternionMultiply))
 (export "quaternionConjugate" (func $export:assembly/quaternion-exports/quaternionConjugate))
 (export "quaternionNorm" (func $export:assembly/quaternion-exports/quaternionNorm))
 (export "quaternionNormalize" (func $export:assembly/quaternion-exports/quaternionNormalize))
 (export "quaternionToBlochVector" (func $export:assembly/quaternion-exports/quaternionToBlochVector))
 (export "quaternionExp" (func $export:assembly/quaternion-exports/quaternionExp))
 (export "quaternionRotate" (func $export:assembly/quaternion-exports/quaternionRotate))
 (export "quaternionToString" (func $export:assembly/quaternion-exports/quaternionToString))
 (export "quaternionToJSON" (func $export:assembly/quaternion-exports/quaternionToJSON))
 (export "addPrimeToResonanceField" (func $export:assembly/quaternion-exports/addPrimeToResonanceField))
 (export "computeResonanceField" (func $export:assembly/quaternion-exports/computeResonanceField))
 (export "optimizeResonanceFieldParameters" (func $export:assembly/quaternion-exports/optimizeResonanceFieldParameters@varargs))
 (export "computeTwistAngleFromQuaternion" (func $export:assembly/quaternion-exports/computeTwistAngleFromQuaternion))
 (export "evolveTwistDynamics" (func $export:assembly/quaternion-exports/evolveTwistDynamics))
 (export "checkTwistCollapse" (func $export:assembly/quaternion-exports/checkTwistCollapse))
 (export "getTwistAngle" (func $export:assembly/quaternion-exports/getTwistAngle))
 (export "setTwistAngle" (func $export:assembly/quaternion-exports/setTwistAngle))
 (export "projectQuaternion" (func $export:assembly/quaternion-exports/projectQuaternion))
 (export "computeQuaternionEigenvalues" (func $export:assembly/quaternion-exports/computeQuaternionEigenvalues))
 (export "allocateQuaternionFromPool" (func $export:assembly/quaternion-exports/allocateQuaternionFromPool))
 (export "deallocateQuaternionToPool" (func $export:assembly/quaternion-exports/deallocateQuaternionToPool))
 (export "createEntangledQuaternionPair" (func $export:assembly/quaternion-exports/createEntangledQuaternionPair@varargs))
 (export "evolveEntangledPair" (func $export:assembly/quaternion-exports/evolveEntangledPair))
 (export "computeEntangledPairFidelity" (func $export:assembly/quaternion-exports/computeEntangledPairFidelity))
 (export "optimizeEntanglement" (func $export:assembly/quaternion-exports/optimizeEntanglement@varargs))
 (export "measureQuaternionPhaseDifference" (func $export:assembly/quaternion-exports/measureQuaternionPhaseDifference))
 (export "synchronizeQuaternions" (func $export:assembly/quaternion-exports/synchronizeQuaternions@varargs))
 (export "runAdaptiveSynchronization" (func $export:assembly/quaternion-exports/runAdaptiveSynchronization@varargs))
 (export "createQuaternionicAgent" (func $export:assembly/quaternion-exports/createQuaternionicAgent))
 (export "encodeQuaternionicMessage" (func $export:assembly/quaternion-exports/encodeQuaternionicMessage))
 (export "decodeQuaternionicMessage" (func $export:assembly/quaternion-exports/decodeQuaternionicMessage))
 (export "entangleQuaternionicAgents" (func $export:assembly/quaternion-exports/entangleQuaternionicAgents@varargs))
 (export "applyQuaternionicSymbolicCollapse" (func $export:assembly/quaternion-exports/applyQuaternionicSymbolicCollapse@varargs))
 (export "getQuaternionicAgentQuaternion" (func $export:assembly/quaternion-exports/getQuaternionicAgentQuaternion))
 (export "getQuaternionicAgentEntanglementFidelity" (func $export:assembly/quaternion-exports/getQuaternionicAgentEntanglementFidelity))
 (export "getQuaternionW" (func $export:assembly/quaternion-exports/getQuaternionW))
 (export "getQuaternionX" (func $export:assembly/operators/entropy))
 (export "getQuaternionY" (func $export:assembly/operators/coherence))
 (export "getQuaternionZ" (func $export:assembly/quaternion-exports/getQuaternionZ))
 (export "setQuaternionComponents" (func $export:assembly/quaternion-exports/setQuaternionComponents))
 (export "holographicEncodingEncode" (func $export:assembly/quantum-exports/holographicEncodingEncode))
 (export "holographicEncodingDecode" (func $export:assembly/quantum-exports/holographicEncodingDecode))
 (export "holographicEncodingClear" (func $export:assembly/quantum-exports/holographicEncodingClear))
 (export "entropyEvolutionEvolve" (func $export:assembly/quantum-exports/entropyEvolutionEvolve))
 (export "entropyEvolutionCollapseProbability" (func $export:assembly/quantum-exports/entropyEvolutionCollapseProbability))
 (export "complexAdd" (func $export:assembly/complex-exports/complexAdd))
 (export "complexMultiply" (func $export:assembly/complex-exports/complexMultiply))
 (export "complexMagnitude" (func $export:assembly/complex-exports/complexMagnitude))
 (export "getComplexReal" (func $export:assembly/quaternion-exports/getQuaternionW))
 (export "getComplexImag" (func $export:assembly/operators/entropy))
 (export "getPrimeStateAmplitudes" (func $export:assembly/prime-state-exports/getPrimeStateAmplitudes))
 (export "getPrimeStateCoefficients" (func $export:assembly/prime-state-exports/getPrimeStateCoefficients))
 (export "setPrimeStateAmplitudes" (func $export:assembly/prime-state-exports/setPrimeStateAmplitudes))
 (export "createState" (func $export:assembly/pnp-exports/createState))
 (export "isStateSatisfied" (func $export:assembly/pnp-exports/isStateSatisfied))
 (export "getSolutionEncoding" (func $export:assembly/pnp-exports/getSolutionEncoding))
 (export "encodeProblem" (func $export:assembly/pnp-exports/encodeProblem))
 (export "solveProblem" (func $export:assembly/pnp-exports/solveProblem))
 (export "verifyConvergence" (func $export:assembly/pnp-exports/verifyConvergence))
 (export "checkPermission" (func $export:assembly/runtime-exports/checkPermission@varargs))
 (export "processTransferRequest" (func $export:assembly/runtime-exports/processTransferRequest))
 (export "recoverIdentity" (func $export:assembly/runtime-exports/recoverIdentity@varargs))
 (export "createAuditEntry" (func $export:assembly/runtime-exports/createAuditEntry))
 (export "verifyAuditIntegrity" (func $export:assembly/runtime-exports/verifyAuditIntegrity))
 (export "syncWithNetwork" (func $export:assembly/runtime-exports/syncWithNetwork))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 3040
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   local.get $0
   i32.load offset=8
   i32.eqz
   local.get $0
   i32.const 88312
   i32.lt_u
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 3040
    i32.const 128
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 3040
   i32.const 132
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 3040
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 54528
   i32.load
   i32.gt_u
   if
    i32.const 3168
    i32.const 3232
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 2
   i32.shl
   i32.const 54532
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/itcms/__visit (param $0 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.tee $3
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 3312
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $2
   local.get $3
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $3
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $5
  local.get $1
  i32.load offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $2
  i32.const 4
  i32.shl
  local.get $3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.tee $1
  i32.load offset=96
  i32.eq
  if
   local.get $1
   local.get $5
   i32.store offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load offset=4
    i32.const -2
    local.get $3
    i32.rotl
    i32.and
    local.set $3
    local.get $1
    local.get $3
    i32.store offset=4
    local.get $3
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $2
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 3312
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 3312
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 3312
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.get $1
  i64.extend_i32_u
  i64.lt_u
  if
   i32.const 0
   i32.const 3312
   i32.const 382
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load offset=1568
  local.tee $3
  if
   local.get $3
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 3312
    i32.const 389
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.get $1
   i32.const 16
   i32.sub
   local.tee $5
   i32.eq
   if
    local.get $3
    i32.load
    local.set $4
    local.get $5
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 3312
    i32.const 402
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.wrap_i64
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $3
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $3
  i32.const 8
  i32.sub
  local.tee $3
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $3
  i32.add
  local.tee $3
  i32.const 2
  i32.store
  local.get $0
  local.get $3
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 2
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 88320
  i32.const 0
  i32.store
  i32.const 89888
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 88320
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 88320
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 88320
  i32.const 89892
  memory.size
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 88320
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load offset=4
      local.tee $2
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $2
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 88312
      i32.lt_u
      if
       local.get $0
       i32.load
       call $~lib/rt/itcms/__visit
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load offset=4
       local.tee $2
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $2
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 3040
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 88312
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     i32.const 88312
     i32.ge_u
     if
      global.get $~lib/rt/tlsf/ROOT
      i32.eqz
      if
       call $~lib/rt/tlsf/initialize
      end
      global.get $~lib/rt/tlsf/ROOT
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.set $2
      local.get $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if (result i32)
       i32.const 1
      else
       local.get $2
       i32.load
       i32.const 1
       i32.and
      end
      if
       i32.const 0
       i32.const 3312
       i32.const 562
       i32.const 3
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      local.get $2
      i32.load
      i32.const 1
      i32.or
      i32.store
      local.get $1
      local.get $2
      call $~lib/rt/tlsf/insertBlock
     end
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   i32.store offset=4
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   i32.store offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   local.get $1
   i32.const 536870910
   i32.lt_u
   if
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
    local.set $1
   end
   local.get $1
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   local.tee $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3312
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 3312
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 2976
   i32.const 3040
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt$68
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt$68
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $4
  local.get $0
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 2976
   i32.const 3312
   i32.const 461
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $2
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
  end
  local.tee $5
  call $~lib/rt/tlsf/searchBlock
  local.tee $2
  i32.eqz
  if
   memory.size
   local.tee $2
   local.get $5
   i32.const 256
   i32.ge_u
   if (result i32)
    local.get $5
    i32.const 536870910
    i32.lt_u
    if (result i32)
     local.get $5
     i32.const 1
     i32.const 27
     local.get $5
     i32.clz
     i32.sub
     i32.shl
     i32.add
     i32.const 1
     i32.sub
    else
     local.get $5
    end
   else
    local.get $5
   end
   i32.const 4
   local.get $4
   i32.load offset=1568
   local.get $2
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $3
   local.get $2
   local.get $3
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $4
   local.get $2
   i32.const 16
   i32.shl
   memory.size
   i64.extend_i32_s
   i64.const 16
   i64.shl
   call $~lib/rt/tlsf/addMemory
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/searchBlock
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 3312
    i32.const 499
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $5
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 3312
   i32.const 501
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $2
  call $~lib/rt/tlsf/removeBlock
  local.get $2
  i32.load
  local.set $6
  local.get $5
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 3312
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $6
  i32.const -4
  i32.and
  local.get $5
  i32.sub
  local.tee $3
  i32.const 16
  i32.ge_u
  if
   local.get $2
   local.get $5
   local.get $6
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.add
   local.tee $5
   local.get $3
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $4
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $2
   local.get $6
   i32.const -2
   i32.and
   i32.store
   local.get $2
   i32.const 4
   i32.add
   local.get $2
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   local.get $3
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill
  local.get $1
 )
 (func $~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.eqz
  if
   return
  end
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 3040
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $start:assembly/core/math-cache
  (local $0 i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 30
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $3
   local.get $4
   i32.store
   local.get $3
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   i32.const 64
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $3
   local.get $4
   i32.store offset=8
   local.get $3
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   i32.const 3
   i32.const 31
   i32.const 4288
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.store offset=4
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i64.const 0
   i64.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    i32.const 4192
    i32.store offset=4
    i32.const 4192
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4192
     i32.store offset=4
     i32.const 4192
     local.get $0
     call $~lib/array/Array<u32>#__get
     i64.extend_i32_u
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $3
     i32.store offset=4
     local.get $3
     local.get $2
     i32.const 1
     call $"~lib/map/Map<u64,bool>#set"
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=4
     local.tee $3
     i32.store offset=4
     local.get $3
     local.get $2
     call $~lib/array/Array<u64>#push
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4192
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4192
   i32.store offset=12
   local.get $1
   i32.const 4192
   i32.const 4192
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<u32>#__get
   i64.extend_i32_u
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   global.set $assembly/core/math-cache/primeCache
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/object-pool/MathObjectPools.initialize~anonymous|0 (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 33
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/object-pool/MathObjectPools.initialize~anonymous|1 (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 37
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/object-pool/MathObjectPools.initialize~anonymous|2 (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 40
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 3
  i32.const 31
  i32.const 4480
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/object-pool/MathObjectPools.initialize~anonymous|3 (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 43
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 32
  i32.const 4576
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/object-pool/MathObjectPools.initialize~anonymous|4 (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 9
  i32.const 46
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 14
  i32.const 4672
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store8 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:assembly/core/object-pool
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4352
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 36
   i32.const 4320
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4352
   i32.store offset=8
   local.get $0
   i32.const 4352
   i32.store offset=4
   local.get $0
   i32.const 4352
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 50
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/object-pool/MathObjectPools.extendedGCDPool
   global.get $~lib/memory/__stack_pointer
   i32.const 4416
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 38
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 39
   i32.const 4384
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4416
   i32.store offset=8
   local.get $0
   i32.const 4416
   i32.store offset=4
   local.get $0
   i32.const 4416
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 100
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/object-pool/MathObjectPools.complexPool
   global.get $~lib/memory/__stack_pointer
   i32.const 4512
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 41
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 42
   i32.const 4448
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4512
   i32.store offset=8
   local.get $0
   i32.const 4512
   i32.store offset=4
   local.get $0
   i32.const 4512
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 20
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/object-pool/MathObjectPools.u64ArrayPool
   global.get $~lib/memory/__stack_pointer
   i32.const 4608
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 45
   i32.const 4544
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4608
   i32.store offset=8
   local.get $0
   i32.const 4608
   i32.store offset=4
   local.get $0
   i32.const 4608
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 20
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/object-pool/MathObjectPools.i32ArrayPool
   global.get $~lib/memory/__stack_pointer
   i32.const 4704
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 47
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 48
   i32.const 4640
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4704
   i32.store offset=8
   local.get $0
   i32.const 4704
   i32.store offset=4
   local.get $0
   i32.const 4704
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 10
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/object-pool/MathObjectPools.bigIntPool
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/core/math-performance
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 54
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 56
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,i32>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/math-performance/globalMathProfiler
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 58
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,i32>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,i32>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/math-performance/globalMathMemoryTracker
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/identity/audit-trail
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 59
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 62
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1000000
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 365
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 63
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/audit-trail/globalAuditTrail
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $1
  local.get $3
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $1
   i32.const 7
   i32.and
   local.get $2
   i32.const 7
   i32.and
   i32.or
  else
   i32.const 1
  end
  i32.eqz
  if
   loop $do-loop|0
    local.get $1
    i64.load
    local.get $2
    i64.load
    i64.eq
    if
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 8
     i32.add
     local.set $2
     local.get $3
     i32.const 4
     i32.sub
     local.tee $3
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $3
   local.tee $0
   i32.const 1
   i32.sub
   local.set $3
   local.get $0
   if
    local.get $1
    i32.load16_u
    local.tee $0
    local.get $2
    i32.load16_u
    local.tee $4
    i32.ne
    if
     local.get $0
     local.get $4
     i32.sub
     return
    end
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $start:assembly/identity/kyc-provider
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 65
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/kyc-provider/KYCProviderRegistry.providers
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 66
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 10384
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 10432
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 10384
   i32.const 10432
   call $assembly/identity/kyc-provider/BaseKYCProvider#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 10384
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   i32.const 10384
   local.get $1
   call $assembly/identity/kyc-provider/KYCProviderRegistry.registerProvider
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 71
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 10496
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 10544
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 10496
   i32.const 10544
   call $assembly/identity/kyc-provider/BaseKYCProvider#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=20
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 10496
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 10496
   local.get $2
   call $assembly/identity/kyc-provider/KYCProviderRegistry.registerProvider
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/identity/prime-mapping
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $~lib/set/Set<u32>#constructor
  global.set $assembly/identity/prime-mapping/PrimeGenerator.primeCache
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 73
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 75
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $~lib/set/Set<u32>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 1000
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/prime-mapping/globalPrimeMapper
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/ownership-transfer/OwnershipTransferManager#registerDefaultHandlers~anonymous|0 (param $0 i32) (result i32)
  i32.const 1
 )
 (func $start:assembly/identity/ownership-transfer
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 76
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,assembly/identity/ownership-transfer/TransferRequest>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,assembly/identity/ownership-transfer/TransferRequest>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/identity/permissions/PermissionEvaluator#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 81
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 10608
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 10608
   call $assembly/identity/ownership-transfer/OwnershipTransferManager#registerTransferHandler
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 10640
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.const 10640
   call $assembly/identity/ownership-transfer/OwnershipTransferManager#registerTransferHandler
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/ownership-transfer/globalTransferManager
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/identity/resolang-processor
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 83
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 88
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/identity/resolang-processor/QuantumIdentityRecovery#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 90
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $~lib/array/Array<assembly/resolang/ResonantFragment>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/resolang-processor/globalResoLangProcessor
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/identity/permission-inheritance
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 102
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 113
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 114
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/permission-inheritance/globalPermissionInheritance
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 13852
   i32.add
   i32.load
   i32.store
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 13852
   i32.add
   i32.load
   i32.store
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16
  end
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  local.get $1
  i32.const 36
  i32.gt_s
  i32.or
  if
   i32.const 13648
   i32.const 13776
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~lib/util/number/itoa32$148
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13840
    local.set $6
    br $__inlined_func$~lib/util/number/itoa32$148
   end
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $5
   select
   local.set $7
   local.get $1
   i32.const 10
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $7
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $7
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $7
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $7
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $7
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $7
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $7
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $7
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $0
    i32.const 1
    i32.shl
    local.get $5
    i32.add
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $6
    i32.store
    local.get $5
    local.get $6
    i32.add
    local.get $7
    local.get $0
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $1
    i32.const 16
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 31
     local.get $7
     i32.clz
     i32.sub
     i32.const 2
     i32.shr_s
     i32.const 1
     i32.add
     local.tee $1
     i32.const 1
     i32.shl
     local.get $5
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store
     local.get $5
     local.get $6
     i32.add
     local.set $0
     local.get $7
     i64.extend_i32_u
     local.set $2
     loop $while-continue|0
      local.get $1
      i32.const 2
      i32.ge_u
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.sub
       local.tee $1
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.wrap_i64
       i32.const 255
       i32.and
       i32.const 2
       i32.shl
       i32.const 14272
       i32.add
       i32.load
       i32.store
       local.get $2
       i64.const 8
       i64.shr_u
       local.set $2
       br $while-continue|0
      end
     end
     local.get $1
     i32.const 1
     i32.and
     if
      local.get $0
      local.get $2
      i32.wrap_i64
      i32.const 6
      i32.shl
      i32.const 14272
      i32.add
      i32.load16_u
      i32.store16
     end
    else
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/util/number/ulog_base$3578 (result i32)
      local.get $7
      i64.extend_i32_u
      local.set $3
      local.get $1
      i32.popcnt
      i32.const 1
      i32.eq
      if
       i32.const 63
       local.get $3
       i64.clz
       i32.wrap_i64
       i32.sub
       i32.const 31
       local.get $1
       i32.clz
       i32.sub
       i32.div_u
       i32.const 1
       i32.add
       br $__inlined_func$~lib/util/number/ulog_base$3578
      end
      local.get $1
      i64.extend_i32_s
      local.tee $8
      local.set $2
      i32.const 1
      local.set $0
      loop $while-continue|01
       local.get $2
       local.get $3
       i64.le_u
       if
        local.get $3
        local.get $2
        i64.div_u
        local.set $3
        local.get $2
        local.get $2
        i64.mul
        local.set $2
        local.get $0
        i32.const 1
        i32.shl
        local.set $0
        br $while-continue|01
       end
      end
      loop $while-continue|1
       local.get $3
       i64.const 0
       i64.ne
       if
        local.get $3
        local.get $8
        i64.div_u
        local.set $3
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $while-continue|1
       end
      end
      local.get $0
      i32.const 1
      i32.sub
     end
     local.tee $0
     i32.const 1
     i32.shl
     local.get $5
     i32.add
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store
     local.get $5
     local.get $6
     i32.add
     local.set $4
     local.get $7
     i64.extend_i32_u
     local.set $2
     local.get $1
     i64.extend_i32_s
     local.set $3
     local.get $1
     local.get $1
     i32.const 1
     i32.sub
     i32.and
     if
      loop $do-loop|1
       local.get $4
       local.get $0
       i32.const 1
       i32.sub
       local.tee $0
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $2
       local.get $3
       i64.div_u
       local.tee $2
       local.get $3
       i64.mul
       i64.sub
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 15328
       i32.add
       i32.load16_u
       i32.store16
       local.get $2
       i64.const 0
       i64.ne
       br_if $do-loop|1
      end
     else
      local.get $1
      i32.ctz
      i32.const 7
      i32.and
      i64.extend_i32_s
      local.set $8
      local.get $3
      i64.const 1
      i64.sub
      local.set $3
      loop $do-loop|0
       local.get $4
       local.get $0
       i32.const 1
       i32.sub
       local.tee $0
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $3
       i64.and
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 15328
       i32.add
       i32.load16_u
       i32.store16
       local.get $2
       local.get $8
       i64.shr_u
       local.tee $2
       i64.const 0
       i64.ne
       br_if $do-loop|0
      end
     end
    end
   end
   local.get $5
   if
    local.get $6
    i32.const 45
    i32.store16
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $6
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   local.tee $0
   i64.eqz
   if
    i64.const -7046029254386353131
    local.set $0
   end
   local.get $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   i64.const 33
   i64.shr_u
   local.get $0
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
  end
  global.get $~lib/math/random_state0_64
  local.set $1
  global.get $~lib/math/random_state1_64
  local.tee $0
  global.set $~lib/math/random_state0_64
  local.get $0
  local.get $1
  local.get $1
  i64.const 23
  i64.shl
  i64.xor
  local.tee $1
  i64.const 17
  i64.shr_u
  local.get $1
  i64.xor
  i64.xor
  local.get $0
  i64.const 26
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state1_64
  local.get $0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  f64.reinterpret_i64
  f64.const -1
  f64.add
 )
 (func $~lib/util/number/utoa64_dec_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  loop $while-continue|0
   local.get $1
   i64.const 100000000
   i64.ge_u
   if
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    local.get $1
    i64.const 100000000
    i64.div_u
    local.tee $1
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.tee $3
    i32.const 10000
    i32.rem_u
    local.tee $4
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    local.get $4
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 10000
    i32.div_u
    local.tee $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 13852
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/genDigits (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  local.get $1
  local.get $0
  i64.sub
  local.set $10
  i64.const 1
  i32.const 0
  local.get $2
  i32.sub
  local.tee $11
  i64.extend_i32_s
  local.tee $0
  i64.shl
  local.tee $7
  i64.const 1
  i64.sub
  local.tee $12
  local.get $1
  i64.and
  local.set $9
  local.get $1
  local.get $0
  i64.shr_u
  i32.wrap_i64
  local.tee $5
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $5
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $5
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $5
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $5
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $5
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $8
  loop $while-continue|0
   local.get $8
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $8
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $5
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $5
               i32.const 1000000000
               i32.rem_u
               local.set $5
               br $break|1
              end
              local.get $5
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $5
              i32.const 100000000
              i32.rem_u
              local.set $5
              br $break|1
             end
             local.get $5
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $5
             i32.const 10000000
             i32.rem_u
             local.set $5
             br $break|1
            end
            local.get $5
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $5
            i32.const 1000000
            i32.rem_u
            local.set $5
            br $break|1
           end
           local.get $5
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $5
           i32.const 100000
           i32.rem_u
           local.set $5
           br $break|1
          end
          local.get $5
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $5
          i32.const 10000
          i32.rem_u
          local.set $5
          br $break|1
         end
         local.get $5
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $5
         i32.const 1000
         i32.rem_u
         local.set $5
         br $break|1
        end
        local.get $5
        i32.const 100
        i32.div_u
        local.set $6
        local.get $5
        i32.const 100
        i32.rem_u
        local.set $5
        br $break|1
       end
       local.get $5
       i32.const 10
       i32.div_u
       local.set $6
       local.get $5
       i32.const 10
       i32.rem_u
       local.set $5
       br $break|1
      end
      local.get $5
      local.set $6
      i32.const 0
      local.set $5
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $4
    local.get $6
    i32.or
    if
     local.get $4
     local.tee $2
     i32.const 1
     i32.add
     local.set $4
     local.get $2
     i32.const 1
     i32.shl
     i32.const 15648
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $8
    local.get $3
    local.get $5
    i64.extend_i32_u
    local.get $11
    i64.extend_i32_s
    local.tee $1
    i64.shl
    local.get $9
    i64.add
    local.tee $0
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $8
     i32.add
     global.set $~lib/util/number/_K
     local.get $8
     i32.const 2
     i32.shl
     i32.const 16576
     i32.add
     i64.load32_u
     local.get $1
     i64.shl
     local.set $7
     local.get $4
     i32.const 1
     i32.shl
     i32.const 15646
     i32.add
     local.tee $2
     i32.load16_u
     local.set $6
     loop $while-continue|3
      local.get $0
      local.get $10
      i64.lt_u
      local.get $3
      local.get $0
      i64.sub
      local.get $7
      i64.ge_u
      i32.and
      if (result i32)
       local.get $10
       local.get $0
       local.get $7
       i64.add
       local.tee $1
       i64.gt_u
       local.get $10
       local.get $0
       i64.sub
       local.get $1
       local.get $10
       i64.sub
       i64.gt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       local.get $0
       local.get $7
       i64.add
       local.set $0
       br $while-continue|3
      end
     end
     local.get $2
     local.get $6
     i32.store16
     local.get $4
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $3
   i64.const 10
   i64.mul
   local.set $3
   local.get $9
   i64.const 10
   i64.mul
   local.tee $1
   local.get $11
   i64.extend_i32_s
   i64.shr_u
   local.tee $0
   local.get $4
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $4
    local.tee $2
    i32.const 1
    i32.add
    local.set $4
    local.get $2
    i32.const 1
    i32.shl
    i32.const 15648
    i32.add
    local.get $0
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16
   end
   local.get $8
   i32.const 1
   i32.sub
   local.set $8
   local.get $1
   local.get $12
   i64.and
   local.tee $9
   local.get $3
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $8
  i32.add
  global.set $~lib/util/number/_K
  local.get $10
  i32.const 0
  local.get $8
  i32.sub
  i32.const 2
  i32.shl
  i32.const 16576
  i32.add
  i64.load32_u
  i64.mul
  local.set $1
  local.get $4
  i32.const 1
  i32.shl
  i32.const 15646
  i32.add
  local.tee $2
  i32.load16_u
  local.set $6
  loop $while-continue|6
   local.get $1
   local.get $9
   i64.gt_u
   local.get $3
   local.get $9
   i64.sub
   local.get $7
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $7
    local.get $9
    i64.add
    local.tee $0
    i64.gt_u
    local.get $1
    local.get $9
    i64.sub
    local.get $0
    local.get $1
    i64.sub
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    local.get $7
    local.get $9
    i64.add
    local.set $9
    br $while-continue|6
   end
  end
  local.get $2
  local.get $6
  i32.store16
  local.get $4
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $0
     i32.const 3014704
     i32.store
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 f64) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  f64.const 0
  f64.lt
  local.tee $2
  if (result f64)
   i32.const 15648
   i32.const 45
   i32.store16
   local.get $0
   f64.neg
  else
   local.get $0
  end
  i64.reinterpret_f64
  local.tee $1
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $4
  i32.const 1
  local.get $4
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $1
  i64.const 4503599627370495
  i64.and
  local.get $4
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $1
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $3
  i64.clz
  i32.wrap_i64
  local.tee $9
  i32.sub
  local.set $4
  local.get $3
  local.get $9
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $1
  local.get $1
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $9
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $9
  i32.sub
  local.get $4
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $4
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $0
  i32.trunc_sat_f64_s
  local.tee $4
  local.get $4
  f64.convert_i32_s
  local.get $0
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $4
  i32.const 3
  i32.shl
  local.tee $8
  i32.sub
  global.set $~lib/util/number/_K
  local.get $8
  i32.const 15704
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  local.get $4
  i32.const 1
  i32.shl
  i32.const 16400
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $1
  local.get $1
  i64.clz
  i64.shl
  local.tee $1
  i64.const 4294967295
  i64.and
  local.set $5
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  local.get $1
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $5
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $6
  global.get $~lib/util/number/_frc_plus
  local.tee $3
  i64.const 4294967295
  i64.and
  local.set $12
  local.get $3
  i64.const 32
  i64.shr_u
  local.tee $3
  local.get $11
  i64.mul
  local.get $11
  local.get $12
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $7
  global.get $~lib/util/number/_frc_minus
  local.tee $13
  i64.const 4294967295
  i64.and
  local.set $14
  local.get $13
  i64.const 32
  i64.shr_u
  local.tee $13
  local.get $11
  i64.mul
  local.get $11
  local.get $14
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $2
  i32.const 1
  i32.shl
  i32.const 15648
  i32.add
  local.get $1
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $1
  i64.mul
  local.get $6
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $5
  i64.mul
  local.get $6
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $3
  i64.mul
  local.get $7
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $12
  i64.mul
  local.get $7
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.tee $3
  global.get $~lib/util/number/_exp_pow
  global.get $~lib/util/number/_exp
  i32.add
  i32.const -64
  i32.sub
  local.get $3
  local.get $1
  local.get $13
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  local.get $14
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $2
  call $~lib/util/number/genDigits
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $2
  i32.add
 )
 (func $~lib/number/F64#toString (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 15504
  local.set $1
  block $~lib/util/number/dtoa_impl|inlined.0
   local.get $0
   f64.const 0
   f64.eq
   br_if $~lib/util/number/dtoa_impl|inlined.0
   local.get $0
   local.get $0
   f64.sub
   f64.const 0
   f64.ne
   if
    i32.const 15536
    local.set $1
    local.get $0
    local.get $0
    f64.ne
    br_if $~lib/util/number/dtoa_impl|inlined.0
    i32.const 15568
    i32.const 15616
    local.get $0
    f64.const 0
    f64.lt
    select
    local.set $1
    br $~lib/util/number/dtoa_impl|inlined.0
   end
   local.get $0
   call $~lib/util/number/dtoa_core
   i32.const 1
   i32.shl
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 15648
   local.get $2
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/constants/degreesToRadians (param $0 f64) (result f64)
  local.get $0
  f64.const 3.141592653589793
  f64.mul
  f64.const 180
  f64.div
 )
 (func $assembly/core/constants/radiansToDegrees (param $0 f64) (result f64)
  local.get $0
  f64.const 180
  f64.mul
  f64.const 3.141592653589793
  f64.div
 )
 (func $~lib/math/NativeMath.log2 (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  block $~lib/util/math/log2_lut|inlined.0 (result f64)
   local.get $0
   i64.reinterpret_f64
   local.tee $1
   i64.const 4606800540372828160
   i64.sub
   i64.const 581272283906048
   i64.lt_u
   if
    local.get $0
    f64.const -1
    f64.add
    local.tee $5
    i64.reinterpret_f64
    i64.const -4294967296
    i64.and
    f64.reinterpret_i64
    local.tee $6
    f64.const 1.4426950407214463
    f64.mul
    local.set $7
    local.get $5
    local.get $5
    f64.mul
    local.tee $8
    local.get $8
    f64.mul
    local.set $0
    local.get $7
    local.get $8
    local.get $5
    f64.const 0.48089834696298744
    f64.mul
    f64.const -0.7213475204444817
    f64.add
    f64.mul
    local.tee $4
    f64.add
    local.tee $9
    local.get $5
    local.get $6
    f64.sub
    f64.const 1.4426950407214463
    f64.mul
    local.get $5
    f64.const 1.6751713164886512e-10
    f64.mul
    f64.add
    local.get $7
    local.get $9
    f64.sub
    local.get $4
    f64.add
    f64.add
    local.get $0
    local.get $5
    f64.const 0.2885390081805197
    f64.mul
    f64.const -0.360673760222145
    f64.add
    local.get $8
    local.get $5
    f64.const 0.2060992861022954
    f64.mul
    f64.const -0.24044917405728863
    f64.add
    f64.mul
    f64.add
    local.get $0
    local.get $5
    f64.const 0.1603032746063156
    f64.mul
    f64.const -0.18033596705327856
    f64.add
    local.get $8
    local.get $5
    f64.const 0.13046826811283835
    f64.mul
    f64.const -0.14483316576701266
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.add
    br $~lib/util/math/log2_lut|inlined.0
   end
   local.get $1
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.tee $2
   i32.const 16
   i32.sub
   i32.const 32736
   i32.ge_u
   if
    f64.const -1
    local.get $0
    local.get $0
    f64.mul
    f64.div
    local.get $1
    i64.const 1
    i64.shl
    i64.eqz
    br_if $~lib/util/math/log2_lut|inlined.0
    drop
    local.get $0
    local.get $1
    i64.const 9218868437227405312
    i64.eq
    br_if $~lib/util/math/log2_lut|inlined.0
    drop
    i32.const 1
    local.get $2
    i32.const 32752
    i32.and
    i32.const 32752
    i32.eq
    local.get $2
    i32.const 32768
    i32.and
    select
    if
     local.get $0
     local.get $0
     f64.sub
     local.tee $0
     local.get $0
     f64.div
     br $~lib/util/math/log2_lut|inlined.0
    end
    local.get $0
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    i64.const 234187180623265792
    i64.sub
    local.set $1
   end
   local.get $1
   i64.const 4604367669032910848
   i64.sub
   local.tee $3
   i64.const 46
   i64.shr_u
   i64.const 63
   i64.and
   i32.wrap_i64
   i32.const 4
   i32.shl
   local.tee $2
   i32.const 16848
   i32.add
   local.set $10
   local.get $3
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.get $10
   f64.load offset=8
   f64.add
   local.tee $0
   local.get $1
   local.get $3
   i64.const -4503599627370496
   i64.and
   i64.sub
   f64.reinterpret_i64
   local.get $2
   i32.const 17872
   i32.add
   local.tee $2
   f64.load
   f64.sub
   local.get $2
   f64.load offset=8
   f64.sub
   local.get $10
   f64.load
   f64.mul
   local.tee $4
   i64.reinterpret_f64
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.tee $5
   f64.const 1.4426950407214463
   f64.mul
   local.tee $6
   f64.add
   local.set $7
   local.get $0
   local.get $7
   f64.sub
   local.get $6
   f64.add
   local.get $4
   local.get $5
   f64.sub
   f64.const 1.4426950407214463
   f64.mul
   local.get $4
   f64.const 1.6751713164886512e-10
   f64.mul
   f64.add
   f64.add
   local.get $4
   local.get $4
   f64.mul
   local.tee $0
   local.get $4
   f64.const 0.4808983469629985
   f64.mul
   f64.const -0.7213475204444882
   f64.add
   local.get $0
   local.get $4
   f64.const 0.2885390073180969
   f64.mul
   f64.const -0.36067375954075914
   f64.add
   f64.mul
   f64.add
   local.get $0
   local.get $0
   f64.mul
   local.get $4
   f64.const 0.2061202382173603
   f64.mul
   f64.const -0.2404693555628422
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $7
   f64.add
  end
 )
 (func $~lib/math/pio2_large_quot (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  local.get $0
  i64.const 9223372036854775807
  i64.and
  i64.const 52
  i64.shr_u
  i64.const 1045
  i64.sub
  local.tee $1
  i64.const 63
  i64.and
  local.set $6
  local.get $1
  i64.const 6
  i64.shr_s
  i32.wrap_i64
  i32.const 3
  i32.shl
  i32.const 18896
  i32.add
  local.tee $4
  i64.load
  local.set $3
  local.get $4
  i64.load offset=8
  local.set $2
  local.get $4
  i64.load offset=16
  local.set $1
  local.get $6
  i64.const 0
  i64.ne
  if
   local.get $3
   local.get $6
   i64.shl
   local.get $2
   i64.const 64
   local.get $6
   i64.sub
   local.tee $7
   i64.shr_u
   i64.or
   local.set $3
   local.get $2
   local.get $6
   i64.shl
   local.get $1
   local.get $7
   i64.shr_u
   i64.or
   local.set $2
   local.get $1
   local.get $6
   i64.shl
   local.get $4
   i64.load offset=24
   local.get $7
   i64.shr_u
   i64.or
   local.set $1
  end
  local.get $0
  i64.const 4503599627370495
  i64.and
  i64.const 4503599627370496
  i64.or
  local.tee $6
  i64.const 4294967295
  i64.and
  local.set $7
  local.get $2
  i64.const 4294967295
  i64.and
  local.tee $8
  local.get $6
  i64.const 32
  i64.shr_u
  local.tee $9
  i64.mul
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $2
  local.get $7
  i64.mul
  local.get $7
  local.get $8
  i64.mul
  local.tee $7
  i64.const 32
  i64.shr_u
  i64.add
  local.tee $8
  i64.const 4294967295
  i64.and
  i64.add
  local.set $10
  local.get $2
  local.get $9
  i64.mul
  local.get $8
  i64.const 32
  i64.shr_u
  i64.add
  local.get $10
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $9
  local.get $1
  i64.const 32
  i64.shr_u
  i64.mul
  local.tee $1
  local.get $7
  i64.const 4294967295
  i64.and
  local.get $10
  i64.const 32
  i64.shl
  i64.add
  i64.add
  local.tee $2
  local.get $1
  i64.lt_u
  i64.extend_i32_u
  global.get $~lib/math/res128_hi
  local.get $3
  local.get $6
  i64.mul
  i64.add
  i64.add
  local.tee $3
  i64.const 2
  i64.shl
  local.get $2
  i64.const 62
  i64.shr_u
  i64.or
  local.tee $6
  i64.const 63
  i64.shr_s
  local.tee $7
  local.get $2
  i64.const 2
  i64.shl
  i64.xor
  local.set $2
  local.get $6
  local.get $7
  i64.const 1
  i64.shr_s
  i64.xor
  local.tee $1
  i64.clz
  local.set $8
  local.get $1
  local.get $8
  i64.shl
  local.get $2
  i64.const 64
  local.get $8
  i64.sub
  i64.shr_u
  i64.or
  local.tee $9
  i64.const 4294967295
  i64.and
  local.set $1
  local.get $9
  i64.const 32
  i64.shr_u
  local.tee $10
  i64.const 560513588
  i64.mul
  local.get $1
  i64.const 3373259426
  i64.mul
  local.get $1
  i64.const 560513588
  i64.mul
  local.tee $11
  i64.const 32
  i64.shr_u
  i64.add
  local.tee $12
  i64.const 4294967295
  i64.and
  i64.add
  local.set $1
  local.get $10
  i64.const 3373259426
  i64.mul
  local.get $12
  i64.const 32
  i64.shr_u
  i64.add
  local.get $1
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $9
  f64.convert_i64_u
  f64.const 3.753184150245214e-04
  f64.mul
  local.get $2
  local.get $8
  i64.shl
  f64.convert_i64_u
  f64.const 3.834951969714103e-04
  f64.mul
  f64.add
  i64.trunc_sat_f64_u
  local.tee $2
  local.get $11
  i64.const 4294967295
  i64.and
  local.get $1
  i64.const 32
  i64.shl
  i64.add
  local.tee $1
  i64.gt_u
  i64.extend_i32_u
  global.get $~lib/math/res128_hi
  local.tee $9
  i64.const 11
  i64.shr_u
  i64.add
  f64.convert_i64_u
  global.set $~lib/math/rempio2_y0
  local.get $9
  i64.const 53
  i64.shl
  local.get $1
  i64.const 11
  i64.shr_u
  i64.or
  local.get $2
  i64.add
  f64.convert_i64_u
  f64.const 5.421010862427522e-20
  f64.mul
  global.set $~lib/math/rempio2_y1
  global.get $~lib/math/rempio2_y0
  i64.const 4372995238176751616
  local.get $8
  i64.const 52
  i64.shl
  i64.sub
  local.get $0
  local.get $6
  i64.xor
  i64.const -9223372036854775808
  i64.and
  i64.or
  f64.reinterpret_i64
  local.tee $5
  f64.mul
  global.set $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  local.get $5
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $3
  i64.const 62
  i64.shr_s
  local.get $7
  i64.sub
  i32.wrap_i64
 )
 (func $~lib/math/NativeMath.sin (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 31
  i32.shr_u
  local.set $6
  local.get $3
  i32.const 2147483647
  i32.and
  local.tee $3
  i32.const 1072243195
  i32.le_u
  if
   local.get $3
   i32.const 1045430272
   i32.lt_u
   if
    local.get $0
    return
   end
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   local.tee $1
   local.get $0
   f64.mul
   local.get $1
   local.get $1
   local.get $1
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $1
   local.get $1
   local.get $1
   f64.mul
   f64.mul
   local.get $1
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.const -0.16666666666666632
   f64.add
   f64.mul
   f64.add
   return
  end
  local.get $3
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.0 (result i32)
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.tee $4
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $3
    local.get $6
    if (result f64)
     local.get $0
     f64.const 1.5707963267341256
     f64.add
     local.set $0
     i32.const -1
     local.set $3
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const 6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const 6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
     end
    else
     local.get $0
     f64.const -1.5707963267341256
     f64.add
     local.set $0
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const -6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const -6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const -6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const -2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const -2.0222662487959506e-21
      f64.add
     end
    end
    local.set $1
    local.get $0
    global.set $~lib/math/rempio2_y0
    local.get $1
    global.set $~lib/math/rempio2_y1
    local.get $3
    br $~lib/math/rempio2|inlined.0
   end
   local.get $4
   i32.const 1094263291
   i32.lt_u
   if
    local.get $4
    i32.const 20
    i32.shr_u
    local.tee $3
    local.get $0
    local.get $0
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.tee $7
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.tee $0
    local.get $7
    f64.const 6.077100506506192e-11
    f64.mul
    local.tee $2
    f64.sub
    local.tee $1
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    i32.const 16
    i32.gt_u
    if
     local.get $7
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $0
     local.get $0
     local.get $7
     f64.const 6.077100506303966e-11
     f64.mul
     local.tee $1
     f64.sub
     local.tee $0
     f64.sub
     local.get $1
     f64.sub
     f64.sub
     local.set $2
     local.get $3
     local.get $0
     local.get $2
     f64.sub
     local.tee $1
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     i32.const 49
     i32.gt_u
     if
      local.get $7
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $0
      local.get $0
      local.get $7
      f64.const 2.0222662487111665e-21
      f64.mul
      local.tee $1
      f64.sub
      local.tee $0
      f64.sub
      local.get $1
      f64.sub
      f64.sub
      local.set $2
      local.get $0
      local.get $2
      f64.sub
      local.set $1
     end
    end
    local.get $1
    global.set $~lib/math/rempio2_y0
    local.get $0
    local.get $1
    f64.sub
    local.get $2
    f64.sub
    global.set $~lib/math/rempio2_y1
    local.get $7
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.0
   end
   i32.const 0
   local.get $5
   call $~lib/math/pio2_large_quot
   local.tee $3
   i32.sub
   local.get $3
   local.get $6
   select
  end
  local.set $3
  global.get $~lib/math/rempio2_y0
  local.set $2
  global.get $~lib/math/rempio2_y1
  local.set $7
  local.get $3
  i32.const 1
  i32.and
  if (result f64)
   local.get $2
   local.get $2
   f64.mul
   local.tee $0
   local.get $0
   f64.mul
   local.set $1
   f64.const 1
   local.get $0
   f64.const 0.5
   f64.mul
   local.tee $8
   f64.sub
   local.tee $9
   f64.const 1
   local.get $9
   f64.sub
   local.get $8
   f64.sub
   local.get $0
   local.get $0
   local.get $0
   local.get $0
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $1
   local.get $1
   f64.mul
   local.get $0
   local.get $0
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $2
   local.get $7
   f64.mul
   f64.sub
   f64.add
   f64.add
  else
   local.get $2
   local.get $2
   f64.mul
   local.tee $0
   local.get $2
   f64.mul
   local.set $1
   local.get $2
   local.get $0
   local.get $7
   f64.const 0.5
   f64.mul
   local.get $1
   local.get $0
   local.get $0
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   f64.mul
   local.get $0
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.sub
   f64.mul
   local.get $7
   f64.sub
   local.get $1
   f64.const -0.16666666666666632
   f64.mul
   f64.sub
   f64.sub
  end
  local.tee $0
  f64.neg
  local.get $0
  local.get $3
  i32.const 2
  i32.and
  select
 )
 (func $~lib/math/NativeMath.expm1 (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const 2147483647
  i32.and
  local.set $3
  local.get $5
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  local.set $4
  local.get $3
  i32.const 1078159482
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.ne
   if
    local.get $0
    return
   end
   local.get $4
   if
    f64.const -1
    return
   end
   local.get $0
   f64.const 709.782712893384
   f64.gt
   if
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
    return
   end
  end
  local.get $3
  i32.const 1071001154
  i32.gt_u
  if
   local.get $0
   i32.const 1
   local.get $4
   i32.const 1
   i32.shl
   i32.sub
   local.get $0
   f64.const 1.4426950408889634
   f64.mul
   f64.const 0.5
   local.get $0
   f64.copysign
   f64.add
   i32.trunc_sat_f64_s
   local.get $3
   i32.const 1072734898
   i32.lt_u
   select
   local.tee $1
   f64.convert_i32_s
   local.tee $0
   f64.const 0.6931471803691238
   f64.mul
   f64.sub
   local.tee $2
   local.get $2
   local.get $0
   f64.const 1.9082149292705877e-10
   f64.mul
   local.tee $2
   f64.sub
   local.tee $0
   f64.sub
   local.get $2
   f64.sub
   local.set $2
  else
   local.get $3
   i32.const 1016070144
   i32.lt_u
   if
    local.get $0
    return
   end
  end
  local.get $0
  local.get $0
  f64.const 0.5
  f64.mul
  local.tee $7
  f64.mul
  local.tee $6
  local.get $6
  f64.mul
  local.set $8
  f64.const 3
  local.get $6
  f64.const -0.03333333333333313
  f64.mul
  f64.const 1
  f64.add
  local.get $8
  local.get $6
  f64.const -7.93650757867488e-05
  f64.mul
  f64.const 1.5873015872548146e-03
  f64.add
  local.get $8
  local.get $6
  f64.const -2.0109921818362437e-07
  f64.mul
  f64.const 4.008217827329362e-06
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.tee $8
  local.get $7
  f64.mul
  f64.sub
  local.set $7
  local.get $6
  local.get $8
  local.get $7
  f64.sub
  f64.const 6
  local.get $0
  local.get $7
  f64.mul
  f64.sub
  f64.div
  f64.mul
  local.set $7
  local.get $1
  i32.eqz
  if
   local.get $0
   local.get $0
   local.get $7
   f64.mul
   local.get $6
   f64.sub
   f64.sub
   return
  end
  local.get $0
  local.get $7
  local.get $2
  f64.sub
  f64.mul
  local.get $2
  f64.sub
  local.get $6
  f64.sub
  local.set $2
  local.get $1
  i32.const -1
  i32.eq
  if
   local.get $0
   local.get $2
   f64.sub
   f64.const 0.5
   f64.mul
   f64.const -0.5
   f64.add
   return
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   local.get $0
   f64.const -0.25
   f64.lt
   if
    local.get $2
    local.get $0
    f64.const 0.5
    f64.add
    f64.sub
    f64.const -2
    f64.mul
    return
   end
   local.get $0
   local.get $2
   f64.sub
   f64.const 2
   f64.mul
   f64.const 1
   f64.add
   return
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  local.set $6
  local.get $1
  i32.const 0
  i32.lt_s
  local.get $1
  i32.const 56
  i32.gt_s
  i32.or
  if
   local.get $0
   local.get $2
   f64.sub
   f64.const 1
   f64.add
   local.tee $0
   local.get $0
   f64.add
   f64.const 8988465674311579538646525e283
   f64.mul
   local.get $0
   local.get $6
   f64.mul
   local.get $1
   i32.const 1024
   i32.eq
   select
   f64.const -1
   f64.add
   return
  end
  local.get $0
  f64.const 1
  i64.const 1023
  local.get $1
  i64.extend_i32_s
  i64.sub
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  local.tee $0
  f64.sub
  local.get $2
  f64.sub
  f64.const 1
  local.get $2
  local.get $0
  f64.add
  f64.sub
  local.get $1
  i32.const 20
  i32.lt_s
  select
  f64.add
  local.get $6
  f64.mul
 )
 (func $~lib/math/NativeMath.pow (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i64)
  (local $12 i64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 i32)
  local.get $1
  f64.abs
  f64.const 2
  f64.le
  if
   local.get $1
   f64.const 2
   f64.eq
   if
    local.get $0
    local.get $0
    f64.mul
    return
   end
   local.get $1
   f64.const 0.5
   f64.eq
   if
    local.get $0
    f64.sqrt
    f64.abs
    f64.const inf
    local.get $0
    f64.const -inf
    f64.ne
    select
    return
   end
   local.get $1
   f64.const -1
   f64.eq
   if
    f64.const 1
    local.get $0
    f64.div
    return
   end
   local.get $1
   f64.const 1
   f64.eq
   if
    local.get $0
    return
   end
   local.get $1
   f64.const 0
   f64.eq
   if
    f64.const 1
    return
   end
  end
  block $~lib/util/math/pow_lut|inlined.0 (result f64)
   local.get $1
   i64.reinterpret_f64
   local.tee $11
   i64.const 52
   i64.shr_u
   local.set $6
   local.get $0
   i64.reinterpret_f64
   local.tee $2
   i64.const 52
   i64.shr_u
   local.tee $5
   i64.const 1
   i64.sub
   i64.const 2046
   i64.ge_u
   if (result i32)
    i32.const 1
   else
    local.get $6
    i64.const 2047
    i64.and
    i64.const 958
    i64.sub
    i64.const 128
    i64.ge_u
   end
   if
    local.get $11
    i64.const 1
    i64.shl
    local.tee $12
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $12
     i64.eqz
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $0
     local.get $1
     f64.add
     local.get $12
     i64.const -9007199254740992
     i64.gt_u
     local.get $2
     i64.const 1
     i64.shl
     local.tee $2
     i64.const -9007199254740992
     i64.gt_u
     i32.or
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const nan:0x8000000000000
     local.get $2
     i64.const 9214364837600034816
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 0
     local.get $11
     i64.const 63
     i64.shr_u
     i64.eqz
     local.get $2
     i64.const 9214364837600034816
     i64.lt_u
     i32.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     local.get $1
     local.get $1
     f64.mul
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 1
    i64.shl
    i64.const 1
    i64.sub
    i64.const -9007199254740993
    i64.ge_u
    if
     f64.const 1
     local.get $0
     local.get $0
     f64.mul
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     if (result i32)
      block $~lib/util/math/checkint|inlined.0 (result i32)
       i32.const 0
       local.get $11
       i64.const 52
       i64.shr_u
       i64.const 2047
       i64.and
       local.tee $2
       i64.const 1023
       i64.lt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
       local.get $2
       i64.const 1075
       i64.gt_u
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 0
       local.get $11
       i64.const 1
       i64.const 1075
       local.get $2
       i64.sub
       i64.shl
       local.tee $2
       i64.const 1
       i64.sub
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 1
       local.get $2
       local.get $11
       i64.and
       i64.const 0
       i64.ne
       br_if $~lib/util/math/checkint|inlined.0
       drop
       i32.const 2
      end
      i32.const 1
      i32.eq
     else
      i32.const 0
     end
     select
     local.tee $0
     f64.div
     local.get $0
     local.get $11
     i64.const 0
     i64.lt_s
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $2
    i64.const 0
    i64.lt_s
    if
     block $~lib/util/math/checkint|inlined.1 (result i32)
      i32.const 0
      local.get $11
      i64.const 52
      i64.shr_u
      i64.const 2047
      i64.and
      local.tee $12
      i64.const 1023
      i64.lt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
      local.get $12
      i64.const 1075
      i64.gt_u
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 0
      local.get $11
      i64.const 1
      i64.const 1075
      local.get $12
      i64.sub
      i64.shl
      local.tee $12
      i64.const 1
      i64.sub
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 1
      local.get $11
      local.get $12
      i64.and
      i64.const 0
      i64.ne
      br_if $~lib/util/math/checkint|inlined.1
      drop
      i32.const 2
     end
     local.tee $3
     i32.eqz
     if
      local.get $0
      local.get $0
      f64.sub
      local.tee $0
      local.get $0
      f64.div
      br $~lib/util/math/pow_lut|inlined.0
     end
     local.get $5
     i64.const 2047
     i64.and
     local.set $5
     i32.const 262144
     i32.const 0
     local.get $3
     i32.const 1
     i32.eq
     select
     local.set $4
     local.get $2
     i64.const 9223372036854775807
     i64.and
     local.set $2
    end
    local.get $6
    i64.const 2047
    i64.and
    local.tee $12
    i64.const 958
    i64.sub
    i64.const 128
    i64.ge_u
    if
     f64.const 1
     local.get $2
     i64.const 4607182418800017408
     i64.eq
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const 1
     local.get $12
     i64.const 958
     i64.lt_u
     br_if $~lib/util/math/pow_lut|inlined.0
     drop
     f64.const inf
     f64.const 0
     local.get $6
     i64.const 2048
     i64.lt_u
     local.get $2
     i64.const 4607182418800017408
     i64.gt_u
     i32.eq
     select
     br $~lib/util/math/pow_lut|inlined.0
    end
    local.get $5
    i64.eqz
    if
     local.get $0
     f64.const 4503599627370496
     f64.mul
     i64.reinterpret_f64
     i64.const 9223372036854775807
     i64.and
     i64.const 234187180623265792
     i64.sub
     local.set $2
    end
   end
   local.get $2
   local.get $2
   i64.const 4604531861337669632
   i64.sub
   local.tee $2
   i64.const -4503599627370496
   i64.and
   i64.sub
   local.tee $5
   i64.const 2147483648
   i64.add
   i64.const -4294967296
   i64.and
   f64.reinterpret_i64
   local.tee $7
   local.get $2
   i64.const 45
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   i32.const 5
   i32.shl
   i32.const 19088
   i32.add
   local.tee $3
   f64.load
   local.tee $8
   f64.mul
   f64.const -1
   f64.add
   local.set $9
   local.get $2
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.tee $13
   f64.const 0.6931471805598903
   f64.mul
   local.get $3
   f64.load offset=16
   f64.add
   local.tee $0
   local.get $9
   local.get $5
   f64.reinterpret_i64
   local.get $7
   f64.sub
   local.get $8
   f64.mul
   local.tee $7
   f64.add
   local.tee $14
   f64.add
   local.set $15
   local.get $14
   local.get $14
   f64.const -0.5
   f64.mul
   local.tee $8
   f64.mul
   local.set $16
   local.get $15
   local.get $9
   local.get $9
   f64.const -0.5
   f64.mul
   local.tee $17
   f64.mul
   local.tee $9
   f64.add
   local.tee $10
   local.get $10
   local.get $13
   f64.const 5.497923018708371e-14
   f64.mul
   local.get $3
   f64.load offset=24
   f64.add
   local.get $0
   local.get $15
   f64.sub
   local.get $14
   f64.add
   f64.add
   local.get $7
   local.get $8
   local.get $17
   f64.add
   f64.mul
   f64.add
   local.get $15
   local.get $10
   f64.sub
   local.get $9
   f64.add
   f64.add
   local.get $14
   local.get $16
   f64.mul
   local.get $14
   f64.const 0.5000000000000007
   f64.mul
   f64.const -0.6666666666666679
   f64.add
   local.get $16
   local.get $14
   f64.const -0.6666666663487739
   f64.mul
   f64.const 0.7999999995323976
   f64.add
   local.get $16
   local.get $14
   f64.const 1.0000415263675542
   f64.mul
   f64.const -1.142909628459501
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.tee $0
   f64.add
   local.tee $7
   f64.sub
   local.get $0
   f64.add
   global.set $~lib/util/math/log_tail
   block $~lib/util/math/exp_inline|inlined.0 (result f64)
    local.get $11
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $0
    local.get $7
    i64.reinterpret_f64
    i64.const -134217728
    i64.and
    f64.reinterpret_i64
    local.tee $8
    f64.mul
    local.tee $9
    i64.reinterpret_f64
    local.tee $2
    i64.const 52
    i64.shr_u
    i32.wrap_i64
    i32.const 2047
    i32.and
    local.tee $3
    i32.const 969
    i32.sub
    local.tee $18
    i32.const 63
    i32.ge_u
    if
     f64.const -1
     f64.const 1
     local.get $4
     select
     local.get $18
     i32.const -2147483648
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     f64.const -0
     f64.const 0
     local.get $4
     select
     f64.const -inf
     f64.const inf
     local.get $4
     select
     local.get $2
     i64.const 0
     i64.lt_s
     select
     local.get $3
     i32.const 1033
     i32.ge_u
     br_if $~lib/util/math/exp_inline|inlined.0
     drop
     i32.const 0
     local.set $3
    end
    local.get $9
    f64.const 184.6649652337873
    f64.mul
    f64.const 6755399441055744
    f64.add
    local.tee $10
    i64.reinterpret_f64
    local.tee $2
    i64.const 127
    i64.and
    i64.const 1
    i64.shl
    i32.wrap_i64
    i32.const 3
    i32.shl
    i32.const 23184
    i32.add
    local.tee $18
    i64.load offset=8
    local.get $2
    local.get $4
    i64.extend_i32_u
    i64.add
    i64.const 45
    i64.shl
    i64.add
    local.set $5
    local.get $9
    local.get $10
    f64.const -6755399441055744
    f64.add
    local.tee $9
    f64.const -0.005415212348111709
    f64.mul
    f64.add
    local.get $9
    f64.const -1.2864023111638346e-14
    f64.mul
    f64.add
    local.get $1
    local.get $0
    f64.sub
    local.get $8
    f64.mul
    local.get $1
    local.get $7
    local.get $8
    f64.sub
    global.get $~lib/util/math/log_tail
    f64.add
    f64.mul
    f64.add
    f64.add
    local.tee $0
    local.get $0
    f64.mul
    local.set $1
    local.get $18
    f64.load
    local.get $0
    f64.add
    local.get $1
    local.get $0
    f64.const 0.16666666666665886
    f64.mul
    f64.const 0.49999999999996786
    f64.add
    f64.mul
    f64.add
    local.get $1
    local.get $1
    f64.mul
    local.get $0
    f64.const 0.008333335853059549
    f64.mul
    f64.const 0.0416666808410674
    f64.add
    f64.mul
    f64.add
    local.set $0
    local.get $3
    i32.eqz
    if
     block $~lib/util/math/specialcase|inlined.0 (result f64)
      local.get $2
      i64.const 2147483648
      i64.and
      i64.eqz
      if
       local.get $5
       i64.const 4544132024016830464
       i64.sub
       f64.reinterpret_i64
       local.tee $1
       local.get $1
       local.get $0
       f64.mul
       f64.add
       f64.const 5486124068793688683255936e279
       f64.mul
       br $~lib/util/math/specialcase|inlined.0
      end
      local.get $5
      i64.const 4602678819172646912
      i64.add
      local.tee $2
      f64.reinterpret_i64
      local.tee $1
      local.get $0
      f64.mul
      local.set $0
      local.get $1
      local.get $0
      f64.add
      local.tee $7
      f64.abs
      f64.const 1
      f64.lt
      if (result f64)
       f64.const 1
       local.get $7
       f64.copysign
       local.tee $8
       local.get $7
       f64.add
       local.tee $9
       local.get $8
       local.get $9
       f64.sub
       local.get $7
       f64.add
       local.get $1
       local.get $7
       f64.sub
       local.get $0
       f64.add
       f64.add
       f64.add
       local.get $8
       f64.sub
       local.tee $0
       f64.const 0
       f64.eq
       if (result f64)
        local.get $2
        i64.const -9223372036854775808
        i64.and
        f64.reinterpret_i64
       else
        local.get $0
       end
      else
       local.get $7
      end
      f64.const 2.2250738585072014e-308
      f64.mul
     end
     br $~lib/util/math/exp_inline|inlined.0
    end
    local.get $5
    f64.reinterpret_i64
    local.tee $1
    local.get $1
    local.get $0
    f64.mul
    f64.add
   end
  end
 )
 (func $~lib/math/NativeMath.log (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  block $~lib/util/math/log_lut|inlined.0 (result f64)
   local.get $0
   i64.reinterpret_f64
   local.tee $1
   i64.const 4606619468846596096
   i64.sub
   i64.const 854320534781952
   i64.lt_u
   if
    local.get $0
    f64.const -1
    f64.add
    local.tee $0
    local.get $0
    f64.mul
    local.tee $4
    local.get $0
    f64.mul
    local.tee $5
    local.get $0
    f64.const -0.24999999999998432
    f64.mul
    f64.const 0.3333333333333352
    f64.add
    local.get $4
    f64.const 0.19999999999320328
    f64.mul
    f64.add
    local.get $5
    local.get $0
    f64.const 0.14285715076560868
    f64.mul
    f64.const -0.16666666669929706
    f64.add
    local.get $4
    f64.const -0.12499997863982555
    f64.mul
    f64.add
    local.get $5
    local.get $0
    f64.const -0.10000486757818193
    f64.mul
    f64.const 0.11110712032936046
    f64.add
    local.get $4
    f64.const 0.09181994006195467
    f64.mul
    f64.add
    local.get $5
    f64.const -0.08328363062289341
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.get $0
    local.get $0
    local.get $0
    local.get $0
    f64.const 134217728
    f64.mul
    local.tee $4
    f64.add
    local.get $4
    f64.sub
    local.tee $4
    local.get $4
    f64.mul
    f64.const -0.5
    f64.mul
    local.tee $5
    f64.add
    local.tee $6
    f64.sub
    local.get $5
    f64.add
    local.get $0
    local.get $4
    f64.sub
    f64.const -0.5
    f64.mul
    local.get $4
    local.get $0
    f64.add
    f64.mul
    f64.add
    f64.add
    local.get $6
    f64.add
    br $~lib/util/math/log_lut|inlined.0
   end
   local.get $1
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.tee $2
   i32.const 16
   i32.sub
   i32.const 32736
   i32.ge_u
   if
    f64.const -1
    local.get $0
    local.get $0
    f64.mul
    f64.div
    local.get $1
    i64.const 1
    i64.shl
    i64.eqz
    br_if $~lib/util/math/log_lut|inlined.0
    drop
    local.get $0
    local.get $1
    i64.const 9218868437227405312
    i64.eq
    br_if $~lib/util/math/log_lut|inlined.0
    drop
    i32.const 1
    local.get $2
    i32.const 32752
    i32.and
    i32.const 32752
    i32.eq
    local.get $2
    i32.const 32768
    i32.and
    select
    if
     local.get $0
     local.get $0
     f64.sub
     local.tee $0
     local.get $0
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $0
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    i64.const 234187180623265792
    i64.sub
    local.set $1
   end
   local.get $1
   i64.const 4604367669032910848
   i64.sub
   local.tee $3
   i64.const 45
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   i32.const 4
   i32.shl
   local.tee $2
   i32.const 25232
   i32.add
   local.set $7
   local.get $3
   i64.const 52
   i64.shr_s
   f64.convert_i64_s
   local.tee $0
   f64.const 0.6931471805598903
   f64.mul
   local.get $7
   f64.load offset=8
   f64.add
   local.tee $4
   local.get $1
   local.get $3
   i64.const -4503599627370496
   i64.and
   i64.sub
   f64.reinterpret_i64
   local.get $2
   i32.const 27280
   i32.add
   local.tee $2
   f64.load
   f64.sub
   local.get $2
   f64.load offset=8
   f64.sub
   local.get $7
   f64.load
   f64.mul
   local.tee $5
   f64.add
   local.set $6
   local.get $4
   local.get $6
   f64.sub
   local.get $5
   f64.add
   local.get $0
   f64.const 5.497923018708371e-14
   f64.mul
   f64.add
   local.get $5
   local.get $5
   f64.mul
   local.tee $0
   f64.const -0.5000000000000001
   f64.mul
   f64.add
   local.get $5
   local.get $0
   f64.mul
   local.get $5
   f64.const -0.2499999999622955
   f64.mul
   f64.const 0.33333333331825593
   f64.add
   local.get $0
   local.get $5
   f64.const -0.16667054827627667
   f64.mul
   f64.const 0.20000304511814496
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $6
   f64.add
  end
 )
 (func $~lib/math/NativeMath.log10 (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $2
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $1
  i32.const 31
  i32.shr_u
  local.tee $3
  local.get $1
  i32.const 1048576
  i32.lt_u
  i32.or
  if
   local.get $2
   i64.const 1
   i64.shl
   i64.eqz
   if
    f64.const -1
    local.get $0
    local.get $0
    f64.mul
    f64.div
    return
   end
   local.get $3
   if
    local.get $0
    local.get $0
    f64.sub
    f64.const 0
    f64.div
    return
   end
   i32.const -54
   local.set $4
   local.get $0
   f64.const 18014398509481984
   f64.mul
   i64.reinterpret_f64
   local.tee $2
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   local.set $1
  else
   local.get $1
   i32.const 2146435072
   i32.ge_u
   if
    local.get $0
    return
   else
    local.get $2
    i64.const 32
    i64.shl
    i64.eqz
    local.get $1
    i32.const 1072693248
    i32.eq
    i32.and
    if
     f64.const 0
     return
    end
   end
  end
  local.get $2
  i64.const 4294967295
  i64.and
  local.get $1
  i32.const 614242
  i32.add
  local.tee $1
  i32.const 1048575
  i32.and
  i32.const 1072079006
  i32.add
  i64.extend_i32_u
  i64.const 32
  i64.shl
  i64.or
  f64.reinterpret_i64
  f64.const -1
  f64.add
  local.tee $0
  f64.const 0.5
  f64.mul
  local.get $0
  f64.mul
  local.set $5
  local.get $0
  local.get $0
  f64.const 2
  f64.add
  f64.div
  local.tee $6
  local.get $6
  f64.mul
  local.tee $7
  local.get $7
  f64.mul
  local.set $8
  local.get $0
  local.get $0
  local.get $5
  f64.sub
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.tee $9
  f64.sub
  local.get $5
  f64.sub
  local.get $6
  local.get $5
  local.get $7
  local.get $8
  local.get $8
  local.get $8
  f64.const 0.14798198605116586
  f64.mul
  f64.const 0.1818357216161805
  f64.add
  f64.mul
  f64.const 0.2857142874366239
  f64.add
  f64.mul
  f64.const 0.6666666666666735
  f64.add
  f64.mul
  local.get $8
  local.get $8
  local.get $8
  f64.const 0.15313837699209373
  f64.mul
  f64.const 0.22222198432149784
  f64.add
  f64.mul
  f64.const 0.3999999999940942
  f64.add
  f64.mul
  f64.add
  f64.add
  f64.mul
  f64.add
  local.set $5
  local.get $4
  local.get $1
  i32.const 20
  i32.shr_u
  i32.const 1023
  i32.sub
  i32.add
  f64.convert_i32_s
  local.tee $6
  f64.const 0.30102999566361177
  f64.mul
  local.tee $7
  local.get $9
  f64.const 0.4342944818781689
  f64.mul
  local.tee $8
  f64.add
  local.set $0
  local.get $6
  f64.const 3.694239077158931e-13
  f64.mul
  local.get $5
  local.get $9
  f64.add
  f64.const 2.5082946711645275e-11
  f64.mul
  f64.add
  local.get $5
  f64.const 0.4342944818781689
  f64.mul
  f64.add
  local.get $7
  local.get $0
  f64.sub
  local.get $8
  f64.add
  f64.add
  local.get $0
  f64.add
 )
 (func $~lib/math/NativeMath.mod (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  local.get $1
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $0
   local.get $0
   f64.trunc
   f64.sub
   local.get $0
   f64.copysign
   return
  end
  local.get $1
  i64.reinterpret_f64
  local.tee $6
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $7
  local.get $6
  i64.const 1
  i64.shl
  local.tee $4
  i64.eqz
  local.get $0
  i64.reinterpret_f64
  local.tee $3
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.tee $8
  i64.const 2047
  i64.eq
  i32.or
  local.get $1
  local.get $1
  f64.ne
  i32.or
  if
   local.get $0
   local.get $1
   f64.mul
   local.tee $0
   local.get $0
   f64.div
   return
  end
  local.get $3
  i64.const 1
  i64.shl
  local.tee $2
  local.get $4
  i64.le_u
  if
   local.get $0
   local.get $2
   local.get $4
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $3
  i64.const 63
  i64.shr_u
  local.set $5
  local.get $8
  i64.eqz
  if (result i64)
   local.get $3
   i64.const 1
   local.get $8
   local.get $3
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.tee $8
   i64.sub
   i64.shl
  else
   local.get $3
   i64.const 4503599627370495
   i64.and
   i64.const 4503599627370496
   i64.or
  end
  local.set $2
  local.get $7
  i64.eqz
  if (result i64)
   local.get $6
   i64.const 1
   local.get $7
   local.get $6
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.tee $7
   i64.sub
   i64.shl
  else
   local.get $6
   i64.const 4503599627370495
   i64.and
   i64.const 4503599627370496
   i64.or
  end
  local.set $3
  loop $while-continue|0
   local.get $7
   local.get $8
   i64.lt_s
   if
    local.get $2
    local.get $3
    i64.ge_u
    if (result i64)
     local.get $2
     local.get $3
     i64.eq
     if
      local.get $0
      f64.const 0
      f64.mul
      return
     end
     local.get $2
     local.get $3
     i64.sub
    else
     local.get $2
    end
    i64.const 1
    i64.shl
    local.set $2
    local.get $8
    i64.const 1
    i64.sub
    local.set $8
    br $while-continue|0
   end
  end
  local.get $2
  local.get $3
  i64.ge_u
  if
   local.get $2
   local.get $3
   i64.eq
   if
    local.get $0
    f64.const 0
    f64.mul
    return
   end
   local.get $2
   local.get $3
   i64.sub
   local.set $2
  end
  local.get $8
  local.get $2
  i64.const 11
  i64.shl
  i64.clz
  local.tee $4
  i64.sub
  local.set $3
  local.get $2
  local.get $4
  i64.shl
  local.set $2
  local.get $3
  i64.const 0
  i64.gt_s
  if (result i64)
   local.get $2
   i64.const 4503599627370496
   i64.sub
   local.get $3
   i64.const 52
   i64.shl
   i64.or
  else
   local.get $2
   i64.const 1
   local.get $3
   i64.sub
   i64.shr_u
  end
  local.get $5
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
 )
 (func $~lib/number/U32#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/util/number/utoa32$164
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13840
    local.set $1
    br $__inlined_func$~lib/util/number/utoa32$164
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $0
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $0
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $0
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $0
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $0
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $2
   i32.const 1
   i32.shl
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   local.get $0
   local.get $2
   call $~lib/util/number/utoa32_dec_lut
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $1
 )
 (func $~lib/math/NativeMath.cos (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 31
  i32.shr_u
  local.set $6
  local.get $3
  i32.const 2147483647
  i32.and
  local.tee $3
  i32.const 1072243195
  i32.le_u
  if
   local.get $3
   i32.const 1044816030
   i32.lt_u
   if
    f64.const 1
    return
   end
   local.get $0
   local.get $0
   f64.mul
   local.tee $1
   local.get $1
   f64.mul
   local.set $2
   f64.const 1
   local.get $1
   f64.const 0.5
   f64.mul
   local.tee $7
   f64.sub
   local.tee $8
   f64.const 1
   local.get $8
   f64.sub
   local.get $7
   f64.sub
   local.get $1
   local.get $1
   local.get $1
   local.get $1
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $2
   local.get $2
   f64.mul
   local.get $1
   local.get $1
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $0
   f64.const 0
   f64.mul
   f64.sub
   f64.add
   f64.add
   return
  end
  local.get $3
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.1 (result i32)
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.tee $4
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $3
    local.get $6
    if (result f64)
     local.get $0
     f64.const 1.5707963267341256
     f64.add
     local.set $0
     i32.const -1
     local.set $3
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const 6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const 6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
     end
    else
     local.get $0
     f64.const -1.5707963267341256
     f64.add
     local.set $0
     local.get $4
     i32.const 1073291771
     i32.ne
     if (result f64)
      local.get $0
      local.get $0
      f64.const -6.077100506506192e-11
      f64.add
      local.tee $0
      f64.sub
      f64.const -6.077100506506192e-11
      f64.add
     else
      local.get $0
      f64.const -6.077100506303966e-11
      f64.add
      local.tee $1
      f64.const -2.0222662487959506e-21
      f64.add
      local.set $0
      local.get $1
      local.get $0
      f64.sub
      f64.const -2.0222662487959506e-21
      f64.add
     end
    end
    local.set $1
    local.get $0
    global.set $~lib/math/rempio2_y0
    local.get $1
    global.set $~lib/math/rempio2_y1
    local.get $3
    br $~lib/math/rempio2|inlined.1
   end
   local.get $4
   i32.const 1094263291
   i32.lt_u
   if
    local.get $4
    i32.const 20
    i32.shr_u
    local.tee $3
    local.get $0
    local.get $0
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.tee $7
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.tee $0
    local.get $7
    f64.const 6.077100506506192e-11
    f64.mul
    local.tee $2
    f64.sub
    local.tee $1
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    i32.const 16
    i32.gt_u
    if
     local.get $7
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $0
     local.get $0
     local.get $7
     f64.const 6.077100506303966e-11
     f64.mul
     local.tee $1
     f64.sub
     local.tee $0
     f64.sub
     local.get $1
     f64.sub
     f64.sub
     local.set $2
     local.get $3
     local.get $0
     local.get $2
     f64.sub
     local.tee $1
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     i32.const 49
     i32.gt_u
     if
      local.get $7
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $0
      local.get $0
      local.get $7
      f64.const 2.0222662487111665e-21
      f64.mul
      local.tee $1
      f64.sub
      local.tee $0
      f64.sub
      local.get $1
      f64.sub
      f64.sub
      local.set $2
      local.get $0
      local.get $2
      f64.sub
      local.set $1
     end
    end
    local.get $1
    global.set $~lib/math/rempio2_y0
    local.get $0
    local.get $1
    f64.sub
    local.get $2
    f64.sub
    global.set $~lib/math/rempio2_y1
    local.get $7
    i32.trunc_sat_f64_s
    br $~lib/math/rempio2|inlined.1
   end
   i32.const 0
   local.get $5
   call $~lib/math/pio2_large_quot
   local.tee $3
   i32.sub
   local.get $3
   local.get $6
   select
  end
  local.set $3
  global.get $~lib/math/rempio2_y0
  local.set $1
  global.get $~lib/math/rempio2_y1
  local.set $2
  local.get $3
  i32.const 1
  i32.and
  if (result f64)
   local.get $1
   local.get $1
   f64.mul
   local.tee $0
   local.get $1
   f64.mul
   local.set $7
   local.get $1
   local.get $0
   local.get $2
   f64.const 0.5
   f64.mul
   local.get $7
   local.get $0
   local.get $0
   f64.const 2.7557313707070068e-06
   f64.mul
   f64.const -1.984126982985795e-04
   f64.add
   f64.mul
   f64.const 0.00833333333332249
   f64.add
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   f64.mul
   local.get $0
   f64.const 1.58969099521155e-10
   f64.mul
   f64.const -2.5050760253406863e-08
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.sub
   f64.mul
   local.get $2
   f64.sub
   local.get $7
   f64.const -0.16666666666666632
   f64.mul
   f64.sub
   f64.sub
  else
   local.get $1
   local.get $1
   f64.mul
   local.tee $7
   local.get $7
   f64.mul
   local.set $8
   f64.const 1
   local.get $7
   f64.const 0.5
   f64.mul
   local.tee $0
   f64.sub
   local.tee $9
   f64.const 1
   local.get $9
   f64.sub
   local.get $0
   f64.sub
   local.get $7
   local.get $7
   local.get $7
   local.get $7
   f64.const 2.480158728947673e-05
   f64.mul
   f64.const -0.001388888888887411
   f64.add
   f64.mul
   f64.const 0.0416666666666666
   f64.add
   f64.mul
   local.get $8
   local.get $8
   f64.mul
   local.get $7
   local.get $7
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.const 2.087572321298175e-09
   f64.add
   f64.mul
   f64.const -2.7557314351390663e-07
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $1
   local.get $2
   f64.mul
   f64.sub
   f64.add
   f64.add
  end
  local.tee $0
  f64.neg
  local.get $0
  local.get $3
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  select
 )
 (func $~lib/math/NativeMath.exp (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i64)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  block $~lib/util/math/exp_lut|inlined.0 (result f64)
   local.get $0
   i64.reinterpret_f64
   local.tee $2
   i64.const 52
   i64.shr_u
   i32.wrap_i64
   i32.const 2047
   i32.and
   local.tee $1
   i32.const 969
   i32.sub
   local.tee $5
   i32.const 63
   i32.ge_u
   if
    f64.const 1
    local.get $5
    i32.const -2147483648
    i32.ge_u
    br_if $~lib/util/math/exp_lut|inlined.0
    drop
    local.get $1
    i32.const 1033
    i32.ge_u
    if
     f64.const 0
     local.get $2
     i64.const -4503599627370496
     i64.eq
     br_if $~lib/util/math/exp_lut|inlined.0
     drop
     local.get $0
     f64.const 1
     f64.add
     local.get $1
     i32.const 2047
     i32.ge_u
     br_if $~lib/util/math/exp_lut|inlined.0
     drop
     f64.const 0
     f64.const inf
     local.get $2
     i64.const 0
     i64.lt_s
     select
     br $~lib/util/math/exp_lut|inlined.0
    end
    i32.const 0
    local.set $1
   end
   local.get $0
   f64.const 184.6649652337873
   f64.mul
   f64.const 6755399441055744
   f64.add
   local.tee $3
   i64.reinterpret_f64
   local.tee $6
   i64.const 127
   i64.and
   i64.const 1
   i64.shl
   i32.wrap_i64
   i32.const 3
   i32.shl
   i32.const 23184
   i32.add
   local.tee $5
   i64.load offset=8
   local.get $6
   i64.const 45
   i64.shl
   i64.add
   local.set $2
   local.get $0
   local.get $3
   f64.const -6755399441055744
   f64.add
   local.tee $0
   f64.const -0.005415212348111709
   f64.mul
   f64.add
   local.get $0
   f64.const -1.2864023111638346e-14
   f64.mul
   f64.add
   local.tee $0
   local.get $0
   f64.mul
   local.set $3
   local.get $5
   f64.load
   local.get $0
   f64.add
   local.get $3
   local.get $0
   f64.const 0.16666666666665886
   f64.mul
   f64.const 0.49999999999996786
   f64.add
   f64.mul
   f64.add
   local.get $3
   local.get $3
   f64.mul
   local.get $0
   f64.const 0.008333335853059549
   f64.mul
   f64.const 0.0416666808410674
   f64.add
   f64.mul
   f64.add
   local.set $0
   local.get $1
   i32.eqz
   if
    block $~lib/util/math/specialcase|inlined.1 (result f64)
     local.get $6
     i64.const 2147483648
     i64.and
     i64.eqz
     if
      local.get $2
      i64.const 4544132024016830464
      i64.sub
      f64.reinterpret_i64
      local.tee $3
      local.get $3
      local.get $0
      f64.mul
      f64.add
      f64.const 5486124068793688683255936e279
      f64.mul
      br $~lib/util/math/specialcase|inlined.1
     end
     local.get $2
     i64.const 4602678819172646912
     i64.add
     local.tee $2
     f64.reinterpret_i64
     local.tee $3
     local.get $0
     f64.mul
     local.set $7
     local.get $3
     local.get $7
     f64.add
     local.tee $4
     f64.abs
     f64.const 1
     f64.lt
     if (result f64)
      f64.const 1
      local.get $4
      f64.copysign
      local.tee $8
      local.get $4
      f64.add
      local.tee $0
      local.get $8
      local.get $0
      f64.sub
      local.get $4
      f64.add
      local.get $3
      local.get $4
      f64.sub
      local.get $7
      f64.add
      f64.add
      f64.add
      local.get $8
      f64.sub
      local.tee $0
      f64.const 0
      f64.eq
      if (result f64)
       local.get $2
       i64.const -9223372036854775808
       i64.and
       f64.reinterpret_i64
      else
       local.get $0
      end
     else
      local.get $4
     end
     f64.const 2.2250738585072014e-308
     f64.mul
    end
    br $~lib/util/math/exp_lut|inlined.0
   end
   local.get $2
   f64.reinterpret_i64
   local.tee $3
   local.get $3
   local.get $0
   f64.mul
   f64.add
  end
 )
 (func $~lib/math/NativeMath.atan (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  local.get $0
  local.set $1
  local.get $0
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  i32.const 2147483647
  i32.and
  local.tee $2
  i32.const 1141899264
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.ne
   if
    local.get $0
    return
   end
   f64.const 1.5707963267948966
   local.get $1
   f64.copysign
   return
  end
  local.get $2
  i32.const 1071382528
  i32.lt_u
  if
   local.get $2
   i32.const 1044381696
   i32.lt_u
   if
    local.get $0
    return
   end
   i32.const -1
   local.set $3
  else
   local.get $0
   f64.abs
   local.set $0
   local.get $2
   i32.const 1072889856
   i32.lt_u
   if (result f64)
    local.get $2
    i32.const 1072037888
    i32.lt_u
    if (result f64)
     local.get $0
     local.get $0
     f64.add
     f64.const -1
     f64.add
     local.get $0
     f64.const 2
     f64.add
     f64.div
    else
     i32.const 1
     local.set $3
     local.get $0
     f64.const -1
     f64.add
     local.get $0
     f64.const 1
     f64.add
     f64.div
    end
   else
    local.get $2
    i32.const 1073971200
    i32.lt_u
    if (result f64)
     i32.const 2
     local.set $3
     local.get $0
     f64.const -1.5
     f64.add
     local.get $0
     f64.const 1.5
     f64.mul
     f64.const 1
     f64.add
     f64.div
    else
     i32.const 3
     local.set $3
     f64.const -1
     local.get $0
     f64.div
    end
   end
   local.set $0
  end
  local.get $0
  local.get $0
  f64.mul
  local.tee $5
  local.get $5
  f64.mul
  local.set $4
  local.get $0
  local.get $5
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  f64.const 0.016285820115365782
  f64.mul
  f64.const 0.049768779946159324
  f64.add
  f64.mul
  f64.const 0.06661073137387531
  f64.add
  f64.mul
  f64.const 0.09090887133436507
  f64.add
  f64.mul
  f64.const 0.14285714272503466
  f64.add
  f64.mul
  f64.const 0.3333333333333293
  f64.add
  f64.mul
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  local.get $4
  f64.const -0.036531572744216916
  f64.mul
  f64.const -0.058335701337905735
  f64.add
  f64.mul
  f64.const -0.0769187620504483
  f64.add
  f64.mul
  f64.const -0.11111110405462356
  f64.add
  f64.mul
  f64.const -0.19999999999876483
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $4
  local.get $3
  i32.const 0
  i32.lt_s
  if
   local.get $0
   local.get $4
   f64.sub
   return
  end
  block $break|0
   block $case4|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $3
        br_table $case0|0 $case1|0 $case2|0 $case3|0 $case4|0
       end
       f64.const 0.4636476090008061
       local.get $4
       f64.const -2.2698777452961687e-17
       f64.add
       local.get $0
       f64.sub
       f64.sub
       local.set $0
       br $break|0
      end
      f64.const 0.7853981633974483
      local.get $4
      f64.const -3.061616997868383e-17
      f64.add
      local.get $0
      f64.sub
      f64.sub
      local.set $0
      br $break|0
     end
     f64.const 0.982793723247329
     local.get $4
     f64.const -1.3903311031230998e-17
     f64.add
     local.get $0
     f64.sub
     f64.sub
     local.set $0
     br $break|0
    end
    f64.const 1.5707963267948966
    local.get $4
    f64.const -6.123233995736766e-17
    f64.add
    local.get $0
    f64.sub
    f64.sub
    local.set $0
    br $break|0
   end
   unreachable
  end
  local.get $0
  local.get $1
  f64.copysign
 )
 (func $~lib/math/NativeMath.atan2 (param $0 f64) (param $1 f64) (result f64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  local.get $0
  f64.ne
  local.get $1
  local.get $1
  f64.ne
  i32.or
  if
   local.get $1
   local.get $0
   f64.add
   return
  end
  local.get $0
  i64.reinterpret_f64
  local.tee $3
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $7
  local.get $1
  i64.reinterpret_f64
  local.tee $5
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $6
  local.get $5
  i32.wrap_i64
  local.tee $4
  local.get $6
  i32.const 1072693248
  i32.sub
  i32.or
  i32.eqz
  if
   local.get $0
   call $~lib/math/NativeMath.atan
   return
  end
  local.get $6
  i32.const 30
  i32.shr_u
  i32.const 2
  i32.and
  local.get $7
  i32.const 31
  i32.shr_u
  i32.or
  local.set $2
  local.get $7
  i32.const 2147483647
  i32.and
  local.tee $7
  local.get $3
  i32.wrap_i64
  i32.or
  i32.eqz
  if
   block $break|0
    block $case3|0
     block $case2|0
      block $case0|0
       local.get $2
       br_table $case0|0 $case0|0 $case2|0 $case3|0 $break|0
      end
      local.get $0
      return
     end
     f64.const 3.141592653589793
     return
    end
    f64.const -3.141592653589793
    return
   end
  end
  block $folding-inner0
   local.get $6
   i32.const 2147483647
   i32.and
   local.tee $6
   local.get $4
   i32.or
   i32.eqz
   br_if $folding-inner0
   local.get $6
   i32.const 2146435072
   i32.eq
   if
    local.get $7
    i32.const 2146435072
    i32.eq
    if (result f64)
     f64.const 2.356194490192345
     f64.const 0.7853981633974483
     local.get $2
     i32.const 2
     i32.and
     select
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i32.const 1
     i32.and
     select
    else
     f64.const 3.141592653589793
     f64.const 0
     local.get $2
     i32.const 2
     i32.and
     select
     local.tee $0
     f64.neg
     local.get $0
     local.get $2
     i32.const 1
     i32.and
     select
    end
    return
   end
   local.get $7
   i32.const 2146435072
   i32.eq
   local.get $6
   i32.const 67108864
   i32.add
   local.get $7
   i32.lt_u
   i32.or
   br_if $folding-inner0
   local.get $7
   i32.const 67108864
   i32.add
   local.get $6
   i32.lt_u
   i32.const 0
   local.get $2
   i32.const 2
   i32.and
   select
   if (result f64)
    f64.const 0
   else
    local.get $0
    local.get $1
    f64.div
    f64.abs
    call $~lib/math/NativeMath.atan
   end
   local.set $0
   block $break|1
    block $case3|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $2
        br_table $case0|1 $case1|1 $case2|1 $case3|1 $break|1
       end
       local.get $0
       return
      end
      local.get $0
      f64.neg
      return
     end
     f64.const 3.141592653589793
     local.get $0
     f64.const -1.2246467991473532e-16
     f64.add
     f64.sub
     return
    end
    local.get $0
    f64.const -1.2246467991473532e-16
    f64.add
    f64.const -3.141592653589793
    f64.add
    return
   end
   unreachable
  end
  f64.const -1.5707963267948966
  f64.const 1.5707963267948966
  local.get $2
  i32.const 1
  i32.and
  select
 )
 (func $assembly/utils/toFixed@varargs (param $0 f64) (param $1 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 2
   local.set $1
  end
  local.get $0
  local.get $1
  call $assembly/utils/toFixed
 )
 (func $assembly/entropy-viz/initializeEntropyViz
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  call $assembly/entropy-viz/EntropyFieldSampler#constructor
  global.set $assembly/entropy-viz/globalSampler
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 100
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/entropy-viz/EntropyFieldSampler#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/entropy-viz/globalTracker
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/validation/validateString (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 214
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 215
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 217
   i32.const 46416
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/validation/validateNumber (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 218
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 219
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   i32.const 2
   i32.const 221
   i32.const 46448
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/validation/validateObject (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 222
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 223
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-operations/addMod (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  local.get $0
  local.get $1
  i64.add
  local.tee $0
  local.get $2
  i64.sub
  local.get $0
  local.get $0
  local.get $2
  i64.ge_u
  select
 )
 (func $assembly/core/math-operations/mulMod (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i64)
  block $folding-inner0
   local.get $1
   i64.const 1048576
   i64.lt_u
   local.get $0
   i64.const 1048576
   i64.lt_u
   i32.and
   br_if $folding-inner0
   local.get $0
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   f64.convert_i32_u
   local.tee $5
   local.get $5
   f64.sub
   f64.const 0
   f64.ne
   if (result f64)
    f64.const 32
   else
    local.get $5
    i64.reinterpret_f64
    local.tee $6
    i64.const 52
    i64.shr_u
    i64.const 2047
    i64.and
    local.tee $7
    i64.const 1053
    i64.le_u
    if (result i32)
     local.get $5
     i32.trunc_sat_f64_s
    else
     local.get $7
     i64.const 1106
     i64.le_u
     if (result i32)
      i32.const 0
      local.get $6
      i64.const 4503599627370495
      i64.and
      i64.const 4503599627370496
      i64.or
      local.get $7
      i64.const 1043
      i64.sub
      i64.shl
      i64.const 32
      i64.shr_u
      i32.wrap_i64
      local.tee $4
      i32.sub
      local.get $4
      local.get $6
      i64.const 0
      i64.lt_s
      select
     else
      i32.const 0
     end
    end
    i32.clz
    f64.convert_i32_s
   end
   local.get $1
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   f64.convert_i32_u
   local.tee $5
   local.get $5
   f64.sub
   f64.const 0
   f64.ne
   if (result f64)
    f64.const 32
   else
    local.get $5
    i64.reinterpret_f64
    local.tee $6
    i64.const 52
    i64.shr_u
    i64.const 2047
    i64.and
    local.tee $7
    i64.const 1053
    i64.le_u
    if (result i32)
     local.get $5
     i32.trunc_sat_f64_s
    else
     local.get $7
     i64.const 1106
     i64.le_u
     if (result i32)
      i32.const 0
      local.get $6
      i64.const 4503599627370495
      i64.and
      i64.const 4503599627370496
      i64.or
      local.get $7
      i64.const 1043
      i64.sub
      i64.shl
      i64.const 32
      i64.shr_u
      i32.wrap_i64
      local.tee $4
      i32.sub
      local.get $4
      local.get $6
      i64.const 0
      i64.lt_s
      select
     else
      i32.const 0
     end
    end
    i32.clz
    f64.convert_i32_s
   end
   f64.add
   f64.const 32
   f64.ge
   br_if $folding-inner0
   local.get $0
   local.get $2
   i64.rem_u
   local.set $0
   local.get $1
   local.get $2
   i64.rem_u
   local.set $1
   loop $while-continue|0
    local.get $1
    i64.const 0
    i64.ne
    if
     local.get $1
     i64.const 1
     i64.and
     i32.wrap_i64
     if
      local.get $0
      local.get $3
      i64.add
      local.tee $3
      local.get $2
      i64.sub
      local.get $3
      local.get $2
      local.get $3
      i64.le_u
      select
      local.set $3
     end
     local.get $0
     local.get $0
     i64.add
     local.tee $0
     local.get $2
     i64.sub
     local.get $0
     local.get $0
     local.get $2
     i64.ge_u
     select
     local.set $0
     local.get $1
     i64.const 1
     i64.shr_u
     local.set $1
     br $while-continue|0
    end
   end
   local.get $3
   return
  end
  local.get $0
  local.get $1
  i64.mul
  local.get $2
  i64.rem_u
 )
 (func $assembly/core/math-operations/modExp (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i64)
  local.get $2
  i64.const 1
  i64.eq
  if
   i64.const 0
   return
  end
  i64.const 1
  local.set $3
  local.get $0
  local.get $2
  i64.rem_u
  local.set $0
  loop $while-continue|0
   local.get $1
   i64.const 0
   i64.ne
   if
    local.get $1
    i64.const 1
    i64.and
    i32.wrap_i64
    if
     local.get $3
     local.get $0
     local.get $2
     call $assembly/core/math-operations/mulMod
     local.set $3
    end
    local.get $1
    i64.const 1
    i64.shr_u
    local.set $1
    local.get $0
    local.get $0
    local.get $2
    call $assembly/core/math-operations/mulMod
    local.set $0
    br $while-continue|0
   end
  end
  local.get $3
 )
 (func $assembly/core/math-optimized/modExpOptimized (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  global.get $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
  i32.const 1
  i32.add
  global.set $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
  local.get $2
  i64.const 1
  i64.eq
  if
   i64.const 0
   return
  end
  local.get $1
  i64.eqz
  if
   i64.const 1
   return
  end
  local.get $1
  i64.const 1
  i64.eq
  if
   local.get $0
   local.get $2
   i64.rem_u
   return
  end
  local.get $1
  i64.const 16
  i64.lt_u
  if
   local.get $0
   local.get $1
   local.get $2
   call $assembly/core/math-operations/modExp
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/math-montgomery/modExpMontgomery
 )
 (func $assembly/core/math-optimized/modInverseOptimized (param $0 i64) (param $1 i64) (result i64)
  local.get $0
  local.get $1
  call $assembly/core/math-extended-gcd/modInverse
 )
 (func $~lib/number/U64#toString (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/util/number/utoa64$173
   local.get $0
   i64.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13840
    local.set $1
    br $__inlined_func$~lib/util/number/utoa64$173
   end
   local.get $0
   i64.const 4294967295
   i64.le_u
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.wrap_i64
    local.tee $3
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $3
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $3
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $3
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $3
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $3
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $3
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $3
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $2
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    local.get $1
    local.get $3
    local.get $2
    call $~lib/util/number/utoa32_dec_lut
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i64.const 1000000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 1000000000000
     i64.lt_u
     if (result i32)
      local.get $0
      i64.const 100000000000
      i64.ge_u
      i32.const 10
      i32.add
      local.get $0
      i64.const 10000000000
      i64.ge_u
      i32.add
     else
      local.get $0
      i64.const 100000000000000
      i64.ge_u
      i32.const 13
      i32.add
      local.get $0
      i64.const 10000000000000
      i64.ge_u
      i32.add
     end
    else
     local.get $0
     i64.const 100000000000000000
     i64.lt_u
     if (result i32)
      local.get $0
      i64.const 10000000000000000
      i64.ge_u
      i32.const 16
      i32.add
     else
      local.get $0
      i64.const -8446744073709551616
      i64.ge_u
      i32.const 18
      i32.add
      local.get $0
      i64.const 1000000000000000000
      i64.ge_u
      i32.add
     end
    end
    local.tee $2
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    local.get $1
    local.get $0
    local.get $2
    call $~lib/util/number/utoa64_dec_lut
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $1
 )
 (func $assembly/core/math-operations/lerp (param $0 f64) (param $1 f64) (param $2 f64) (result f64)
  local.get $0
  local.get $2
  local.get $1
  local.get $0
  f64.sub
  f64.mul
  f64.add
 )
 (func $assembly/core/math-operations/clamp (param $0 f64) (param $1 f64) (param $2 f64) (result f64)
  local.get $1
  local.get $0
  local.get $2
  f64.min
  f64.max
 )
 (func $assembly/core/math-operations/fastInvSqrt (param $0 f64) (result f64)
  local.get $0
  f64.const 0
  f64.le
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $0
  f64.sqrt
  f64.div
 )
 (func $assembly/core/math-operations/approxEqual@varargs (param $0 f64) (param $1 f64) (param $2 f64) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   f64.const 1e-10
   local.set $2
  end
  local.get $0
  local.get $1
  f64.sub
  f64.abs
  local.get $2
  f64.lt
 )
 (func $assembly/core/math-operations/safeDivide (param $0 f64) (param $1 f64) (result f64)
  f64.const 0
  local.get $0
  local.get $1
  f64.div
  local.get $1
  f64.const 0
  f64.eq
  select
 )
 (func $assembly/core/math-operations/gcd (param $0 i64) (param $1 i64) (result i64)
  loop $while-continue|0
   local.get $1
   i64.const 0
   i64.ne
   if
    local.get $0
    local.get $1
    local.tee $0
    i64.rem_u
    local.set $1
    br $while-continue|0
   end
  end
  local.get $0
 )
 (func $assembly/core/math-operations/lcm (param $0 i64) (param $1 i64) (result i64)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  local.set $2
  local.get $1
  local.set $3
  loop $while-continue|0
   local.get $3
   i64.const 0
   i64.ne
   if
    local.get $2
    local.get $3
    local.tee $2
    i64.rem_u
    local.set $3
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i64.mul
  local.get $2
  i64.div_u
 )
 (func $assembly/core/math-operations/isPerfectSquare (param $0 i64) (result i32)
  local.get $0
  local.get $0
  f64.convert_i64_u
  f64.sqrt
  i64.trunc_sat_f64_u
  local.tee $0
  local.get $0
  i64.mul
  i64.eq
 )
 (func $assembly/core/math-operations/isqrt (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  local.get $0
  i64.const 2
  i64.lt_u
  if
   local.get $0
   return
  end
  local.get $0
  local.tee $1
  i64.const 1
  i64.add
  i64.const 1
  i64.shr_u
  local.set $2
  loop $while-continue|0
   local.get $1
   local.get $2
   i64.gt_u
   if
    local.get $0
    local.get $2
    local.tee $1
    i64.div_u
    local.get $1
    i64.add
    i64.const 1
    i64.shr_u
    local.set $2
    br $while-continue|0
   end
  end
  local.get $1
 )
 (func $assembly/core/math-primes/generatePrimeOptimized (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  i64.const 1
  local.get $0
  i32.const 1
  i32.sub
  i64.extend_i32_s
  i64.shl
  local.set $2
  i64.const 1
  local.get $1
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.set $3
  loop $do-loop|0
   local.get $2
   call $~lib/math/NativeMath.random
   local.get $3
   local.get $2
   i64.sub
   f64.convert_i64_u
   f64.mul
   i64.trunc_sat_f64_u
   i64.add
   i64.const 1
   i64.or
   local.tee $4
   call $assembly/core/math-primes/isPrimeOptimized
   i32.eqz
   br_if $do-loop|0
  end
  local.get $4
 )
 (func $assembly/core/math-primes/isGaussianPrime (param $0 f64) (param $1 f64) (result i32)
  (local $2 i64)
  local.get $1
  f64.abs
  local.set $1
  local.get $0
  f64.abs
  local.tee $0
  f64.const 0
  f64.eq
  if
   local.get $1
   i64.trunc_sat_f64_u
   local.tee $2
   i64.const 3
   i64.and
   i64.const 3
   i64.eq
   i32.const 0
   local.get $2
   call $assembly/core/math-primes/isPrimeOptimized
   select
   return
  end
  local.get $1
  f64.const 0
  f64.eq
  if
   local.get $0
   i64.trunc_sat_f64_u
   local.tee $2
   i64.const 3
   i64.and
   i64.const 3
   i64.eq
   i32.const 0
   local.get $2
   call $assembly/core/math-primes/isPrimeOptimized
   select
   return
  end
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  i64.trunc_sat_f64_u
  call $assembly/core/math-primes/isPrimeOptimized
 )
 (func $assembly/core/math-primes/nextPrime (param $0 i64) (result i64)
  local.get $0
  i64.const 2
  i64.lt_u
  if
   i64.const 2
   return
  end
  local.get $0
  i64.const 1
  i64.add
  local.tee $0
  i64.const 1
  i64.and
  i64.eqz
  if
   local.get $0
   i64.const 1
   i64.add
   local.set $0
  end
  loop $while-continue|0
   local.get $0
   call $assembly/core/math-primes/isPrimeOptimized
   i32.eqz
   if
    local.get $0
    i64.const 2
    i64.add
    local.set $0
    br $while-continue|0
   end
  end
  local.get $0
 )
 (func $assembly/core/math-primes/previousPrime (param $0 i64) (result i64)
  local.get $0
  i64.const 2
  i64.le_u
  if
   i64.const 0
   return
  end
  local.get $0
  i64.const 3
  i64.eq
  if
   i64.const 2
   return
  end
  local.get $0
  i64.const 1
  i64.sub
  local.tee $0
  i64.const 1
  i64.and
  i64.eqz
  if
   local.get $0
   i64.const 1
   i64.sub
   local.set $0
  end
  loop $while-continue|0
   local.get $0
   i64.const 2
   i64.gt_u
   if (result i32)
    local.get $0
    call $assembly/core/math-primes/isPrimeOptimized
   else
    i32.const 1
   end
   i32.eqz
   if
    local.get $0
    i64.const 2
    i64.sub
    local.set $0
    br $while-continue|0
   end
  end
  local.get $0
 )
 (func $assembly/quantum/prime-operators/rotationOperator (param $0 i32) (param $1 i32) (result f64)
  local.get $1
  i32.const 1
  i32.le_u
  if
   f64.const 0
   return
  end
  local.get $0
  f64.convert_i32_u
  call $~lib/math/NativeMath.log
  local.get $1
  f64.convert_i32_u
  call $~lib/math/NativeMath.log
  f64.div
  f64.const 6.283185307179586
  f64.mul
 )
 (func $assembly/quaternion-exports/createQuaternion (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/quaternion/Quaternion#constructor
 )
 (func $assembly/quaternion-exports/isSplitPrime (param $0 i32) (result i32)
  local.get $0
  i32.const 12
  i32.rem_u
  i32.const 1
  i32.eq
 )
 (func $assembly/quaternion-exports/createQuaternionFromPrime (param $0 i32) (result i32)
  local.get $0
  call $assembly/quaternion/SplitPrimeFactorizer.createQuaternion
 )
 (func $assembly/quaternion-exports/createQuaternionicResonanceField (result i32)
  call $assembly/quaternion/QuaternionicResonanceField#constructor
 )
 (func $assembly/quaternion-exports/createTwistDynamics (result i32)
  call $assembly/quaternion/TwistDynamics#constructor
 )
 (func $assembly/quaternion-exports/createQuaternionicProjector@varargs (param $0 f64) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   f64.const 0.01
   local.set $0
  end
  local.get $0
  call $assembly/quaternion/QuaternionicProjector#constructor
 )
 (func $assembly/quaternion-exports/createQuaternionPool@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 1000
   local.set $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 248
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 213
  i32.const 54192
  call $~lib/rt/__newArray
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion-exports/createQuaternionicSynchronizer (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 211
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.1
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quantum-exports/createHolographicEncoding (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 249
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quantum-exports/createEntropyEvolution (param $0 f64) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 250
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/complex-exports/createComplex (param $0 f64) (param $1 f64) (result i32)
  local.get $0
  local.get $1
  call $assembly/types/Complex#constructor
 )
 (func $assembly/complex-exports/complexFromPolar (param $0 f64) (param $1 f64) (result i32)
  local.get $0
  local.get $1
  call $~lib/math/NativeMath.cos
  f64.mul
  local.get $0
  local.get $1
  call $~lib/math/NativeMath.sin
  f64.mul
  call $assembly/types/Complex#constructor
 )
 (func $assembly/prime-state-exports/createPrimeState (result i32)
  call $assembly/quantum/prime-state/PrimeState#constructor
 )
 (func $assembly/pnp-exports/createTransformer (param $0 i32) (result i32)
  local.get $0
  call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#constructor
 )
 (func $assembly/runtime-exports/createIdentityProcessor (result i32)
  call $assembly/runtime/processor/IdentityResoLangProcessor#constructor
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 54416
    i32.const 3040
    i32.const 338
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $3
   local.get $1
   i32.store offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 54480
   i32.const 3040
   i32.const 352
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $~lib/rt/__visit_globals
  (local $0 i32)
  i32.const 3168
  call $~lib/rt/itcms/__visit
  i32.const 3376
  call $~lib/rt/itcms/__visit
  i32.const 46576
  call $~lib/rt/itcms/__visit
  i32.const 16736
  call $~lib/rt/itcms/__visit
  i32.const 41472
  call $~lib/rt/itcms/__visit
  i32.const 2976
  call $~lib/rt/itcms/__visit
  i32.const 54416
  call $~lib/rt/itcms/__visit
  i32.const 54480
  call $~lib/rt/itcms/__visit
  i32.const 14272
  call $~lib/rt/itcms/__visit
  i32.const 15328
  call $~lib/rt/itcms/__visit
  global.get $assembly/resolang/currentNode
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/entropy-viz/globalSampler
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/entropy-viz/globalTracker
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 1536
  call $~lib/rt/itcms/__visit
  global.get $assembly/core/validation/ValidationMetadata.metadata
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/resolang-processor/globalResoLangProcessor
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 1120
  call $~lib/rt/itcms/__visit
  i32.const 1456
  call $~lib/rt/itcms/__visit
  i32.const 1584
  call $~lib/rt/itcms/__visit
  i32.const 1648
  call $~lib/rt/itcms/__visit
  i32.const 1728
  call $~lib/rt/itcms/__visit
  i32.const 1776
  call $~lib/rt/itcms/__visit
  i32.const 1840
  call $~lib/rt/itcms/__visit
  i32.const 1952
  call $~lib/rt/itcms/__visit
  i32.const 2032
  call $~lib/rt/itcms/__visit
  i32.const 2176
  call $~lib/rt/itcms/__visit
  i32.const 2256
  call $~lib/rt/itcms/__visit
  i32.const 2368
  call $~lib/rt/itcms/__visit
  i32.const 2480
  call $~lib/rt/itcms/__visit
  i32.const 2592
  call $~lib/rt/itcms/__visit
  i32.const 2688
  call $~lib/rt/itcms/__visit
  i32.const 2768
  call $~lib/rt/itcms/__visit
  i32.const 2832
  call $~lib/rt/itcms/__visit
  i32.const 2912
  call $~lib/rt/itcms/__visit
  i32.const 4192
  call $~lib/rt/itcms/__visit
  global.get $assembly/core/math-cache/primeCache
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 4768
  call $~lib/rt/itcms/__visit
  i32.const 4944
  call $~lib/rt/itcms/__visit
  global.get $assembly/core/math-performance/globalMathProfiler
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/math-performance/globalMathMemoryTracker
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 5328
  call $~lib/rt/itcms/__visit
  i32.const 5392
  call $~lib/rt/itcms/__visit
  i32.const 5456
  call $~lib/rt/itcms/__visit
  i32.const 5520
  call $~lib/rt/itcms/__visit
  i32.const 5568
  call $~lib/rt/itcms/__visit
  i32.const 5632
  call $~lib/rt/itcms/__visit
  i32.const 5680
  call $~lib/rt/itcms/__visit
  i32.const 5728
  call $~lib/rt/itcms/__visit
  i32.const 5776
  call $~lib/rt/itcms/__visit
  i32.const 5840
  call $~lib/rt/itcms/__visit
  i32.const 5904
  call $~lib/rt/itcms/__visit
  i32.const 5968
  call $~lib/rt/itcms/__visit
  i32.const 6048
  call $~lib/rt/itcms/__visit
  i32.const 6096
  call $~lib/rt/itcms/__visit
  i32.const 6144
  call $~lib/rt/itcms/__visit
  i32.const 6192
  call $~lib/rt/itcms/__visit
  i32.const 6256
  call $~lib/rt/itcms/__visit
  i32.const 6304
  call $~lib/rt/itcms/__visit
  i32.const 6368
  call $~lib/rt/itcms/__visit
  i32.const 6432
  call $~lib/rt/itcms/__visit
  i32.const 6496
  call $~lib/rt/itcms/__visit
  i32.const 6544
  call $~lib/rt/itcms/__visit
  i32.const 6592
  call $~lib/rt/itcms/__visit
  i32.const 6640
  call $~lib/rt/itcms/__visit
  i32.const 6688
  call $~lib/rt/itcms/__visit
  i32.const 6736
  call $~lib/rt/itcms/__visit
  i32.const 6784
  call $~lib/rt/itcms/__visit
  i32.const 6848
  call $~lib/rt/itcms/__visit
  i32.const 6912
  call $~lib/rt/itcms/__visit
  i32.const 6976
  call $~lib/rt/itcms/__visit
  i32.const 7024
  call $~lib/rt/itcms/__visit
  i32.const 7072
  call $~lib/rt/itcms/__visit
  i32.const 7120
  call $~lib/rt/itcms/__visit
  i32.const 7184
  call $~lib/rt/itcms/__visit
  i32.const 7232
  call $~lib/rt/itcms/__visit
  i32.const 7296
  call $~lib/rt/itcms/__visit
  i32.const 7376
  call $~lib/rt/itcms/__visit
  i32.const 7440
  call $~lib/rt/itcms/__visit
  i32.const 7520
  call $~lib/rt/itcms/__visit
  i32.const 7584
  call $~lib/rt/itcms/__visit
  i32.const 7648
  call $~lib/rt/itcms/__visit
  i32.const 7728
  call $~lib/rt/itcms/__visit
  i32.const 7792
  call $~lib/rt/itcms/__visit
  i32.const 7856
  call $~lib/rt/itcms/__visit
  i32.const 7920
  call $~lib/rt/itcms/__visit
  i32.const 8000
  call $~lib/rt/itcms/__visit
  i32.const 8080
  call $~lib/rt/itcms/__visit
  i32.const 8160
  call $~lib/rt/itcms/__visit
  i32.const 8240
  call $~lib/rt/itcms/__visit
  i32.const 8304
  call $~lib/rt/itcms/__visit
  i32.const 8368
  call $~lib/rt/itcms/__visit
  i32.const 8432
  call $~lib/rt/itcms/__visit
  i32.const 8496
  call $~lib/rt/itcms/__visit
  i32.const 8560
  call $~lib/rt/itcms/__visit
  i32.const 8624
  call $~lib/rt/itcms/__visit
  i32.const 8672
  call $~lib/rt/itcms/__visit
  i32.const 8736
  call $~lib/rt/itcms/__visit
  i32.const 8800
  call $~lib/rt/itcms/__visit
  i32.const 8864
  call $~lib/rt/itcms/__visit
  i32.const 8912
  call $~lib/rt/itcms/__visit
  i32.const 8976
  call $~lib/rt/itcms/__visit
  i32.const 9040
  call $~lib/rt/itcms/__visit
  i32.const 9104
  call $~lib/rt/itcms/__visit
  i32.const 9168
  call $~lib/rt/itcms/__visit
  i32.const 9216
  call $~lib/rt/itcms/__visit
  i32.const 9280
  call $~lib/rt/itcms/__visit
  i32.const 9344
  call $~lib/rt/itcms/__visit
  i32.const 9408
  call $~lib/rt/itcms/__visit
  i32.const 9472
  call $~lib/rt/itcms/__visit
  i32.const 9536
  call $~lib/rt/itcms/__visit
  i32.const 9568
  call $~lib/rt/itcms/__visit
  i32.const 9600
  call $~lib/rt/itcms/__visit
  i32.const 9648
  call $~lib/rt/itcms/__visit
  i32.const 9696
  call $~lib/rt/itcms/__visit
  i32.const 9744
  call $~lib/rt/itcms/__visit
  i32.const 9792
  call $~lib/rt/itcms/__visit
  i32.const 9840
  call $~lib/rt/itcms/__visit
  i32.const 9888
  call $~lib/rt/itcms/__visit
  i32.const 9936
  call $~lib/rt/itcms/__visit
  i32.const 9984
  call $~lib/rt/itcms/__visit
  i32.const 10032
  call $~lib/rt/itcms/__visit
  i32.const 10080
  call $~lib/rt/itcms/__visit
  i32.const 10128
  call $~lib/rt/itcms/__visit
  i32.const 9696
  call $~lib/rt/itcms/__visit
  i32.const 10176
  call $~lib/rt/itcms/__visit
  i32.const 10240
  call $~lib/rt/itcms/__visit
  i32.const 10288
  call $~lib/rt/itcms/__visit
  i32.const 10336
  call $~lib/rt/itcms/__visit
  global.get $assembly/identity/kyc-provider/KYCProviderRegistry.providers
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 10384
  call $~lib/rt/itcms/__visit
  global.get $assembly/identity/prime-mapping/PrimeGenerator.primeCache
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/prime-mapping/globalPrimeMapper
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/ownership-transfer/globalTransferManager
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/audit-trail/globalAuditTrail
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/identity-recovery/globalRecoveryManager
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 10672
  call $~lib/rt/itcms/__visit
  i32.const 11200
  call $~lib/rt/itcms/__visit
  global.get $assembly/identity/permission-inheritance/globalPermissionInheritance
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/identity/authentication/globalAuthManager
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/instructionHandlers
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/processor/globalResoLangProcessor
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/object-pool/MathObjectPools.extendedGCDPool
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/object-pool/MathObjectPools.complexPool
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/object-pool/MathObjectPools.u64ArrayPool
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/object-pool/MathObjectPools.i32ArrayPool
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/core/object-pool/MathObjectPools.bigIntPool
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 5280
  call $~lib/rt/itcms/__visit
  global.get $assembly/runtime/instructions/advanced/holographic/HoloStore
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloFragment
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatSend
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/resonance/Resonance
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/advanced/resonance/Factorize
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/coherence/coherence
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/coherenceall/coherenceall
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/threshold/threshold
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/coherence/waitcoh/waitcoh
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/break/breakInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/call/call
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/continue/continueInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/else/elseInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endif/endif
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endloop/endloop
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/endwhile/endwhile
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/goto/gotoInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/if/ifInstruction
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/flow/ifcoh/ifcoh
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/setphase/setphase
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/advphase/advphase
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/decohere/decohere
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/phase/entangle/entangle
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/collapse/collapse
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/measure/measure
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/observe/observe
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/quantum/reconstruct/reconstruct
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/entropy/entropy
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/evolve/evolve
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/factorize/factorize
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/resonance/resonance/resonance
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/add/add
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/load/load
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/mix/mix
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/symbolic/scale/scale
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/halt/halt
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/output/output
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/random/random
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/runtime/instructions/system/tick/tick
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/resolang/EntangledNode~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $"~lib/map/Map<~lib/string/String,f64>~visit" (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.tee $2
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=16
  i32.const 24
  i32.mul
  i32.add
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $1
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     i32.load
     call $~lib/rt/itcms/__visit
    end
    local.get $1
    i32.const 24
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,i32>~visit" (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.tee $2
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $1
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     i32.load
     call $~lib/rt/itcms/__visit
    end
    local.get $1
    i32.const 12
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/identity/kyc-provider/BaseKYCProvider~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/identity/prime-mapping/IdentityPrimeMapping~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>~visit" (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.tee $2
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.gt_u
   if
    local.get $1
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $1
     i32.load offset=4
     call $~lib/rt/itcms/__visit
    end
    local.get $1
    i32.const 12
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  call $~lib/rt/itcms/__visit
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/identity/domain/Domain~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=20
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=24
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=48
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $assembly/identity/domain-object/DomainObject~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $1
  if
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=40
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner28
   block $folding-inner27
    block $folding-inner26
     block $folding-inner25
      block $folding-inner24
       block $folding-inner23
        block $folding-inner22
         block $folding-inner21
          block $folding-inner20
           block $folding-inner19
            block $folding-inner17
             block $folding-inner16
              block $folding-inner15
               block $folding-inner14
                block $folding-inner13
                 block $folding-inner12
                  block $folding-inner10
                   block $folding-inner9
                    block $folding-inner8
                     block $folding-inner7
                      block $folding-inner6
                       block $folding-inner5
                        block $folding-inner4
                         block $folding-inner3
                          block $folding-inner2
                           block $folding-inner1
                            block $folding-inner0
                             block $invalid
                              block $assembly/quantum/entropy-evolution/EntropyEvolution
                               block $assembly/types/Complex
                                block $assembly/prn-node/PrimeResonanceIdentity
                                 block $assembly/identity/domain-object/NonFungibleObject
                                  block $assembly/identity/domain-object/ObjectProperties
                                   block $assembly/identity/types/ObjectCreationParams
                                    block $assembly/identity/interfaces/IObjectProperties
                                     block $assembly/identity/interfaces/IDomainObject
                                      block $assembly/identity/domain-object/DomainObject
                                       block $assembly/identity/domain-object/FungibleObject
                                        block $assembly/identity/interfaces/IDomain
                                         block $assembly/identity/domain/Domain
                                          block $assembly/identity/domain/RootDomain
                                           block $assembly/identity/types/IdentityCreationParams
                                            block $assembly/identity/identity/Identity
                                             block $assembly/core/math-extended-gcd/ExtendedGCDResult
                                              block $assembly/core/math-montgomery/MontgomeryContext
                                               block $assembly/quaternion-entanglement/EntangledQuaternionPair
                                                block $assembly/quaternion/QuaternionicProjector
                                                 block $assembly/quaternion/TwistDynamics
                                                  block $"~lib/map/Map<u32,assembly/quaternion/Quaternion>"
                                                   block $assembly/quaternion/Quaternion
                                                    block $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics
                                                     block $assembly/examples/test-comprehensive-benchmark-suite/TestResult
                                                      block $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics
                                                       block $assembly/examples/universal-symbolic-transformer/UniversalCollapseDynamics
                                                        block $assembly/examples/polynomial-convergence-validator/PrecisionTimer
                                                         block $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState
                                                          block $assembly/examples/polynomial-convergence-validator/ConvergenceAnalysis
                                                           block $assembly/examples/polynomial-convergence-validator/BenchmarkResult
                                                            block $~lib/staticarray/StaticArray<~lib/string/String>
                                                             block $assembly/runtime/instructions/system/tick/TickInstruction
                                                              block $assembly/runtime/instructions/system/random/RandomInstruction
                                                               block $assembly/runtime/instructions/system/output/OutputInstruction
                                                                block $assembly/runtime/instructions/system/halt/HaltInstruction
                                                                 block $assembly/runtime/instructions/symbolic/scale/ScaleInstruction
                                                                  block $assembly/runtime/instructions/symbolic/mix/MixInstruction
                                                                   block $assembly/runtime/instructions/symbolic/load/LoadInstruction
                                                                    block $assembly/runtime/instructions/symbolic/add/AddInstruction
                                                                     block $assembly/runtime/instructions/resonance/resonance/ResonanceInstruction
                                                                      block $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction
                                                                       block $assembly/runtime/instructions/resonance/evolve/EvolveInstruction
                                                                        block $assembly/runtime/instructions/resonance/entropy/EntropyInstruction
                                                                         block $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction
                                                                          block $assembly/runtime/instructions/quantum/observe/ObserveInstruction
                                                                           block $assembly/runtime/instructions/quantum/measure/MeasureInstruction
                                                                            block $assembly/runtime/instructions/quantum/collapse/CollapseInstruction
                                                                             block $assembly/runtime/instructions/phase/entangle/EntangleInstruction
                                                                              block $assembly/runtime/instructions/phase/decohere/DecohereInstruction
                                                                               block $assembly/runtime/instructions/phase/advphase/AdvphaseInstruction
                                                                                block $assembly/runtime/instructions/phase/setphase/SetphaseInstruction
                                                                                 block $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction
                                                                                  block $assembly/runtime/instructions/flow/if/IfInstruction
                                                                                   block $assembly/runtime/instructions/flow/goto/GotoInstruction
                                                                                    block $assembly/runtime/instructions/flow/endwhile/EndwhileInstruction
                                                                                     block $assembly/runtime/instructions/flow/endloop/EndloopInstruction
                                                                                      block $assembly/runtime/instructions/flow/endif/EndifInstruction
                                                                                       block $assembly/runtime/instructions/flow/else/ElseInstruction
                                                                                        block $assembly/runtime/instructions/flow/continue/ContinueInstruction
                                                                                         block $assembly/runtime/instructions/flow/call/CallInstruction
                                                                                          block $assembly/runtime/instructions/flow/break/BreakInstruction
                                                                                           block $assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction
                                                                                            block $assembly/runtime/instructions/coherence/threshold/ThresholdInstruction
                                                                                             block $assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction
                                                                                              block $assembly/runtime/instructions/coherence/coherence/CoherenceInstruction
                                                                                               block $assembly/runtime/instructions/advanced/resonance/FactorizeInstruction
                                                                                                block $assembly/runtime/instructions/advanced/resonance/ResonanceInstruction
                                                                                                 block $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction
                                                                                                  block $assembly/runtime/instructions/advanced/quaternionic/QuatReceiveInstruction
                                                                                                   block $assembly/runtime/instructions/advanced/quaternionic/QuatSendInstruction
                                                                                                    block $assembly/runtime/instructions/advanced/quaternionic/QuatCreateInstruction
                                                                                                     block $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction
                                                                                                      block $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAllInstruction
                                                                                                       block $assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction
                                                                                                        block $assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction
                                                                                                         block $assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction
                                                                                                          block $assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction
                                                                                                           block $assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction
                                                                                                            block $assembly/runtime/instructions/types/IInstructionHandler
                                                                                                             block $assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction
                                                                                                              block $assembly/identity/authentication/AuthSession
                                                                                                               block $assembly/identity/permission-inheritance/InheritanceRule
                                                                                                                block $assembly/identity/interfaces/IRole
                                                                                                                 block $assembly/identity/interfaces/IPermission
                                                                                                                  block $assembly/identity/permissions/Permission
                                                                                                                   block $assembly/identity/permission-inheritance/DomainPermissionContext
                                                                                                                    block $assembly/identity/permission-inheritance/PermissionInheritanceManager
                                                                                                                     block $assembly/identity/interfaces/IIdentity
                                                                                                                      block $"~lib/map/Map<~lib/string/String,i64>"
                                                                                                                       block $assembly/identity/identity-recovery/RecoveryRequest
                                                                                                                        block $assembly/prn-node/NetworkNode
                                                                                                                         block $~lib/staticarray/StaticArray<f64>
                                                                                                                          block $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>"
                                                                                                                           block $assembly/identity/permissions/PermissionEvaluator
                                                                                                                            block $"~lib/map/Map<~lib/string/String,bool>"
                                                                                                                             block $assembly/identity/ownership-transfer/TransferRequest
                                                                                                                              block $assembly/identity/ownership-transfer/OwnershipTransferManager
                                                                                                                               block $assembly/identity/prime-mapping/IdentityPrimeMapping
                                                                                                                                block $assembly/identity/prime-mapping/IdentityPrimeMapper
                                                                                                                                 block $assembly/identity/kyc-provider/ManualKYCProvider
                                                                                                                                  block $~lib/set/Set<~lib/string/String>
                                                                                                                                   block $assembly/identity/interfaces/KYCVerificationResult
                                                                                                                                    block $assembly/identity/interfaces/IKYCProvider
                                                                                                                                     block $assembly/identity/audit-trail/AuditEntry
                                                                                                                                      block $assembly/core/interfaces/BaseSerializable
                                                                                                                                       block $assembly/identity/audit-trail/AuditTrailManager
                                                                                                                                        block $"~lib/map/Map<~lib/string/String,i32>"
                                                                                                                                         block $assembly/core/math-performance/SimpleTimer
                                                                                                                                          block $assembly/core/object-pool/PoolableComplex
                                                                                                                                           block $assembly/core/object-pool/Poolable
                                                                                                                                            block $assembly/core/object-pool/PoolableExtendedGCDResult
                                                                                                                                             block $assembly/core/error-handling/ErrorDetails
                                                                                                                                              block $assembly/core/error-handling/RecoveryStrategy
                                                                                                                                               block $assembly/core/error-handling/ErrorHandler
                                                                                                                                                block $assembly/core/errors/PRNError
                                                                                                                                                 block $"~lib/map/Map<~lib/string/String,f64>"
                                                                                                                                                  block $assembly/entropy-viz/EntropyFieldData
                                                                                                                                                   block $~lib/staticarray/StaticArray<u32>
                                                                                                                                                    block $assembly/core/interfaces/Serializable
                                                                                                                                                     block $~lib/string/String
                                                                                                                                                      block $~lib/arraybuffer/ArrayBuffer
                                                                                                                                                       block $~lib/object/Object
                                                                                                                                                        local.get $0
                                                                                                                                                        i32.const 8
                                                                                                                                                        i32.sub
                                                                                                                                                        i32.load
                                                                                                                                                        br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner0 $folding-inner1 $assembly/core/interfaces/Serializable $~lib/staticarray/StaticArray<u32> $folding-inner2 $folding-inner0 $assembly/entropy-viz/EntropyFieldData $"~lib/map/Map<~lib/string/String,f64>" $folding-inner3 $folding-inner4 $folding-inner5 $folding-inner2 $assembly/core/errors/PRNError $folding-inner1 $folding-inner6 $folding-inner5 $folding-inner1 $assembly/core/error-handling/ErrorHandler $folding-inner5 $assembly/core/error-handling/RecoveryStrategy $folding-inner5 $assembly/core/error-handling/ErrorDetails $folding-inner5 $folding-inner0 $folding-inner6 $folding-inner6 $folding-inner8 $folding-inner3 $folding-inner2 $folding-inner2 $assembly/core/object-pool/PoolableExtendedGCDResult $assembly/core/object-pool/Poolable $folding-inner8 $folding-inner5 $assembly/core/object-pool/PoolableComplex $folding-inner8 $folding-inner5 $folding-inner0 $folding-inner8 $folding-inner5 $folding-inner0 $folding-inner8 $folding-inner5 $folding-inner0 $folding-inner8 $folding-inner5 $folding-inner9 $folding-inner9 $folding-inner9 $folding-inner9 $folding-inner9 $folding-inner8 $assembly/core/math-performance/SimpleTimer $folding-inner6 $"~lib/map/Map<~lib/string/String,i32>" $folding-inner8 $assembly/identity/audit-trail/AuditTrailManager $assembly/core/interfaces/BaseSerializable $assembly/identity/audit-trail/AuditEntry $folding-inner5 $folding-inner5 $assembly/identity/interfaces/IKYCProvider $folding-inner6 $folding-inner13 $folding-inner13 $assembly/identity/interfaces/KYCVerificationResult $folding-inner6 $~lib/set/Set<~lib/string/String> $assembly/identity/kyc-provider/ManualKYCProvider $folding-inner3 $assembly/identity/prime-mapping/IdentityPrimeMapper $assembly/identity/prime-mapping/IdentityPrimeMapping $folding-inner6 $assembly/identity/ownership-transfer/OwnershipTransferManager $assembly/identity/ownership-transfer/TransferRequest $"~lib/map/Map<~lib/string/String,bool>" $folding-inner6 $assembly/identity/permissions/PermissionEvaluator $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>" $folding-inner9 $folding-inner14 $folding-inner0 $folding-inner8 $~lib/staticarray/StaticArray<f64> $folding-inner6 $folding-inner0 $folding-inner23 $folding-inner8 $folding-inner5 $assembly/prn-node/NetworkNode $folding-inner15 $folding-inner8 $folding-inner5 $folding-inner6 $assembly/identity/identity-recovery/RecoveryRequest $"~lib/map/Map<~lib/string/String,i64>" $folding-inner6 $assembly/identity/interfaces/IIdentity $folding-inner6 $assembly/identity/permission-inheritance/PermissionInheritanceManager $assembly/identity/permission-inheritance/DomainPermissionContext $assembly/identity/permissions/Permission $assembly/identity/interfaces/IPermission $folding-inner6 $folding-inner13 $assembly/identity/interfaces/IRole $folding-inner5 $folding-inner6 $assembly/identity/permission-inheritance/InheritanceRule $folding-inner5 $folding-inner6 $folding-inner6 $folding-inner8 $folding-inner8 $folding-inner4 $folding-inner6 $assembly/identity/authentication/AuthSession $folding-inner6 $assembly/runtime/instructions/advanced/holographic/HoloStoreInstruction $assembly/runtime/instructions/types/IInstructionHandler $assembly/runtime/instructions/advanced/holographic/HoloRetrieveInstruction $assembly/runtime/instructions/advanced/holographic/HoloFragmentInstruction $assembly/runtime/instructions/advanced/holographic/HoloReconstructInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisCreateInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisTransformInstruction $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAllInstruction $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherenceInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatCreateInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatSendInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatReceiveInstruction $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLockInstruction $assembly/runtime/instructions/advanced/resonance/ResonanceInstruction $assembly/runtime/instructions/advanced/resonance/FactorizeInstruction $assembly/runtime/instructions/coherence/coherence/CoherenceInstruction $assembly/runtime/instructions/coherence/coherenceall/CoherenceallInstruction $assembly/runtime/instructions/coherence/threshold/ThresholdInstruction $assembly/runtime/instructions/coherence/waitcoh/WaitcohInstruction $assembly/runtime/instructions/flow/break/BreakInstruction $assembly/runtime/instructions/flow/call/CallInstruction $assembly/runtime/instructions/flow/continue/ContinueInstruction $assembly/runtime/instructions/flow/else/ElseInstruction $assembly/runtime/instructions/flow/endif/EndifInstruction $assembly/runtime/instructions/flow/endloop/EndloopInstruction $assembly/runtime/instructions/flow/endwhile/EndwhileInstruction $assembly/runtime/instructions/flow/goto/GotoInstruction $assembly/runtime/instructions/flow/if/IfInstruction $assembly/runtime/instructions/flow/ifcoh/IfcohInstruction $assembly/runtime/instructions/phase/setphase/SetphaseInstruction $assembly/runtime/instructions/phase/advphase/AdvphaseInstruction $assembly/runtime/instructions/phase/decohere/DecohereInstruction $assembly/runtime/instructions/phase/entangle/EntangleInstruction $assembly/runtime/instructions/quantum/collapse/CollapseInstruction $assembly/runtime/instructions/quantum/measure/MeasureInstruction $assembly/runtime/instructions/quantum/observe/ObserveInstruction $assembly/runtime/instructions/quantum/reconstruct/ReconstructInstruction $assembly/runtime/instructions/resonance/entropy/EntropyInstruction $assembly/runtime/instructions/resonance/evolve/EvolveInstruction $assembly/runtime/instructions/resonance/factorize/FactorizeInstruction $assembly/runtime/instructions/resonance/resonance/ResonanceInstruction $assembly/runtime/instructions/symbolic/add/AddInstruction $assembly/runtime/instructions/symbolic/load/LoadInstruction $assembly/runtime/instructions/symbolic/mix/MixInstruction $assembly/runtime/instructions/symbolic/scale/ScaleInstruction $assembly/runtime/instructions/system/halt/HaltInstruction $assembly/runtime/instructions/system/output/OutputInstruction $assembly/runtime/instructions/system/random/RandomInstruction $assembly/runtime/instructions/system/tick/TickInstruction $folding-inner6 $folding-inner14 $folding-inner0 $folding-inner0 $folding-inner23 $folding-inner8 $~lib/staticarray/StaticArray<~lib/string/String> $folding-inner8 $assembly/examples/polynomial-convergence-validator/BenchmarkResult $folding-inner5 $assembly/examples/polynomial-convergence-validator/ConvergenceAnalysis $folding-inner5 $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState $folding-inner1 $folding-inner5 $folding-inner5 $assembly/examples/polynomial-convergence-validator/PrecisionTimer $folding-inner1 $folding-inner0 $folding-inner5 $assembly/examples/universal-symbolic-transformer/UniversalCollapseDynamics $folding-inner8 $folding-inner10 $folding-inner5 $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics $folding-inner5 $folding-inner0 $assembly/examples/test-comprehensive-benchmark-suite/TestResult $folding-inner5 $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics $folding-inner5 $folding-inner9 $folding-inner4 $folding-inner24 $folding-inner14 $assembly/quaternion/Quaternion $folding-inner8 $"~lib/map/Map<u32,assembly/quaternion/Quaternion>" $folding-inner0 $assembly/quaternion/TwistDynamics $assembly/quaternion/QuaternionicProjector $folding-inner8 $assembly/quaternion-entanglement/EntangledQuaternionPair $folding-inner5 $folding-inner8 $folding-inner8 $folding-inner0 $folding-inner5 $folding-inner8 $folding-inner8 $folding-inner0 $folding-inner5 $folding-inner0 $folding-inner6 $assembly/core/math-montgomery/MontgomeryContext $assembly/core/math-extended-gcd/ExtendedGCDResult $folding-inner2 $assembly/identity/identity/Identity $assembly/identity/types/IdentityCreationParams $assembly/identity/domain/RootDomain $assembly/identity/domain/Domain $assembly/identity/interfaces/IDomain $folding-inner6 $folding-inner15 $assembly/identity/domain-object/FungibleObject $assembly/identity/domain-object/DomainObject $assembly/identity/interfaces/IDomainObject $assembly/identity/interfaces/IObjectProperties $assembly/identity/types/ObjectCreationParams $assembly/identity/domain-object/ObjectProperties $assembly/identity/domain-object/NonFungibleObject $folding-inner5 $folding-inner15 $assembly/prn-node/PrimeResonanceIdentity $folding-inner5 $folding-inner1 $assembly/types/Complex $folding-inner5 $folding-inner0 $folding-inner0 $assembly/quantum/entropy-evolution/EntropyEvolution $folding-inner3 $folding-inner15 $invalid
                                                                                                                                                       end
                                                                                                                                                       return
                                                                                                                                                      end
                                                                                                                                                      return
                                                                                                                                                     end
                                                                                                                                                     return
                                                                                                                                                    end
                                                                                                                                                    return
                                                                                                                                                   end
                                                                                                                                                   return
                                                                                                                                                  end
                                                                                                                                                  local.get $0
                                                                                                                                                  i32.load offset=8
                                                                                                                                                  local.tee $1
                                                                                                                                                  if
                                                                                                                                                   local.get $1
                                                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                                                  end
                                                                                                                                                  local.get $0
                                                                                                                                                  i32.load offset=12
                                                                                                                                                  local.tee $1
                                                                                                                                                  if
                                                                                                                                                   local.get $1
                                                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                                                  end
                                                                                                                                                  local.get $0
                                                                                                                                                  i32.load offset=16
                                                                                                                                                  local.tee $1
                                                                                                                                                  if
                                                                                                                                                   local.get $1
                                                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                                                  end
                                                                                                                                                  local.get $0
                                                                                                                                                  i32.load offset=20
                                                                                                                                                  local.tee $1
                                                                                                                                                  if
                                                                                                                                                   local.get $1
                                                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                                                  end
                                                                                                                                                  br $folding-inner19
                                                                                                                                                 end
                                                                                                                                                 local.get $0
                                                                                                                                                 call $"~lib/map/Map<~lib/string/String,f64>~visit"
                                                                                                                                                 return
                                                                                                                                                end
                                                                                                                                                local.get $0
                                                                                                                                                call $assembly/resolang/EntangledNode~visit
                                                                                                                                                br $folding-inner19
                                                                                                                                               end
                                                                                                                                               return
                                                                                                                                              end
                                                                                                                                              return
                                                                                                                                             end
                                                                                                                                             local.get $0
                                                                                                                                             i32.load
                                                                                                                                             local.tee $1
                                                                                                                                             if
                                                                                                                                              local.get $1
                                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                                             end
                                                                                                                                             local.get $0
                                                                                                                                             i32.load offset=4
                                                                                                                                             local.tee $1
                                                                                                                                             if
                                                                                                                                              local.get $1
                                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                                             end
                                                                                                                                             br $folding-inner7
                                                                                                                                            end
                                                                                                                                            return
                                                                                                                                           end
                                                                                                                                           return
                                                                                                                                          end
                                                                                                                                          return
                                                                                                                                         end
                                                                                                                                         return
                                                                                                                                        end
                                                                                                                                        local.get $0
                                                                                                                                        call $"~lib/map/Map<~lib/string/String,i32>~visit"
                                                                                                                                        return
                                                                                                                                       end
                                                                                                                                       local.get $0
                                                                                                                                       i32.load
                                                                                                                                       local.tee $1
                                                                                                                                       if
                                                                                                                                        local.get $1
                                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                                       end
                                                                                                                                       br $folding-inner27
                                                                                                                                      end
                                                                                                                                      return
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=24
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=28
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=32
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=36
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=40
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     local.get $0
                                                                                                                                     i32.load offset=44
                                                                                                                                     local.tee $1
                                                                                                                                     if
                                                                                                                                      local.get $1
                                                                                                                                      call $~lib/rt/itcms/__visit
                                                                                                                                     end
                                                                                                                                     br $folding-inner12
                                                                                                                                    end
                                                                                                                                    return
                                                                                                                                   end
                                                                                                                                   return
                                                                                                                                  end
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  i32.const 4
                                                                                                                                  i32.sub
                                                                                                                                  global.set $~lib/memory/__stack_pointer
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  i32.const 55544
                                                                                                                                  i32.lt_s
                                                                                                                                  br_if $folding-inner21
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  i32.const 0
                                                                                                                                  i32.store
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  local.get $0
                                                                                                                                  i32.store
                                                                                                                                  local.get $0
                                                                                                                                  i32.load
                                                                                                                                  call $~lib/rt/itcms/__visit
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  local.get $0
                                                                                                                                  i32.store
                                                                                                                                  local.get $0
                                                                                                                                  i32.load offset=8
                                                                                                                                  local.tee $2
                                                                                                                                  local.set $1
                                                                                                                                  global.get $~lib/memory/__stack_pointer
                                                                                                                                  local.get $0
                                                                                                                                  i32.store
                                                                                                                                  local.get $1
                                                                                                                                  local.get $0
                                                                                                                                  i32.load offset=16
                                                                                                                                  i32.const 3
                                                                                                                                  i32.shl
                                                                                                                                  i32.add
                                                                                                                                  local.set $0
                                                                                                                                  loop $while-continue|0
                                                                                                                                   local.get $0
                                                                                                                                   local.get $1
                                                                                                                                   i32.gt_u
                                                                                                                                   if
                                                                                                                                    local.get $1
                                                                                                                                    i32.load offset=4
                                                                                                                                    i32.const 1
                                                                                                                                    i32.and
                                                                                                                                    i32.eqz
                                                                                                                                    if
                                                                                                                                     local.get $1
                                                                                                                                     i32.load
                                                                                                                                     call $~lib/rt/itcms/__visit
                                                                                                                                    end
                                                                                                                                    local.get $1
                                                                                                                                    i32.const 8
                                                                                                                                    i32.add
                                                                                                                                    local.set $1
                                                                                                                                    br $while-continue|0
                                                                                                                                   end
                                                                                                                                  end
                                                                                                                                  br $folding-inner22
                                                                                                                                 end
                                                                                                                                 local.get $0
                                                                                                                                 call $assembly/identity/kyc-provider/BaseKYCProvider~visit
                                                                                                                                 br $folding-inner20
                                                                                                                                end
                                                                                                                                local.get $0
                                                                                                                                call $assembly/resolang/EntangledNode~visit
                                                                                                                                return
                                                                                                                               end
                                                                                                                               local.get $0
                                                                                                                               call $assembly/identity/prime-mapping/IdentityPrimeMapping~visit
                                                                                                                               return
                                                                                                                              end
                                                                                                                              local.get $0
                                                                                                                              i32.load
                                                                                                                              local.tee $1
                                                                                                                              if
                                                                                                                               local.get $1
                                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                                              end
                                                                                                                              br $folding-inner10
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=8
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=12
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=16
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=20
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=56
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=60
                                                                                                                             local.tee $1
                                                                                                                             if
                                                                                                                              local.get $1
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             local.get $0
                                                                                                                             i32.load offset=64
                                                                                                                             local.tee $0
                                                                                                                             if
                                                                                                                              local.get $0
                                                                                                                              call $~lib/rt/itcms/__visit
                                                                                                                             end
                                                                                                                             return
                                                                                                                            end
                                                                                                                            local.get $0
                                                                                                                            call $"~lib/map/Map<~lib/string/String,i32>~visit"
                                                                                                                            return
                                                                                                                           end
                                                                                                                           return
                                                                                                                          end
                                                                                                                          local.get $0
                                                                                                                          call $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>~visit"
                                                                                                                          return
                                                                                                                         end
                                                                                                                         return
                                                                                                                        end
                                                                                                                        return
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       i32.load
                                                                                                                       local.tee $1
                                                                                                                       if
                                                                                                                        local.get $1
                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       i32.load offset=4
                                                                                                                       local.tee $1
                                                                                                                       if
                                                                                                                        local.get $1
                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       i32.load offset=8
                                                                                                                       local.tee $1
                                                                                                                       if
                                                                                                                        local.get $1
                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       i32.load offset=12
                                                                                                                       local.tee $1
                                                                                                                       if
                                                                                                                        local.get $1
                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                       end
                                                                                                                       local.get $0
                                                                                                                       i32.load offset=36
                                                                                                                       local.tee $0
                                                                                                                       if
                                                                                                                        local.get $0
                                                                                                                        call $~lib/rt/itcms/__visit
                                                                                                                       end
                                                                                                                       return
                                                                                                                      end
                                                                                                                      local.get $0
                                                                                                                      call $"~lib/map/Map<~lib/string/String,f64>~visit"
                                                                                                                      return
                                                                                                                     end
                                                                                                                     return
                                                                                                                    end
                                                                                                                    local.get $0
                                                                                                                    call $assembly/resolang/EntangledNode~visit
                                                                                                                    return
                                                                                                                   end
                                                                                                                   local.get $0
                                                                                                                   i32.load
                                                                                                                   local.tee $1
                                                                                                                   if
                                                                                                                    local.get $1
                                                                                                                    call $~lib/rt/itcms/__visit
                                                                                                                   end
                                                                                                                   local.get $0
                                                                                                                   i32.load offset=4
                                                                                                                   local.tee $1
                                                                                                                   if
                                                                                                                    local.get $1
                                                                                                                    call $~lib/rt/itcms/__visit
                                                                                                                   end
                                                                                                                   local.get $0
                                                                                                                   i32.load offset=8
                                                                                                                   local.tee $1
                                                                                                                   if
                                                                                                                    local.get $1
                                                                                                                    call $~lib/rt/itcms/__visit
                                                                                                                   end
                                                                                                                   br $folding-inner16
                                                                                                                  end
                                                                                                                  local.get $0
                                                                                                                  i32.load
                                                                                                                  local.tee $1
                                                                                                                  if
                                                                                                                   local.get $1
                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                  end
                                                                                                                  local.get $0
                                                                                                                  i32.load offset=4
                                                                                                                  local.tee $1
                                                                                                                  if
                                                                                                                   local.get $1
                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                  end
                                                                                                                  local.get $0
                                                                                                                  i32.load offset=8
                                                                                                                  local.tee $1
                                                                                                                  if
                                                                                                                   local.get $1
                                                                                                                   call $~lib/rt/itcms/__visit
                                                                                                                  end
                                                                                                                  br $folding-inner7
                                                                                                                 end
                                                                                                                 return
                                                                                                                end
                                                                                                                return
                                                                                                               end
                                                                                                               local.get $0
                                                                                                               i32.load
                                                                                                               local.tee $1
                                                                                                               if
                                                                                                                local.get $1
                                                                                                                call $~lib/rt/itcms/__visit
                                                                                                               end
                                                                                                               local.get $0
                                                                                                               i32.load offset=4
                                                                                                               local.tee $1
                                                                                                               if
                                                                                                                local.get $1
                                                                                                                call $~lib/rt/itcms/__visit
                                                                                                               end
                                                                                                               br $folding-inner16
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              i32.load
                                                                                                              local.tee $1
                                                                                                              if
                                                                                                               local.get $1
                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              i32.load offset=4
                                                                                                              local.tee $1
                                                                                                              if
                                                                                                               local.get $1
                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              i32.load offset=40
                                                                                                              local.tee $1
                                                                                                              if
                                                                                                               local.get $1
                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              i32.load offset=44
                                                                                                              local.tee $1
                                                                                                              if
                                                                                                               local.get $1
                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                              end
                                                                                                              local.get $0
                                                                                                              i32.load offset=48
                                                                                                              local.tee $0
                                                                                                              if
                                                                                                               local.get $0
                                                                                                               call $~lib/rt/itcms/__visit
                                                                                                              end
                                                                                                              return
                                                                                                             end
                                                                                                             return
                                                                                                            end
                                                                                                            return
                                                                                                           end
                                                                                                           return
                                                                                                          end
                                                                                                          return
                                                                                                         end
                                                                                                         return
                                                                                                        end
                                                                                                        return
                                                                                                       end
                                                                                                       return
                                                                                                      end
                                                                                                      return
                                                                                                     end
                                                                                                     return
                                                                                                    end
                                                                                                    return
                                                                                                   end
                                                                                                   return
                                                                                                  end
                                                                                                  return
                                                                                                 end
                                                                                                 return
                                                                                                end
                                                                                                return
                                                                                               end
                                                                                               return
                                                                                              end
                                                                                              return
                                                                                             end
                                                                                             return
                                                                                            end
                                                                                            return
                                                                                           end
                                                                                           return
                                                                                          end
                                                                                          return
                                                                                         end
                                                                                         return
                                                                                        end
                                                                                        return
                                                                                       end
                                                                                       return
                                                                                      end
                                                                                      return
                                                                                     end
                                                                                     return
                                                                                    end
                                                                                    return
                                                                                   end
                                                                                   return
                                                                                  end
                                                                                  return
                                                                                 end
                                                                                 return
                                                                                end
                                                                                return
                                                                               end
                                                                               return
                                                                              end
                                                                              return
                                                                             end
                                                                             return
                                                                            end
                                                                            return
                                                                           end
                                                                           return
                                                                          end
                                                                          return
                                                                         end
                                                                         return
                                                                        end
                                                                        return
                                                                       end
                                                                       return
                                                                      end
                                                                      return
                                                                     end
                                                                     return
                                                                    end
                                                                    return
                                                                   end
                                                                   return
                                                                  end
                                                                  return
                                                                 end
                                                                 return
                                                                end
                                                                return
                                                               end
                                                               return
                                                              end
                                                              return
                                                             end
                                                             return
                                                            end
                                                            local.get $0
                                                            local.get $0
                                                            i32.const 20
                                                            i32.sub
                                                            i32.load offset=16
                                                            i32.add
                                                            local.set $1
                                                            loop $while-continue|01
                                                             local.get $0
                                                             local.get $1
                                                             i32.lt_u
                                                             if
                                                              local.get $0
                                                              i32.load
                                                              local.tee $2
                                                              if
                                                               local.get $2
                                                               call $~lib/rt/itcms/__visit
                                                              end
                                                              local.get $0
                                                              i32.const 4
                                                              i32.add
                                                              local.set $0
                                                              br $while-continue|01
                                                             end
                                                            end
                                                            return
                                                           end
                                                           return
                                                          end
                                                          return
                                                         end
                                                         local.get $0
                                                         i32.load offset=4
                                                         local.tee $1
                                                         if
                                                          local.get $1
                                                          call $~lib/rt/itcms/__visit
                                                         end
                                                         br $folding-inner17
                                                        end
                                                        return
                                                       end
                                                       return
                                                      end
                                                      local.get $0
                                                      call $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics~visit
                                                      return
                                                     end
                                                     local.get $0
                                                     call $assembly/identity/prime-mapping/IdentityPrimeMapping~visit
                                                     return
                                                    end
                                                    local.get $0
                                                    call $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics~visit
                                                    return
                                                   end
                                                   return
                                                  end
                                                  local.get $0
                                                  call $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>~visit"
                                                  return
                                                 end
                                                 return
                                                end
                                                return
                                               end
                                               local.get $0
                                               i32.load
                                               local.tee $1
                                               if
                                                local.get $1
                                                call $~lib/rt/itcms/__visit
                                               end
                                               local.get $0
                                               i32.load offset=4
                                               local.tee $1
                                               if
                                                local.get $1
                                                call $~lib/rt/itcms/__visit
                                               end
                                               br $folding-inner28
                                              end
                                              return
                                             end
                                             return
                                            end
                                            local.get $0
                                            i32.load
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=12
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=36
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=40
                                            local.tee $1
                                            if
                                             local.get $1
                                             call $~lib/rt/itcms/__visit
                                            end
                                            local.get $0
                                            i32.load offset=44
                                            local.tee $0
                                            if
                                             local.get $0
                                             call $~lib/rt/itcms/__visit
                                            end
                                            return
                                           end
                                           local.get $0
                                           i32.load
                                           local.tee $1
                                           if
                                            local.get $1
                                            call $~lib/rt/itcms/__visit
                                           end
                                           br $folding-inner17
                                          end
                                          local.get $0
                                          call $assembly/identity/domain/Domain~visit
                                          return
                                         end
                                         local.get $0
                                         call $assembly/identity/domain/Domain~visit
                                         return
                                        end
                                        return
                                       end
                                       local.get $0
                                       call $assembly/identity/domain-object/DomainObject~visit
                                       local.get $0
                                       i32.load offset=60
                                       local.tee $0
                                       if
                                        local.get $0
                                        call $~lib/rt/itcms/__visit
                                       end
                                       return
                                      end
                                      local.get $0
                                      call $assembly/identity/domain-object/DomainObject~visit
                                      return
                                     end
                                     return
                                    end
                                    return
                                   end
                                   local.get $0
                                   i32.load
                                   local.tee $1
                                   if
                                    local.get $1
                                    call $~lib/rt/itcms/__visit
                                   end
                                   local.get $0
                                   i32.load offset=4
                                   local.tee $1
                                   if
                                    local.get $1
                                    call $~lib/rt/itcms/__visit
                                   end
                                   local.get $0
                                   i32.load offset=8
                                   local.tee $1
                                   if
                                    local.get $1
                                    call $~lib/rt/itcms/__visit
                                   end
                                   br $folding-inner28
                                  end
                                  return
                                 end
                                 local.get $0
                                 call $assembly/identity/domain-object/DomainObject~visit
                                 br $folding-inner12
                                end
                                return
                               end
                               return
                              end
                              return
                             end
                             unreachable
                            end
                            local.get $0
                            i32.load
                            local.tee $0
                            if
                             local.get $0
                             call $~lib/rt/itcms/__visit
                            end
                            return
                           end
                           local.get $0
                           call $assembly/resolang/EntangledNode~visit
                           return
                          end
                          global.get $~lib/memory/__stack_pointer
                          i32.const 4
                          i32.sub
                          global.set $~lib/memory/__stack_pointer
                          global.get $~lib/memory/__stack_pointer
                          i32.const 55544
                          i32.lt_s
                          br_if $folding-inner21
                          global.get $~lib/memory/__stack_pointer
                          i32.const 0
                          i32.store
                          br $folding-inner25
                         end
                         global.get $~lib/memory/__stack_pointer
                         i32.const 4
                         i32.sub
                         global.set $~lib/memory/__stack_pointer
                         global.get $~lib/memory/__stack_pointer
                         i32.const 55544
                         i32.lt_s
                         br_if $folding-inner21
                         global.get $~lib/memory/__stack_pointer
                         i32.const 0
                         i32.store
                         global.get $~lib/memory/__stack_pointer
                         local.get $0
                         i32.store
                         local.get $0
                         i32.load
                         call $~lib/rt/itcms/__visit
                         global.get $~lib/memory/__stack_pointer
                         local.get $0
                         i32.store
                         local.get $0
                         i32.load offset=8
                         call $~lib/rt/itcms/__visit
                         br $folding-inner26
                        end
                        local.get $0
                        i32.load
                        local.tee $1
                        if
                         local.get $1
                         call $~lib/rt/itcms/__visit
                        end
                        br $folding-inner23
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 4
                       i32.sub
                       global.set $~lib/memory/__stack_pointer
                       global.get $~lib/memory/__stack_pointer
                       i32.const 55544
                       i32.lt_s
                       br_if $folding-inner21
                       global.get $~lib/memory/__stack_pointer
                       i32.const 0
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.store
                       local.get $0
                       i32.load offset=4
                       local.set $1
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.store
                       local.get $1
                       local.get $0
                       i32.load offset=12
                       i32.const 2
                       i32.shl
                       i32.add
                       local.set $3
                       loop $while-continue|00
                        local.get $1
                        local.get $3
                        i32.lt_u
                        if
                         local.get $1
                         i32.load
                         local.tee $2
                         if
                          local.get $2
                          call $~lib/rt/itcms/__visit
                         end
                         local.get $1
                         i32.const 4
                         i32.add
                         local.set $1
                         br $while-continue|00
                        end
                       end
                       br $folding-inner25
                      end
                      global.get $~lib/memory/__stack_pointer
                      i32.const 4
                      i32.sub
                      global.set $~lib/memory/__stack_pointer
                      global.get $~lib/memory/__stack_pointer
                      i32.const 55544
                      i32.lt_s
                      br_if $folding-inner21
                      global.get $~lib/memory/__stack_pointer
                      i32.const 0
                      i32.store
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store
                      local.get $0
                      i32.load
                      call $~lib/rt/itcms/__visit
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store
                      local.get $0
                      i32.load offset=8
                      local.tee $2
                      local.set $1
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.store
                      local.get $1
                      local.get $0
                      i32.load offset=16
                      i32.const 12
                      i32.mul
                      i32.add
                      local.set $0
                      loop $while-continue|02
                       local.get $0
                       local.get $1
                       i32.gt_u
                       if
                        local.get $1
                        i32.load offset=8
                        i32.const 1
                        i32.and
                        i32.eqz
                        if
                         local.get $1
                         i32.load
                         call $~lib/rt/itcms/__visit
                         local.get $1
                         i32.load offset=4
                         call $~lib/rt/itcms/__visit
                        end
                        local.get $1
                        i32.const 12
                        i32.add
                        local.set $1
                        br $while-continue|02
                       end
                      end
                      br $folding-inner22
                     end
                     local.get $0
                     i32.load offset=24
                     local.tee $1
                     if
                      local.get $1
                      call $~lib/rt/itcms/__visit
                     end
                     local.get $0
                     i32.load offset=28
                     local.tee $1
                     if
                      local.get $1
                      call $~lib/rt/itcms/__visit
                     end
                     local.get $0
                     i32.load offset=32
                     local.tee $0
                     if
                      local.get $0
                      call $~lib/rt/itcms/__visit
                     end
                     return
                    end
                    local.get $0
                    i32.load
                    local.tee $1
                    if
                     local.get $1
                     call $~lib/rt/itcms/__visit
                    end
                    br $folding-inner24
                   end
                   global.get $~lib/memory/__stack_pointer
                   i32.const 4
                   i32.sub
                   global.set $~lib/memory/__stack_pointer
                   global.get $~lib/memory/__stack_pointer
                   i32.const 55544
                   i32.lt_s
                   br_if $folding-inner21
                   global.get $~lib/memory/__stack_pointer
                   i32.const 0
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store
                   local.get $0
                   i32.load offset=4
                   call $~lib/rt/itcms/__visit
                   br $folding-inner26
                  end
                  local.get $0
                  i32.load offset=4
                  local.tee $1
                  if
                   local.get $1
                   call $~lib/rt/itcms/__visit
                  end
                  local.get $0
                  i32.load offset=8
                  local.tee $1
                  if
                   local.get $1
                   call $~lib/rt/itcms/__visit
                  end
                  br $folding-inner27
                 end
                 local.get $0
                 i32.load offset=48
                 local.tee $1
                 if
                  local.get $1
                  call $~lib/rt/itcms/__visit
                 end
                 local.get $0
                 i32.load offset=52
                 local.tee $1
                 if
                  local.get $1
                  call $~lib/rt/itcms/__visit
                 end
                 local.get $0
                 i32.load offset=56
                 local.tee $0
                 if
                  local.get $0
                  call $~lib/rt/itcms/__visit
                 end
                 return
                end
                local.get $0
                call $assembly/identity/kyc-provider/BaseKYCProvider~visit
                return
               end
               local.get $0
               i32.load
               local.tee $1
               if
                local.get $1
                call $~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=4
               local.tee $1
               if
                local.get $1
                call $~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=8
               local.tee $1
               if
                local.get $1
                call $~lib/rt/itcms/__visit
               end
               local.get $0
               i32.load offset=12
               local.tee $1
               if
                local.get $1
                call $~lib/rt/itcms/__visit
               end
               br $folding-inner28
              end
              local.get $0
              i32.load
              local.tee $1
              if
               local.get $1
               call $~lib/rt/itcms/__visit
              end
              local.get $0
              i32.load offset=4
              local.tee $1
              if
               local.get $1
               call $~lib/rt/itcms/__visit
              end
              local.get $0
              i32.load offset=8
              local.tee $1
              if
               local.get $1
               call $~lib/rt/itcms/__visit
              end
              br $folding-inner27
             end
             local.get $0
             i32.load offset=12
             local.tee $1
             if
              local.get $1
              call $~lib/rt/itcms/__visit
             end
             local.get $0
             i32.load offset=16
             local.tee $1
             if
              local.get $1
              call $~lib/rt/itcms/__visit
             end
             br $folding-inner20
            end
            local.get $0
            i32.load offset=8
            local.tee $1
            if
             local.get $1
             call $~lib/rt/itcms/__visit
            end
            local.get $0
            i32.load offset=12
            local.tee $1
            if
             local.get $1
             call $~lib/rt/itcms/__visit
            end
            br $folding-inner28
           end
           local.get $0
           i32.load offset=24
           local.tee $0
           if
            local.get $0
            call $~lib/rt/itcms/__visit
           end
           return
          end
          local.get $0
          i32.load offset=20
          local.tee $0
          if
           local.get $0
           call $~lib/rt/itcms/__visit
          end
          return
         end
         i32.const 88336
         i32.const 88384
         i32.const 1
         i32.const 1
         call $~lib/builtins/abort
         unreachable
        end
        local.get $2
        call $~lib/rt/itcms/__visit
        br $folding-inner26
       end
       local.get $0
       i32.load offset=8
       local.tee $0
       if
        local.get $0
        call $~lib/rt/itcms/__visit
       end
       return
      end
      local.get $0
      i32.load offset=4
      local.tee $0
      if
       local.get $0
       call $~lib/rt/itcms/__visit
      end
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     i32.load
     call $~lib/rt/itcms/__visit
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.load offset=12
   local.tee $0
   if
    local.get $0
    call $~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load offset=16
  local.tee $0
  if
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~start
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  memory.size
  i32.const 16
  i32.shl
  i32.const 88312
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 3092
  i32.const 3088
  i32.store
  i32.const 3096
  i32.const 3088
  i32.store
  i32.const 3088
  global.set $~lib/rt/itcms/pinSpace
  i32.const 3124
  i32.const 3120
  i32.store
  i32.const 3128
  i32.const 3120
  i32.store
  i32.const 3120
  global.set $~lib/rt/itcms/toSpace
  i32.const 3268
  i32.const 3264
  i32.store
  i32.const 3272
  i32.const 3264
  i32.store
  i32.const 3264
  global.set $~lib/rt/itcms/fromSpace
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/core/validation/ValidationMetadata.metadata
   call $start:assembly/core/math-cache
   call $start:assembly/core/object-pool
   call $start:assembly/core/math-performance
   call $start:assembly/identity/audit-trail
   call $start:assembly/identity/kyc-provider
   call $start:assembly/identity/prime-mapping
   call $start:assembly/identity/ownership-transfer
   call $start:assembly/identity/resolang-processor
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IIdentity>#constructor"
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/identity/identity-recovery/IdentityRecoveryManager#constructor
   global.set $assembly/identity/identity-recovery/globalRecoveryManager
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   call $start:assembly/identity/permission-inheritance
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IIdentity>#constructor"
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 115
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/identity/authentication/QuantumAuthenticator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/identity/authentication/globalAuthManager
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   call $start:assembly/runtime/instructions
   call $assembly/runtime/processor/IdentityResoLangProcessor#constructor
   global.set $assembly/runtime/processor/globalResoLangProcessor
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#get:length (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<u64,bool>#find" (param $0 i32) (param $1 i64) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=12
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i64.load
     i64.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<u64,bool>#set" (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.const 374761401
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.get $1
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $7
   call $"~lib/map/Map<u64,bool>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    i32.store8 offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 4
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 4
     i32.shl
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=12
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $11
        i64.load
        local.tee $8
        i64.store
        local.get $3
        local.get $11
        i32.load8_u offset=8
        i32.store8 offset=8
        local.get $3
        local.get $10
        local.get $9
        local.get $8
        i32.wrap_i64
        i32.const -1028477379
        i32.mul
        i32.const 374761401
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.get $8
        i64.const 32
        i64.shr_u
        i32.wrap_i64
        i32.const -1028477379
        i32.mul
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $12
        local.get $12
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $12
        local.get $12
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $12
        local.get $12
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $12
        i32.load
        i32.store offset=12
        local.get $12
        local.get $3
        i32.store
        local.get $3
        i32.const 16
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 16
       i32.add
       local.set $11
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=12
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 4
    i32.shl
    i32.add
    local.tee $3
    local.get $1
    i64.store
    local.get $3
    local.get $2
    i32.store8 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $2
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=12
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $5
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 3376
    i32.const 4240
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load
   local.set $4
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   local.get $2
   i32.shl
   local.set $1
   local.get $3
   if
    i32.const 1073741820
    local.get $5
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   block $__inlined_func$~lib/rt/itcms/__renew$3700
    local.get $4
    i32.const 20
    i32.sub
    local.tee $3
    i32.load
    i32.const -4
    i32.and
    i32.const 16
    i32.sub
    local.get $1
    i32.ge_u
    if
     local.get $3
     local.get $1
     i32.store offset=16
     local.get $4
     local.set $2
     br $__inlined_func$~lib/rt/itcms/__renew$3700
    end
    local.get $1
    local.get $3
    i32.load offset=12
    call $~lib/rt/itcms/__new
    local.tee $2
    local.get $4
    local.get $1
    local.get $3
    i32.load offset=16
    local.tee $3
    local.get $1
    local.get $3
    i32.lt_u
    select
    memory.copy
   end
   local.get $2
   local.get $4
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $0
   local.get $1
   i32.store offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#push (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 3
  i32.shl
  i32.add
  local.get $1
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 57
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/interfaces/BaseSerializable#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 60
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 32
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3376
   i32.const 4240
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/set/Set<~lib/string/String>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 70
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/identity/kyc-provider/BaseKYCProvider#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.const 67
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 69
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=16
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $~lib/util/hash/hashStr|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 0
   local.get $0
   i32.eqz
   br_if $~lib/util/hash/hashStr|inlined.0
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const -2
   i32.and
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   i32.const 0
   local.get $1
   local.get $2
   call $~lib/util/string/compareImpl
   i32.eqz
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load offset=8
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $8
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find"
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $6
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $6
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load
        local.tee $12
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $12
        i32.store offset=8
        local.get $3
        local.get $12
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load offset=4
        local.tee $5
        i32.store offset=8
        local.get $3
        local.get $5
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $12
        i32.store offset=8
        local.get $3
        local.get $10
        local.get $12
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $9
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load
        i32.store offset=8
        local.get $5
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 12
       i32.add
       local.set $11
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=16
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $8
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/kyc-provider/KYCProviderRegistry.registerProvider (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/identity/kyc-provider/KYCProviderRegistry.providers
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/set/Set<u32>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 72
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 32
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 17
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/identity/ownership-transfer/TransferRequest>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 79
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/permissions/PermissionEvaluator#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 80
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/object/Object#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $3
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $9
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $3
   block $"__inlined_func$~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>#find$3705"
    loop $while-continue|0
     local.get $3
     if
      local.get $3
      i32.load offset=8
      local.tee $4
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       local.get $1
       local.get $3
       i32.load
       i32.eq
      end
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $"__inlined_func$~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>#find$3705"
      end
      local.get $4
      i32.const -2
      i32.and
      local.set $3
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $3
   end
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $8
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $7
     local.get $4
     local.set $3
     loop $while-continue|00
      local.get $7
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $11
        i32.load
        local.tee $12
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load offset=4
        local.tee $6
        i32.store offset=8
        local.get $3
        local.get $6
        i32.store offset=4
        local.get $3
        local.get $10
        local.get $5
        local.get $12
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $6
        i32.const 15
        i32.shr_u
        local.get $6
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $6
        i32.const 13
        i32.shr_u
        local.get $6
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $6
        i32.const 16
        i32.shr_u
        local.get $6
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $6
        i32.load
        i32.store offset=8
        local.get $6
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 12
       i32.add
       local.set $11
       br $while-continue|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=12
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $9
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/ownership-transfer/OwnershipTransferManager#registerTransferHandler (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $"~lib/map/Map<i32,%28assembly/identity/ownership-transfer/TransferRequest%29=>bool>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 87
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/QuantumPermissionEvaluator#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 84
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/QuantumIdentityRecovery#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 89
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.85
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/resolang/ResonantFragment>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 91
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/identity-recovery/IdentityRecoveryManager#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 93
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i64.const 0
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 96
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 99
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/identity/resolang-processor/QuantumIdentityRecovery#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=12
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i64.const 604800000
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IIdentity>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 101
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/authentication/QuantumAuthenticator#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 116
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 118
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 120
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:assembly/runtime/instructions
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 121
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloStore
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 123
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 124
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloFragment
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 125
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 126
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 127
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 128
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 129
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 130
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 131
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatSend
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 132
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 133
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 134
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/resonance/Resonance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 135
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/advanced/resonance/Factorize
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 136
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/coherence/coherence
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 137
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/coherenceall/coherenceall
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 138
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/threshold/threshold
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 139
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/coherence/waitcoh/waitcoh
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 140
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/break/breakInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 141
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/call/call
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 142
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/continue/continueInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 143
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/else/elseInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 144
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endif/endif
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 145
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endloop/endloop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 146
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/endwhile/endwhile
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 147
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/goto/gotoInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 148
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/if/ifInstruction
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 149
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/flow/ifcoh/ifcoh
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 150
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/setphase/setphase
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 151
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/advphase/advphase
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 152
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/decohere/decohere
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 153
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/phase/entangle/entangle
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 154
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/collapse/collapse
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 155
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/measure/measure
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 156
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/observe/observe
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 157
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/quantum/reconstruct/reconstruct
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 158
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/entropy/entropy
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 159
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/evolve/evolve
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 160
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/factorize/factorize
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 161
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/resonance/resonance/resonance
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 162
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/add/add
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 163
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/load/load
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 164
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/mix/mix
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 165
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/symbolic/scale/scale
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 166
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/halt/halt
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 167
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/output/output
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 168
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/random/random
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 169
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/object/Object#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/system/tick/tick
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 170
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/runtime/instructions/instructionHandlers
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11248
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloStore
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11248
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11296
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloRetrieve
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11296
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11344
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloFragment
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11344
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11392
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/holographic/HoloReconstruct
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11392
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11456
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisCreate
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11456
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11504
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisTransform
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11504
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11568
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/BasisSyncAll
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11568
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11616
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/multiBasis/CrossBasisCoherence
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11616
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11680
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatCreate
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11680
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11728
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatSend
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11728
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11776
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatReceive
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11776
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11824
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/quaternionic/QuatPhaseLock
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11824
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11888
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/resonance/Resonance
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11888
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11936
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/advanced/resonance/Factorize
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11936
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11984
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/coherence/coherence
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 11984
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12032
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/coherenceall/coherenceall
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12032
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12080
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/threshold/threshold
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12080
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12128
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/coherence/waitcoh/waitcoh
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12128
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12176
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/break/breakInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12176
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12208
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/call/call
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12208
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12240
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/continue/continueInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12240
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12288
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/else/elseInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12288
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12320
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endif/endif
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12320
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12352
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endloop/endloop
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12352
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12400
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/endwhile/endwhile
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12400
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12448
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/goto/gotoInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12448
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12480
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/if/ifInstruction
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12480
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12512
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/flow/ifcoh/ifcoh
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12512
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12544
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/setphase/setphase
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12544
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12592
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/advphase/advphase
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12592
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12640
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/decohere/decohere
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12640
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12688
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/phase/entangle/entangle
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12688
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12736
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/collapse/collapse
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12736
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12784
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/measure/measure
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12784
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12832
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/observe/observe
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12832
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12880
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/quantum/reconstruct/reconstruct
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12880
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12928
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/entropy/entropy
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12928
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12976
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/evolve/evolve
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 12976
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13008
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/factorize/factorize
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13008
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13056
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/resonance/resonance/resonance
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13056
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13104
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/add/add
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13104
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13136
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/load/load
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13136
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13168
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/mix/mix
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13168
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13200
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/symbolic/scale/scale
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13200
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13232
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/halt/halt
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13232
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13264
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/output/output
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13264
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13296
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/random/random
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13296
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/instructionHandlers
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13328
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/runtime/instructions/system/tick/tick
   local.tee $1
   i32.store offset=8
   local.get $0
   i32.const 13328
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/processor/QuantumPermissionEvaluator#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 172
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,assembly/resolang/ResonantFragment>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/processor/IdentityResoLangProcessor#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 171
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $assembly/runtime/processor/QuantumPermissionEvaluator#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 173
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/runtime/processor/QuantumPermissionEvaluator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 174
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0.85
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/runtime/processor/QuantumPermissionEvaluator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 175
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $~lib/array/Array<assembly/resolang/ResonantFragment>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/runtime/processor/QuantumPermissionEvaluator#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 14
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3376
   i32.const 4240
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/math/generatePrimes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<u32>#constructor
  local.tee $2
  i32.store
  block $folding-inner0
   local.get $0
   i32.const 0
   i32.le_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 2
   call $~lib/array/Array<i32>#push
   local.get $0
   i32.const 1
   i32.eq
   br_if $folding-inner0
   i32.const 3
   local.set $1
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.lt_s
    if
     i32.const 0
     local.set $4
     block $__inlined_func$assembly/core/math/isPrime$688
      local.get $1
      i32.const 1
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$688
      i32.const 1
      local.set $4
      local.get $1
      i32.const 3
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$688
      i32.const 0
      local.set $4
      local.get $1
      i32.const 1
      i32.and
      if (result i32)
       local.get $1
       i32.const 3
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$688
      i32.const 5
      local.set $3
      loop $while-continue|01
       local.get $3
       local.get $3
       i32.mul
       local.get $1
       i32.le_s
       if
        local.get $1
        local.get $3
        i32.rem_s
        if (result i32)
         local.get $1
         local.get $3
         i32.const 2
         i32.add
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$688
        local.get $3
        i32.const 6
        i32.add
        local.set $3
        br $while-continue|01
       end
      end
      i32.const 1
      local.set $4
     end
     local.get $4
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $2
      local.get $1
      call $~lib/array/Array<i32>#push
     end
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 13360
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=4
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String#charCodeAt (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const -2
  i32.and
  local.tee $3
  local.get $2
  i32.add
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 13360
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store offset=4
  local.get $4
  local.get $0
  local.get $2
  memory.copy
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/escapeJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   i32.const 13360
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $7
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $7
     call $~lib/string/String#charAt
     local.tee $2
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     block $break|1
      block $case7|1
       block $case6|1
        block $case5|1
         block $case4|1
          block $case3|1
           block $case2|1
            block $case1|1
             local.get $2
             i32.const 0
             call $~lib/string/String#charCodeAt
             local.tee $1
             i32.const 34
             i32.ne
             if
              local.get $1
              i32.const 92
              i32.eq
              br_if $case1|1
              local.get $1
              i32.const 8
              i32.eq
              br_if $case2|1
              local.get $1
              i32.const 12
              i32.eq
              br_if $case3|1
              local.get $1
              i32.const 10
              i32.eq
              br_if $case4|1
              local.get $1
              i32.const 13
              i32.eq
              br_if $case5|1
              local.get $1
              i32.const 9
              i32.eq
              br_if $case6|1
              br $case7|1
             end
             global.get $~lib/memory/__stack_pointer
             local.get $11
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             i32.const 13392
             i32.store offset=12
             global.get $~lib/memory/__stack_pointer
             local.get $11
             i32.const 13392
             call $~lib/string/String.__concat
             local.tee $11
             i32.store
             br $break|1
            end
            global.get $~lib/memory/__stack_pointer
            local.get $11
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 13424
            i32.store offset=12
            global.get $~lib/memory/__stack_pointer
            local.get $11
            i32.const 13424
            call $~lib/string/String.__concat
            local.tee $11
            i32.store
            br $break|1
           end
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           i32.const 13456
           i32.store offset=12
           global.get $~lib/memory/__stack_pointer
           local.get $11
           i32.const 13456
           call $~lib/string/String.__concat
           local.tee $11
           i32.store
           br $break|1
          end
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 13488
          i32.store offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $11
          i32.const 13488
          call $~lib/string/String.__concat
          local.tee $11
          i32.store
          br $break|1
         end
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.store offset=4
         global.get $~lib/memory/__stack_pointer
         i32.const 13520
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $11
         i32.const 13520
         call $~lib/string/String.__concat
         local.tee $11
         i32.store
         br $break|1
        end
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 13552
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.const 13552
        call $~lib/string/String.__concat
        local.tee $11
        i32.store
        br $break|1
       end
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       i32.const 13584
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.const 13584
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
       br $break|1
      end
      local.get $1
      i32.const 32
      i32.lt_s
      local.get $1
      i32.const 126
      i32.gt_s
      i32.or
      if
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.set $5
       global.get $~lib/memory/__stack_pointer
       i32.const 13616
       i32.store offset=16
       local.get $1
       i32.const 16
       call $~lib/number/I32#toString
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       i32.const 13840
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $2
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const -2
       i32.and
       local.set $6
       global.get $~lib/memory/__stack_pointer
       i32.const 13840
       i32.store
       block $__inlined_func$~lib/string/String#padStart$3963
        i32.const 13836
        i32.load
        i32.const -2
        i32.and
        local.tee $10
        i32.eqz
        local.get $6
        i32.const 8
        i32.gt_u
        i32.or
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         br $__inlined_func$~lib/string/String#padStart$3963
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $1
        i32.store offset=4
        i32.const 8
        local.get $6
        i32.sub
        local.tee $9
        local.get $10
        i32.gt_u
        if
         local.get $9
         local.get $9
         i32.const 2
         i32.sub
         local.get $10
         i32.div_u
         local.get $10
         i32.mul
         local.tee $3
         i32.sub
         local.set $4
         i32.const 0
         local.set $8
         loop $while-continue|0
          local.get $3
          local.get $8
          i32.gt_u
          if
           local.get $1
           local.get $8
           i32.add
           i32.const 13840
           local.get $10
           memory.copy
           local.get $8
           local.get $10
           i32.add
           local.set $8
           br $while-continue|0
          end
         end
         local.get $1
         local.get $3
         i32.add
         i32.const 13840
         local.get $4
         memory.copy
        else
         local.get $1
         i32.const 13840
         local.get $9
         memory.copy
        end
        local.get $1
        local.get $9
        i32.add
        local.get $2
        local.get $6
        memory.copy
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $1
        local.set $2
       end
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=20
       i32.const 13616
       local.get $2
       call $~lib/string/String.__concat
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $5
       local.get $11
       local.get $1
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
      else
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $11
       local.get $2
       call $~lib/string/String.__concat
       local.tee $11
       i32.store
      end
     end
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 13360
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 13360
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store offset=12
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy
     local.get $4
     local.get $7
     i32.add
     local.set $4
    end
    local.get $1
    if
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $4
     i32.add
     local.set $4
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $6
   local.get $4
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const -2
   i32.and
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#join (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_u
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store
  local.get $0
  local.get $1
  i32.const 13360
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 177
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 179
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 181
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/polynomial-convergence-validator/ConvergenceAnalysis#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.const 180
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.95
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<f64>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 134217727
  i32.gt_u
  if
   i32.const 3376
   i32.const 4240
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 3
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3168
    i32.const 4240
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f64>#push (param $0 i32) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 3
  i32.shl
  i32.add
  local.get $1
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  i32.eqz
  if
   i32.const 16736
   i32.const 4240
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 2
  i32.const 32
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.load offset=4
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $4
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<i32>#slice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#slice
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<f64>#fill@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $2of2
    block $1of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $1of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 2147483647
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=4
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=12
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.le_s
   select
   local.set $2
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
   local.set $1
   loop $for-loop|0
    local.get $1
    local.get $2
    i32.gt_s
    if
     local.get $4
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     f64.const 1
     f64.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<f64>#__set (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3168
    i32.const 4240
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.const 182
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=16
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $4
   local.get $1
   i32.store offset=4
   local.get $4
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   local.get $2
   i32.store offset=8
   local.get $4
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   call $~lib/array/Array<u32>#get:length
   call $~lib/array/Array<f64>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   call $~lib/array/Array<f64>#fill@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store offset=12
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   call $~lib/array/Array<u32>#get:length
   call $~lib/array/Array<i32>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   i32.const 1
   global.set $~argumentsLength
   block $__inlined_func$~lib/array/Array<i32>#fill@varargs$28 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     i32.load offset=4
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     i32.load offset=12
     local.tee $2
     i32.const 0
     local.get $2
     i32.const 0
     i32.le_s
     select
     local.tee $8
     local.get $2
     local.tee $2
     i32.lt_s
     if
      local.get $1
      local.get $8
      i32.const 2
      i32.shl
      i32.add
      i32.const 0
      local.get $2
      local.get $8
      i32.sub
      i32.const 2
      i32.shl
      memory.fill
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$~lib/array/Array<i32>#fill@varargs$28
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store offset=16
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 1
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   local.set $7
   i32.const 0
   local.set $2
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=8
    local.tee $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=8
     local.tee $0
     i32.store offset=8
     local.get $0
     local.get $2
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $0
     i32.store
     local.get $0
     call $~lib/array/Array<u32>#get:length
     f64.convert_i32_s
     local.get $7
     local.get $6
     f64.mul
     f64.div
     local.tee $5
     f64.const 0
     f64.gt
     if
      local.get $3
      local.get $5
      local.get $5
      call $~lib/math/NativeMath.log2
      f64.mul
      f64.sub
      local.set $3
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $3
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer.encodeGenericProblem (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 184
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   local.get $4
   local.get $6
   i32.store
   local.get $4
   local.get $6
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $5
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $2
     local.get $5
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $5
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $6
     local.get $7
     i32.const 0
     local.get $8
     call $~lib/array/Array<u32>#get:length
     i32.const 2
     i32.div_s
     call $~lib/array/Array<i32>#slice
     local.tee $6
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $2
     local.get $5
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $5
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/array/Array<u32>#get:length
     i32.const 2
     i32.div_s
     local.set $9
     i32.const 1
     global.set $~argumentsLength
     local.get $7
     local.get $8
     local.get $9
     call $~lib/array/Array<i32>#slice@varargs
     local.tee $7
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $6
     call $~lib/array/Array<u32>#get:length
     call $~lib/array/Array<f64>#constructor
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     i32.const 1
     global.set $~argumentsLength
     local.get $8
     local.get $9
     call $~lib/array/Array<f64>#fill@varargs
     local.tee $8
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     call $~lib/array/Array<u32>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=8
      local.get $8
      i32.const 0
      local.get $3
      local.get $5
      call $~lib/array/Array<f64>#__get
      call $~lib/array/Array<f64>#__set
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.const 183
     call $~lib/rt/itcms/__new
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.store
     local.get $9
     i32.const 0
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.store offset=8
     local.get $9
     i32.const 0
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     i32.const 0
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $9
     local.get $6
     i32.store
     local.get $9
     local.get $6
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $9
     local.get $7
     i32.store offset=4
     local.get $9
     local.get $7
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=8
     local.get $9
     local.get $8
     i32.store offset=8
     local.get $9
     local.get $8
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     local.get $0
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $4
     local.get $9
     call $~lib/array/Array<~lib/array/Array<i32>>#push
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $4
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#generateTestProblem (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/array/Array<i32>#constructor
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 185
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $4
   local.get $5
   i32.store
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $8
   i32.store offset=8
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     local.get $7
     local.get $3
     local.get $3
     call $~lib/array/Array<i32>#__set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   block $break|1
    block $case3|1
     block $case2|1
      block $case1|1
       block $case0|1
        local.get $0
        br_table $case0|1 $case2|1 $case3|1 $case3|1 $case3|1 $case1|1 $case3|1
       end
       local.get $1
       i32.const 2
       i32.shl
       local.set $6
       loop $for-loop|2
        local.get $2
        local.get $6
        i32.lt_s
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 6
         call $~lib/array/Array<i32>#constructor
         local.tee $9
         i32.store offset=16
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 0
         local.get $2
         local.get $1
         i32.rem_s
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 1
         local.get $2
         i32.const 1
         i32.add
         local.tee $3
         local.get $1
         i32.rem_s
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 2
         local.get $2
         i32.const 2
         i32.add
         local.tee $5
         local.get $1
         i32.rem_s
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 3
         local.get $2
         i32.const 2
         i32.rem_s
         i32.const 1
         i32.shl
         i32.const 1
         i32.sub
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 4
         local.get $3
         i32.const 2
         i32.rem_s
         i32.const 1
         i32.shl
         i32.const 1
         i32.sub
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=12
         local.get $9
         i32.const 5
         local.get $5
         i32.const 2
         i32.rem_s
         i32.const 1
         i32.shl
         i32.const 1
         i32.sub
         call $~lib/array/Array<i32>#__set
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $9
         i32.store offset=20
         local.get $4
         local.get $9
         call $~lib/array/Array<~lib/array/Array<i32>>#push
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store offset=12
         local.get $8
         f64.const 1
         call $~lib/array/Array<f64>#push
         local.get $3
         local.set $2
         br $for-loop|2
        end
       end
       br $break|1
      end
      loop $for-loop|3
       local.get $1
       local.get $2
       i32.gt_s
       if
        local.get $2
        i32.const 1
        i32.add
        local.set $3
        loop $for-loop|4
         local.get $1
         local.get $3
         i32.gt_s
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          call $~lib/array/Array<i32>#constructor
          local.tee $5
          i32.store offset=24
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store offset=12
          local.get $5
          i32.const 0
          local.get $2
          call $~lib/array/Array<i32>#__set
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store offset=12
          local.get $5
          i32.const 1
          local.get $3
          call $~lib/array/Array<i32>#__set
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store offset=12
          local.get $5
          i32.const 2
          i32.const 1
          call $~lib/array/Array<i32>#__set
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store offset=12
          local.get $5
          i32.const 3
          i32.const 1
          call $~lib/array/Array<i32>#__set
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.store offset=12
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store offset=20
          local.get $4
          local.get $5
          call $~lib/array/Array<~lib/array/Array<i32>>#push
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.store offset=12
          local.get $8
          local.get $2
          local.get $3
          i32.add
          i32.const 1
          i32.add
          f64.convert_i32_s
          call $~lib/array/Array<f64>#push
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|4
         end
        end
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        br $for-loop|3
       end
      end
      br $break|1
     end
     local.get $1
     local.get $1
     i32.const 1
     i32.sub
     i32.mul
     i32.const 4
     i32.div_s
     local.set $3
     loop $for-loop|5
      local.get $2
      local.get $3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       call $~lib/array/Array<i32>#constructor
       local.tee $5
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $5
       i32.const 0
       local.get $2
       local.get $1
       i32.rem_s
       call $~lib/array/Array<i32>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $5
       i32.const 1
       local.get $2
       i32.const 1
       i32.add
       local.tee $2
       local.get $1
       i32.rem_s
       call $~lib/array/Array<i32>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $5
       i32.const 2
       i32.const 1
       call $~lib/array/Array<i32>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $5
       i32.const 3
       i32.const 1
       call $~lib/array/Array<i32>#__set
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=20
       local.get $4
       local.get $5
       call $~lib/array/Array<~lib/array/Array<i32>>#push
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=12
       local.get $8
       f64.const 1
       call $~lib/array/Array<f64>#push
       br $for-loop|5
      end
     end
     br $break|1
    end
    loop $for-loop|6
     local.get $1
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      call $~lib/array/Array<i32>#constructor
      local.tee $3
      i32.store offset=32
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=12
      local.get $3
      i32.const 0
      local.get $2
      call $~lib/array/Array<i32>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=12
      local.get $3
      i32.const 1
      local.get $2
      i32.const 1
      i32.add
      local.tee $2
      local.get $1
      i32.rem_s
      call $~lib/array/Array<i32>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=12
      local.get $3
      i32.const 2
      i32.const 1
      call $~lib/array/Array<i32>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=12
      local.get $3
      i32.const 3
      i32.const -1
      call $~lib/array/Array<i32>#__set
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=20
      local.get $4
      local.get $3
      call $~lib/array/Array<~lib/array/Array<i32>>#push
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=12
      local.get $8
      f64.const 1
      call $~lib/array/Array<f64>#push
      br $for-loop|6
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=36
   local.get $0
   local.get $7
   local.get $4
   local.get $8
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer.encodeGenericProblem
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/polynomial-convergence-validator/PrecisionTimer#start (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<f64>>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 189
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3376
   i32.const 4240
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/array/Array<f64>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3168
    i32.const 4240
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 187
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=8
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 188
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 1
   local.get $0
   f64.convert_i32_s
   local.tee $3
   f64.div
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<~lib/array/Array<f64>>#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $1
   local.get $5
   i32.store
   local.get $1
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   call $~lib/array/Array<~lib/array/Array<f64>>#constructor
   local.tee $7
   i32.store offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $4
    local.get $1
    i32.load offset=4
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     local.get $1
     i32.load offset=4
     call $~lib/array/Array<f64>#constructor
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     local.get $7
     local.get $4
     local.get $5
     call $~lib/array/Array<~lib/array/Array<f64>>#__set
     i32.const 0
     local.set $5
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $5
      local.get $1
      i32.load offset=4
      i32.lt_s
      if
       local.get $4
       local.get $5
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=8
        local.get $7
        local.get $4
        call $~lib/array/Array<~lib/array/Array<i32>>#__get
        local.set $8
        global.get $~lib/memory/__stack_pointer
        local.get $8
        i32.store
        local.get $8
        local.get $5
        f64.const 1
        call $~lib/array/Array<f64>#__set
       else
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        local.get $4
        local.get $5
        i32.add
        f64.convert_i32_s
        f64.const 3.141592653589793
        f64.mul
        local.get $1
        i32.load offset=4
        f64.convert_i32_s
        f64.div
        call $~lib/math/NativeMath.sin
        local.set $2
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.store offset=8
        local.get $7
        local.get $4
        call $~lib/array/Array<~lib/array/Array<i32>>#__get
        local.set $8
        global.get $~lib/memory/__stack_pointer
        local.get $8
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=8
        local.get $8
        local.get $5
        local.get $2
        local.get $1
        f64.load offset=8
        f64.mul
        call $~lib/array/Array<f64>#__set
       end
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|1
      end
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   local.get $1
   local.get $7
   i32.store
   local.get $1
   local.get $7
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $6
   local.get $1
   i32.store
   local.get $6
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 190
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 1e-06
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $0
   local.get $0
   i32.mul
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $3
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $6
   local.get $1
   i32.store offset=4
   local.get $6
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $6
   local.get $0
   i32.store offset=8
   local.get $6
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalResonanceOperator#apply (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $5
   local.get $1
   i32.load
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $4
   i32.store offset=8
   i32.const 0
   global.set $~argumentsLength
   local.get $4
   i32.const 0
   call $~lib/array/Array<i32>#slice@varargs
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $10
   i32.store offset=8
   i32.const 0
   global.set $~argumentsLength
   block $__inlined_func$~lib/array/Array<assembly/examples/universal-symbolic-transformer/UniversalConstraint>#slice@varargs$33 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     i32.load offset=12
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.le_s
     select
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.get $11
     i32.sub
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.gt_s
     select
     local.tee $12
     i32.const 2
     i32.const 184
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $4
     i32.load offset=4
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     i32.load offset=4
     local.get $11
     i32.const 2
     i32.shl
     i32.add
     local.set $10
     local.get $12
     i32.const 2
     i32.shl
     local.set $11
     loop $while-continue|0
      local.get $2
      local.get $11
      i32.lt_u
      if
       local.get $2
       local.get $13
       i32.add
       local.get $2
       local.get $10
       i32.add
       i32.load
       local.tee $12
       i32.store
       local.get $4
       local.get $12
       i32.const 1
       call $~lib/rt/itcms/__link
       local.get $2
       i32.const 4
       i32.add
       local.set $2
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     br $__inlined_func$~lib/array/Array<assembly/examples/universal-symbolic-transformer/UniversalConstraint>#slice@varargs$33
    end
    br $folding-inner1
   end
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $5
   local.get $8
   local.get $9
   local.get $2
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#constructor
   local.tee $8
   i32.store offset=16
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=16
    local.tee $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $6
    i32.gt_s
    if
     f64.const 0
     local.set $3
     i32.const 0
     local.set $2
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load offset=16
      local.tee $4
      i32.store
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $4
       i32.store offset=4
       local.get $4
       local.get $6
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $2
       call $~lib/array/Array<f64>#__get
       local.set $14
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load offset=16
       local.tee $4
       i32.store
       local.get $3
       local.get $14
       local.get $4
       local.get $2
       call $~lib/array/Array<i32>#__get
       f64.convert_i32_s
       f64.mul
       f64.add
       local.set $3
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     i32.const 0
     local.set $4
     i32.const 0
     local.set $5
     f64.const 0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load offset=8
      local.tee $2
      i32.store
      local.get $2
      call $~lib/array/Array<u32>#get:length
      local.get $4
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load offset=8
       local.tee $2
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $2
       local.get $4
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.tee $9
       i32.store offset=8
       i32.const 0
       local.set $2
       loop $for-loop|11
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $9
        i32.load
        local.tee $10
        i32.store
        local.get $10
        call $~lib/array/Array<u32>#get:length
        local.get $2
        i32.gt_s
        if
         block $for-break1
          global.get $~lib/memory/__stack_pointer
          local.get $9
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $9
          i32.load
          local.tee $10
          i32.store
          local.get $10
          local.get $2
          call $~lib/array/Array<i32>#__get
          local.get $6
          i32.eq
          if
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.load offset=8
           local.tee $10
           i32.store
           local.get $10
           local.get $2
           call $~lib/array/Array<f64>#__get
           local.set $14
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $9
           i32.load offset=4
           local.tee $9
           i32.store
           local.get $3
           local.get $14
           local.get $9
           local.get $2
           call $~lib/array/Array<i32>#__get
           f64.convert_i32_s
           f64.mul
           f64.add
           local.set $3
           local.get $5
           i32.const 1
           i32.add
           local.set $5
           br $for-break1
          end
          local.get $2
          i32.const 1
          i32.add
          local.set $2
          br $for-loop|11
         end
        end
       end
       local.get $4
       i32.const 1
       i32.add
       local.set $4
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     local.get $5
     f64.convert_i32_s
     f64.div
     f64.const 0
     local.get $5
     i32.const 0
     i32.gt_s
     select
     f64.add
     local.tee $3
     i64.reinterpret_f64
     i64.const 9223372036854775807
     i64.and
     local.tee $7
     f64.reinterpret_i64
     local.set $14
     local.get $7
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.tee $2
     i32.const 1071748074
     i32.gt_u
     if (result f64)
      local.get $2
      i32.const 1077149696
      i32.gt_u
      if (result f64)
       f64.const 1
       f64.const 0
       local.get $14
       f64.div
       f64.sub
      else
       f64.const 1
       f64.const 2
       local.get $14
       local.get $14
       f64.add
       call $~lib/math/NativeMath.expm1
       f64.const 2
       f64.add
       f64.div
       f64.sub
      end
     else
      local.get $2
      i32.const 1070618798
      i32.gt_u
      if (result f64)
       local.get $14
       local.get $14
       f64.add
       call $~lib/math/NativeMath.expm1
       local.tee $14
       local.get $14
       f64.const 2
       f64.add
       f64.div
      else
       local.get $2
       i32.const 1048576
       i32.ge_u
       if (result f64)
        local.get $14
        f64.const -2
        f64.mul
        call $~lib/math/NativeMath.expm1
        local.tee $14
        f64.neg
        local.get $14
        f64.const 2
        f64.add
        f64.div
       else
        local.get $14
       end
      end
     end
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.load offset=16
     local.tee $2
     i32.store
     local.get $2
     local.get $6
     local.get $14
     local.get $3
     f64.copysign
     f64.const 0
     f64.gt
     call $~lib/array/Array<i32>#__set
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.load offset=24
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $8
   local.get $3
   f64.const 1
   local.get $0
   f64.load offset=8
   f64.sub
   f64.mul
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.load offset=32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $8
   local.get $3
   f64.const 1
   local.get $0
   f64.load offset=8
   f64.sub
   f64.mul
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#isSatisfied (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $1
     i32.store offset=8
     local.get $1
     local.get $2
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     i32.const 1
     local.set $3
     i32.const 0
     local.set $1
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load
      local.tee $5
      i32.store
      local.get $5
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.load
       local.tee $5
       i32.store
       local.get $5
       local.get $1
       call $~lib/array/Array<i32>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.load offset=4
       local.tee $6
       i32.store
       local.get $6
       local.get $1
       call $~lib/array/Array<i32>#__get
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $6
       i32.store
       i32.const 0
       i32.const 0
       local.get $3
       local.get $6
       local.get $5
       call $~lib/array/Array<i32>#__get
       local.tee $3
       i32.eqz
       local.get $7
       i32.const 0
       i32.gt_s
       i32.and
       select
       local.get $3
       i32.const 1
       i32.eq
       local.get $7
       i32.const 0
       i32.lt_s
       i32.and
       select
       local.set $3
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#solve (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store
   local.get $2
   local.get $4
   call $~lib/array/Array<f64>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $8
   local.get $1
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   block $__inlined_func$assembly/examples/universal-symbolic-transformer/UniversalCollapseDynamics#collapse
    block $folding-inner1
     loop $while-continue|0
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $6
      local.get $5
      i32.load offset=8
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $7
       local.get $1
       call $assembly/examples/universal-symbolic-transformer/UniversalResonanceOperator#apply
       local.tee $2
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $1
       f64.load offset=32
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $4
       local.get $2
       f64.load offset=32
       f64.sub
       f64.abs
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $1
       f64.load offset=24
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       local.get $9
       local.get $2
       f64.load offset=24
       f64.sub
       f64.abs
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       local.get $4
       local.get $5
       f64.load
       f64.lt
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        local.get $9
        local.get $5
        f64.load
        f64.lt
       else
        i32.const 0
       end
       local.set $1
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=4
       local.get $2
       call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#isSatisfied
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       local.get $2
       local.tee $1
       i32.store
       local.get $6
       i32.const 1
       i32.add
       local.tee $6
       i32.const 100
       i32.rem_s
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store offset=4
        f64.const 1
        f64.const 1
        local.get $5
        f64.load offset=16
        f64.div
        f64.sub
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=4
        local.get $3
        f64.load offset=32
        local.get $4
        local.get $6
        f64.convert_i32_s
        call $~lib/math/NativeMath.pow
        f64.mul
        local.set $4
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=4
        local.get $4
        local.get $1
        f64.load offset=32
        f64.ge
        br_if $while-continue|0
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=8
        local.get $1
        local.get $1
        f64.load offset=24
        f64.const 1.1
        f64.mul
        f64.store offset=24
       end
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$assembly/examples/universal-symbolic-transformer/UniversalCollapseDynamics#collapse
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    local.set $1
   end
   local.get $8
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $0
   local.get $4
   call $~lib/array/Array<f64>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#verifyPolynomialConvergence (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store
  local.get $2
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.store offset=4
  local.get $2
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<f64>#__get
  local.get $1
  f64.div
  f64.const 0.5
  f64.lt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#performConvergenceAnalysis (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/examples/polynomial-convergence-validator/ConvergenceAnalysis#constructor
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 2
   i32.lt_s
  end
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.sub
  call $~lib/array/Array<f64>#__get
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $8
  local.get $9
  f64.sub
  local.get $8
  f64.div
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  local.set $10
  i32.const 0
  local.set $0
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.get $0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $4
    local.get $2
    local.get $0
    local.get $2
    call $~lib/array/Array<u32>#get:length
    i32.rem_s
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    local.tee $8
    f64.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $7
    local.get $1
    local.get $0
    call $~lib/array/Array<f64>#__get
    f64.const 1
    f64.add
    call $~lib/math/NativeMath.log
    local.tee $9
    f64.add
    local.set $7
    local.get $5
    local.get $8
    local.get $8
    f64.mul
    f64.add
    local.set $5
    local.get $6
    local.get $8
    local.get $9
    f64.mul
    f64.add
    local.set $6
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $10
  local.get $6
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.get $10
  local.get $5
  f64.mul
  local.get $4
  local.get $4
  f64.mul
  f64.sub
  f64.div
  local.tee $8
  f64.store offset=16
  local.get $7
  local.get $10
  f64.div
  local.set $9
  f64.const 0
  local.set $6
  f64.const 0
  local.set $5
  i32.const 0
  local.set $0
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.get $0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    local.get $0
    local.get $2
    call $~lib/array/Array<u32>#get:length
    i32.rem_s
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $6
    local.get $1
    local.get $0
    call $~lib/array/Array<f64>#__get
    f64.const 1
    f64.add
    call $~lib/math/NativeMath.log
    local.tee $12
    local.get $8
    local.get $11
    f64.mul
    local.get $7
    local.get $8
    local.get $4
    f64.mul
    f64.sub
    local.get $10
    f64.div
    f64.add
    f64.sub
    local.tee $6
    local.get $6
    f64.mul
    f64.add
    local.set $6
    local.get $5
    local.get $12
    local.get $9
    f64.sub
    local.tee $5
    local.get $5
    f64.mul
    f64.add
    local.set $5
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $5
  f64.const 0
  f64.gt
  if (result f64)
   f64.const 1
   local.get $6
   local.get $5
   f64.div
   f64.sub
  else
   f64.const 0
  end
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $3
  f64.load
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#validateProblemType (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 f64)
  (local $20 i32)
  (local $21 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 48
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/polynomial-convergence-validator/ConvergenceAnalysis#constructor
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $15
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $14
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $12
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $12
     call $~lib/array/Array<i32>#__get
     local.set $17
     i32.const 0
     local.set $11
     loop $for-loop|1
      local.get $11
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       local.get $17
       call $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#generateTestProblem
       local.tee $3
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.set $4
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.const 186
       call $~lib/rt/itcms/__new
       local.tee $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       f64.const 0
       f64.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       f64.const 0
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       f64.const 0
       f64.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       f64.const 0
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $4
       local.get $5
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       local.get $5
       call $assembly/examples/polynomial-convergence-validator/PrecisionTimer#start
       global.get $~lib/memory/__stack_pointer
       local.get $17
       call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#constructor
       local.tee $9
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $9
       local.get $3
       call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#solve
       local.tee $8
       i32.store offset=32
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       local.get $5
       call $~lib/bindings/dom/Date.now
       i64.trunc_sat_f64_s
       f64.convert_i64_s
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       local.get $5
       f64.load offset=8
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       local.get $7
       local.get $5
       f64.load
       f64.sub
       local.set $7
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       block $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736 (result f64)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=12
        block $case5|0
         block $case4|0
          block $case3|0
           block $case2|0
            block $case1|0
             block $case0|0
              local.get $1
              br_table $case0|0 $case4|0 $case5|0 $case2|0 $case3|0 $case1|0 $case5|0
             end
             f64.const 2
             local.get $17
             f64.convert_i32_s
             call $~lib/math/NativeMath.pow
             local.get $17
             i32.const 2
             i32.shl
             f64.convert_i32_s
             f64.mul
             f64.const 1e6
             f64.div
             br $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736
            end
            local.get $17
            f64.convert_i32_s
            local.tee $19
            local.get $19
            f64.mul
            f64.const 2
            local.get $19
            call $~lib/math/NativeMath.pow
            f64.mul
            f64.const 1e6
            f64.div
            br $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736
           end
           f64.const 3
           local.get $17
           f64.convert_i32_s
           call $~lib/math/NativeMath.pow
           f64.const 1e6
           f64.div
           br $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736
          end
          local.get $17
          i32.const 10
          i32.mul
          local.get $17
          i32.mul
          f64.convert_i32_s
          f64.const 1e4
          f64.div
          br $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736
         end
         f64.const 2
         local.get $17
         f64.convert_i32_s
         call $~lib/math/NativeMath.pow
         f64.const 1e6
         f64.div
         br $__inlined_func$assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#simulateTraditionalTime$3736
        end
        f64.const 2
        local.get $17
        f64.convert_i32_s
        call $~lib/math/NativeMath.pow
        f64.const 1e6
        f64.div
       end
       local.set $19
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       i32.const 49
       i32.const 178
       call $~lib/rt/itcms/__new
       local.tee $20
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store offset=32
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store8 offset=48
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       local.get $1
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       local.get $17
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store offset=32
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       f64.const 0
       f64.store offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=4
       local.get $20
       i32.const 0
       i32.store8 offset=48
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=36
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=12
       local.get $20
       local.get $7
       f64.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=12
       local.get $20
       local.get $19
       f64.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=12
       local.get $20
       local.get $19
       local.get $7
       f64.div
       f64.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=40
       i32.const 0
       local.set $3
       i32.const 0
       local.set $13
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.load offset=8
       local.tee $4
       i32.store
       local.get $4
       call $~lib/array/Array<u32>#get:length
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store
       local.get $8
       call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#isSatisfied
       if
        local.get $4
        local.set $3
       else
        loop $for-loop|00
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.store offset=4
         global.get $~lib/memory/__stack_pointer
         local.get $8
         i32.load offset=8
         local.tee $5
         i32.store
         local.get $5
         call $~lib/array/Array<u32>#get:length
         local.get $13
         i32.gt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          local.get $8
          i32.load offset=8
          local.tee $5
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.get $5
          local.get $13
          call $~lib/array/Array<~lib/array/Array<i32>>#__get
          local.tee $6
          i32.store offset=8
          i32.const 1
          local.set $18
          i32.const 0
          local.set $16
          loop $for-loop|11
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $6
           i32.load
           local.tee $5
           i32.store
           local.get $5
           call $~lib/array/Array<u32>#get:length
           local.get $16
           i32.gt_s
           if
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.load
            local.tee $5
            i32.store
            local.get $5
            local.get $16
            call $~lib/array/Array<i32>#__get
            local.set $10
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $6
            i32.load offset=4
            local.tee $5
            i32.store
            local.get $5
            local.get $16
            call $~lib/array/Array<i32>#__get
            local.set $5
            global.get $~lib/memory/__stack_pointer
            local.get $8
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $8
            i32.load offset=16
            local.tee $21
            i32.store
            i32.const 0
            i32.const 0
            local.get $18
            local.get $21
            local.get $10
            call $~lib/array/Array<i32>#__get
            local.tee $10
            i32.eqz
            local.get $5
            i32.const 0
            i32.gt_s
            i32.and
            select
            local.get $10
            i32.const 1
            i32.eq
            local.get $5
            i32.const 0
            i32.lt_s
            i32.and
            select
            local.set $18
            local.get $16
            i32.const 1
            i32.add
            local.set $16
            br $for-loop|11
           end
          end
          local.get $3
          i32.const 1
          i32.add
          local.get $3
          local.get $18
          select
          local.set $3
          local.get $13
          i32.const 1
          i32.add
          local.set $13
          br $for-loop|00
         end
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $20
       local.get $4
       i32.const 0
       i32.gt_s
       if (result f64)
        local.get $3
        f64.convert_i32_s
        local.get $4
        f64.convert_i32_s
        f64.div
       else
        f64.const 1
       end
       f64.store offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=28
       local.get $20
       local.get $9
       call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#verifyPolynomialConvergence
       i32.store8 offset=48
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $3
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $20
       i32.store offset=28
       local.get $3
       local.get $20
       call $~lib/array/Array<~lib/array/Array<i32>>#push
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=28
       local.get $15
       local.get $8
       f64.load offset=32
       call $~lib/array/Array<f64>#push
       global.get $~lib/memory/__stack_pointer
       local.get $14
       i32.store offset=12
       local.get $14
       local.get $7
       call $~lib/array/Array<f64>#push
       local.get $11
       i32.const 1
       i32.add
       local.set $11
       br $for-loop|1
      end
     end
     local.get $12
     i32.const 1
     i32.add
     local.set $12
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $15
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $15
   local.get $14
   local.get $2
   call $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#performConvergenceAnalysis
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=28
   local.get $0
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#generateValidationReport (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 29360
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 29360
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 29488
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 29360
  i32.const 29488
  call $~lib/string/String.__concat
  local.tee $6
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 29584
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $8
  i32.store offset=28
  local.get $8
  call $~lib/array/Array<u32>#get:length
  i32.const 10
  call $~lib/number/I32#toString
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=24
  i32.const 29584
  local.get $8
  call $~lib/string/String.__concat
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 29664
  i32.store offset=16
  local.get $8
  i32.const 29664
  call $~lib/string/String.__concat
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $7
  local.get $6
  local.get $8
  call $~lib/string/String.__concat
  local.tee $6
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 29696
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $8
  i32.store offset=28
  local.get $8
  call $~lib/array/Array<u32>#get:length
  i32.const 10
  call $~lib/number/I32#toString
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=24
  i32.const 29696
  local.get $8
  call $~lib/string/String.__concat
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 29664
  i32.store offset=16
  local.get $8
  i32.const 29664
  call $~lib/string/String.__concat
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  local.get $7
  local.get $6
  local.get $8
  call $~lib/string/String.__concat
  local.tee $6
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $7
   i32.store offset=4
   local.get $7
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $7
    local.get $2
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.tee $7
    i32.store offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $4
    local.get $7
    f64.load offset=24
    f64.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $3
    i32.const 1
    i32.add
    local.get $3
    local.get $7
    i32.load8_u offset=48
    select
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $1
    i32.const 1
    i32.add
    local.get $1
    local.get $7
    f64.load offset=40
    f64.const 0.95
    f64.ge
    select
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.div
  else
   f64.const 0
  end
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $3
   f64.convert_i32_s
   local.get $2
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.div
  else
   f64.const 0
  end
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if (result f64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $1
   f64.convert_i32_s
   local.get $2
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.div
  else
   f64.const 0
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 29776
  i32.store offset=20
  local.get $9
  call $~lib/number/F64#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  i32.const 29776
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 29856
  i32.store offset=16
  local.get $2
  i32.const 29856
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $6
  local.get $2
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 29888
  i32.store offset=20
  local.get $5
  f64.const 100
  f64.mul
  call $~lib/number/F64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  i32.const 29888
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 30000
  i32.store offset=16
  local.get $3
  i32.const 30000
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $2
  local.get $1
  local.get $3
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 30032
  i32.store offset=20
  local.get $4
  f64.const 100
  f64.mul
  call $~lib/number/F64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  i32.const 30032
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 30112
  i32.store offset=16
  local.get $3
  i32.const 30112
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $2
  local.get $1
  local.get $3
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30144
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 30144
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  i32.const 0
  local.set $3
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.tee $2
    i32.store offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 30224
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=28
    local.get $2
    f64.load
    call $~lib/number/F64#toString
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=24
    i32.const 30224
    local.get $7
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 29664
    i32.store offset=16
    local.get $7
    i32.const 29664
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $6
    local.get $1
    local.get $7
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 30304
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=28
    local.get $2
    f64.load offset=16
    call $~lib/number/F64#toString
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=24
    i32.const 30304
    local.get $7
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 29664
    i32.store offset=16
    local.get $7
    i32.const 29664
    call $~lib/string/String.__concat
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=8
    local.get $6
    local.get $1
    local.get $7
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 30384
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=28
    local.get $2
    f64.load offset=32
    call $~lib/number/F64#toString
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=24
    i32.const 30384
    local.get $2
    call $~lib/string/String.__concat
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 30448
    i32.store offset=16
    local.get $2
    i32.const 30448
    call $~lib/string/String.__concat
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $6
    local.get $1
    local.get $2
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30480
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 30480
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30560
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 30560
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30688
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 30688
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30848
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 30848
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 30992
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 30992
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31120
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 31120
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31168
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 31168
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31328
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 31328
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31472
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 31472
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/TestCase>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 193
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 f64) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 192
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $5
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  i32.const 0
  i32.store offset=12
  local.get $5
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $5
  local.get $1
  i32.store offset=4
  local.get $5
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $5
  local.get $2
  i32.store offset=8
  local.get $5
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $5
  local.get $3
  i32.store offset=12
  local.get $5
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=4
  local.get $5
  local.get $4
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 195
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 191
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/TestCase>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/TestCase>#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 31616
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 31696
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 31744
   i32.store offset=20
   i32.const 0
   i32.const 31616
   local.get $2
   i32.const 31744
   f64.const 1048576
   call $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 31776
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 31856
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 31904
   i32.store offset=20
   i32.const 5
   i32.const 31776
   local.get $2
   i32.const 31904
   f64.const 16777216
   call $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 31952
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 32016
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 31744
   i32.store offset=20
   i32.const 1
   i32.const 31952
   local.get $2
   i32.const 31744
   f64.const 1073741824
   call $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32064
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 32128
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 32176
   i32.store offset=20
   i32.const 3
   i32.const 32064
   local.get $2
   i32.const 32176
   f64.const 1e6
   call $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32208
   i32.store offset=12
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 32272
   call $~lib/rt/__newArray
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 31744
   i32.store offset=20
   i32.const 4
   i32.const 32208
   local.get $2
   i32.const 31744
   f64.const 1e9
   call $assembly/examples/comprehensive-benchmark-suite/TestCase#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $~lib/array/Array<assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 49
  i32.const 194
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store8 offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $2
  i32.const 13360
  i32.store offset=8
  local.get $2
  i32.const 13360
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $2
  i32.const 13360
  i32.store offset=12
  local.get $2
  i32.const 13360
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store8 offset=48
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#benchmarkTestCase (param $0 i32) (param $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f64)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $4
   i32.store offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=8
    local.tee $10
    i32.store offset=8
    local.get $10
    call $~lib/array/Array<u32>#get:length
    local.get $11
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=8
     local.tee $10
     i32.store offset=8
     local.get $10
     local.get $11
     call $~lib/array/Array<i32>#__get
     local.set $12
     f64.const 0
     local.set $2
     f64.const 0
     local.set $3
     i32.const 0
     local.set $10
     loop $for-loop|1
      local.get $10
      i32.const 5
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load
       local.set $14
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 55544
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       i64.const 0
       i64.store
       global.get $~lib/memory/__stack_pointer
       i32.const 32320
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 32320
       local.get $12
       call $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics#constructor
       local.tee $15
       i32.store offset=4
       block $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071 (result f64)
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store
        block $case5|0
         block $case4|0
          block $case3|0
           block $case2|0
            block $case1|0
             block $case0|0
              local.get $14
              br_table $case0|0 $case2|0 $case5|0 $case3|0 $case4|0 $case1|0 $case5|0
             end
             f64.const 2
             local.get $12
             f64.convert_i32_s
             call $~lib/math/NativeMath.pow
             f64.const 1e3
             f64.div
             br $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071
            end
            local.get $12
            local.get $12
            i32.mul
            f64.convert_i32_s
            f64.const 2
            local.get $12
            f64.convert_i32_s
            call $~lib/math/NativeMath.pow
            f64.mul
            f64.const 1e6
            f64.div
            br $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071
           end
           f64.const 2
           local.get $12
           f64.convert_i32_s
           call $~lib/math/NativeMath.pow
           f64.const 1e3
           f64.div
           br $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071
          end
          f64.const 3
          local.get $12
          f64.convert_i32_s
          call $~lib/math/NativeMath.pow
          f64.const 1e3
          f64.div
          br $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071
         end
         f64.const 2
         local.get $12
         f64.convert_i32_s
         call $~lib/math/NativeMath.pow
         f64.const 1e3
         f64.div
         br $__inlined_func$assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#estimateTraditionalTime$1071
        end
        f64.const 2
        local.get $12
        f64.convert_i32_s
        call $~lib/math/NativeMath.pow
        f64.const 1e3
        f64.div
       end
       local.set $7
       call $~lib/bindings/dom/Date.now
       i64.trunc_sat_f64_s
       f64.convert_i64_s
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       call $~lib/bindings/dom/Date.now
       i64.trunc_sat_f64_s
       i64.const 1000
       i64.rem_s
       f64.convert_i64_s
       f64.const 1e3
       f64.div
       f64.const 1
       local.get $12
       f64.convert_i32_s
       f64.const 50
       f64.div
       f64.const 0.1
       f64.mul
       f64.sub
       f64.const 0.85
       f64.max
       f64.lt
       local.set $14
       call $~lib/bindings/dom/Date.now
       i64.trunc_sat_f64_s
       f64.convert_i64_s
       local.get $8
       f64.sub
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store
       local.get $15
       local.get $7
       local.get $8
       f64.const 1
       f64.max
       f64.div
       f64.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store
       local.get $15
       f64.const 1
       f64.const 0.8
       local.get $14
       select
       f64.store offset=40
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store
       local.get $15
       local.get $12
       local.get $12
       i32.mul
       f64.convert_i32_s
       local.tee $7
       local.get $8
       f64.ge
       i32.store8 offset=48
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $15
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $15
       i32.store offset=8
       local.get $2
       local.get $15
       f64.load offset=16
       f64.add
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       local.get $3
       local.get $7
       f64.const 100
       f64.div
       f64.add
       local.set $3
       local.get $10
       i32.const 1
       i32.add
       local.set $10
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $6
     local.get $2
     f64.const 5
     f64.div
     local.tee $2
     call $~lib/array/Array<f64>#push
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $4
     local.get $3
     f64.const 5
     f64.div
     call $~lib/array/Array<f64>#push
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=4
     local.tee $10
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     local.get $12
     call $assembly/examples/comprehensive-benchmark-suite/PerformanceMetrics#constructor
     local.tee $10
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=12
     local.tee $14
     i32.store offset=12
     local.get $10
     local.get $14
     i32.store offset=8
     local.get $10
     local.get $14
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 32368
     i32.store offset=12
     local.get $10
     i32.const 32368
     i32.store offset=12
     local.get $10
     i32.const 32368
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     local.get $10
     local.get $2
     f64.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     local.get $10
     local.get $12
     i32.const 1
     i32.shl
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     local.get $10
     f64.const 0.95
     f64.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     local.get $10
     f64.const 0.98
     f64.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=8
     local.get $10
     local.get $2
     f64.const 100
     f64.gt
     i32.store8 offset=48
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $12
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=12
     local.get $12
     local.get $10
     call $~lib/array/Array<~lib/array/Array<i32>>#push
     local.get $11
     i32.const 1
     i32.add
     local.set $11
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/array/Array<u32>#get:length
   local.get $0
   i32.ne
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 3
    i32.lt_s
   end
   i32.eqz
   if
    f64.const 0
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 3
    i32.const 7
    i32.const 32400
    call $~lib/rt/__newArray
    local.tee $10
    i32.store offset=4
    loop $for-loop|00
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     call $~lib/array/Array<u32>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store
      local.get $10
      local.get $5
      call $~lib/array/Array<f64>#__get
      local.set $13
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      i32.const 0
      local.set $0
      f64.const 0
      local.set $7
      f64.const 0
      local.set $8
      f64.const 0
      local.set $9
      f64.const 0
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $1
      call $~lib/array/Array<u32>#get:length
      f64.convert_i32_s
      local.set $16
      loop $for-loop|01
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $1
       call $~lib/array/Array<u32>#get:length
       local.get $0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        local.get $7
        local.get $1
        local.get $0
        call $~lib/array/Array<i32>#__get
        f64.convert_i32_s
        local.get $13
        call $~lib/math/NativeMath.pow
        local.tee $17
        f64.add
        local.set $7
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        local.get $8
        local.get $4
        local.get $0
        call $~lib/array/Array<f64>#__get
        local.tee $18
        f64.add
        local.set $8
        local.get $9
        local.get $17
        local.get $17
        f64.mul
        f64.add
        local.set $9
        local.get $3
        local.get $17
        local.get $18
        f64.mul
        f64.add
        local.set $3
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $for-loop|01
       end
      end
      local.get $8
      local.get $16
      local.get $3
      f64.mul
      local.get $7
      local.get $8
      f64.mul
      f64.sub
      local.get $16
      local.get $9
      f64.mul
      local.get $7
      local.get $7
      f64.mul
      f64.sub
      f64.div
      local.tee $3
      local.get $7
      f64.mul
      f64.sub
      local.get $16
      f64.div
      local.set $9
      local.get $8
      local.get $16
      f64.div
      local.set $16
      f64.const 0
      local.set $8
      f64.const 0
      local.set $7
      i32.const 0
      local.set $0
      loop $for-loop|12
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $1
       call $~lib/array/Array<u32>#get:length
       local.get $0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        local.get $1
        local.get $0
        call $~lib/array/Array<i32>#__get
        f64.convert_i32_s
        local.get $13
        call $~lib/math/NativeMath.pow
        local.set $17
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.store
        local.get $8
        local.get $4
        local.get $0
        call $~lib/array/Array<f64>#__get
        local.tee $18
        local.get $3
        local.get $17
        f64.mul
        local.get $9
        f64.add
        f64.sub
        local.tee $8
        local.get $8
        f64.mul
        f64.add
        local.set $8
        local.get $7
        local.get $18
        local.get $16
        f64.sub
        local.tee $7
        local.get $7
        f64.mul
        f64.add
        local.set $7
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $for-loop|12
       end
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      f64.const 0
      f64.gt
      if (result f64)
       f64.const 1
       local.get $8
       local.get $7
       f64.div
       f64.sub
      else
       f64.const 0
      end
      local.tee $3
      local.get $2
      f64.gt
      if
       local.get $3
       local.set $2
      end
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|00
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   i32.const 0
   local.set $0
   f64.const 0
   local.set $3
   f64.const 0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/examples/comprehensive-benchmark-suite/StatisticalAnalyzer.calculateSignificance$40
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    local.get $6
    call $~lib/array/Array<u32>#get:length
    i32.const 2
    i32.lt_s
    br_if $__inlined_func$assembly/examples/comprehensive-benchmark-suite/StatisticalAnalyzer.calculateSignificance$40
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    loop $for-loop|02
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $6
     call $~lib/array/Array<u32>#get:length
     local.get $0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store
      local.get $3
      local.get $6
      local.get $0
      call $~lib/array/Array<f64>#__get
      f64.add
      local.set $3
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|02
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    local.get $6
    call $~lib/array/Array<u32>#get:length
    i32.const 0
    i32.gt_s
    if (result f64)
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $3
     local.get $6
     call $~lib/array/Array<u32>#get:length
     f64.convert_i32_s
     f64.div
    else
     f64.const 0
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|003
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $6
     call $~lib/array/Array<u32>#get:length
     local.get $0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store
      local.get $2
      local.get $6
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.get $3
      f64.sub
      local.tee $2
      local.get $2
      f64.mul
      f64.add
      local.set $2
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|003
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    local.get $6
    call $~lib/array/Array<u32>#get:length
    i32.const 1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $6
     call $~lib/array/Array<u32>#get:length
     drop
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    local.get $6
    call $~lib/array/Array<u32>#get:length
    drop
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#generateBenchmarkReport (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 92
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 92
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 32464
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 32464
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32592
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 32464
   i32.const 32592
   call $~lib/string/String.__concat
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32704
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.const 32704
   call $~lib/string/String.__concat
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 32816
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.const 32816
   call $~lib/string/String.__concat
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 32880
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   local.get $0
   i32.load offset=16
   i32.const 10
   call $~lib/number/I32#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=24
   i32.const 32880
   local.get $9
   call $~lib/string/String.__concat
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 29664
   i32.store offset=16
   local.get $9
   i32.const 29664
   call $~lib/string/String.__concat
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $7
   local.get $9
   call $~lib/string/String.__concat
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 32960
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   local.get $0
   f64.load offset=8
   f64.const 100
   f64.mul
   call $~lib/number/F64#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=24
   i32.const 32960
   local.get $9
   call $~lib/string/String.__concat
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 30000
   i32.store offset=16
   local.get $9
   i32.const 30000
   call $~lib/string/String.__concat
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $7
   local.get $9
   call $~lib/string/String.__concat
   local.tee $7
   i32.store
   f64.const inf
   local.set $4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $8
    i32.store offset=4
    local.get $8
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     local.get $1
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.tee $8
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $3
     local.get $8
     f64.load offset=16
     f64.add
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     f64.load offset=16
     local.get $4
     f64.min
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     f64.load offset=16
     local.get $6
     f64.max
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $2
     i32.const 1
     i32.add
     local.get $2
     local.get $8
     i32.load8_u offset=48
     select
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.store offset=4
    local.get $3
    local.get $1
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
   else
    f64.const 0
   end
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 29776
   i32.store offset=20
   local.get $3
   f64.floor
   call $~lib/number/F64#toString
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=24
   i32.const 29776
   local.get $8
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 29856
   i32.store offset=16
   local.get $8
   i32.const 29856
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $1
   local.get $7
   local.get $8
   call $~lib/string/String.__concat
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 33040
   i32.store offset=40
   local.get $4
   f64.floor
   call $~lib/number/F64#toString
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=44
   i32.const 33040
   local.get $8
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 33104
   i32.store offset=36
   local.get $8
   i32.const 33104
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=20
   local.get $6
   f64.floor
   call $~lib/number/F64#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=24
   local.get $8
   local.get $9
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 29856
   i32.store offset=16
   local.get $8
   i32.const 29856
   call $~lib/string/String.__concat
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $7
   local.get $1
   local.get $8
   call $~lib/string/String.__concat
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 33136
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $8
   i32.store offset=28
   local.get $2
   f64.convert_i32_s
   local.get $8
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.div
   f64.const 100
   f64.mul
   f64.floor
   call $~lib/number/F64#toString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=24
   i32.const 33136
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 30112
   i32.store offset=16
   local.get $2
   i32.const 30112
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $7
   local.get $1
   local.get $2
   call $~lib/string/String.__concat
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 33232
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 33232
   call $~lib/string/String.__concat
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 33328
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 33328
   call $~lib/string/String.__concat
   local.tee $1
   i32.store
   i32.const 13360
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=48
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $5
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     local.get $5
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.tee $7
     i32.store offset=52
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.load
     local.tee $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $8
     local.get $2
     call $~lib/string/String.__eq
     i32.eqz
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $8
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load
      local.tee $2
      i32.store offset=48
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 33424
      i32.store offset=16
      local.get $2
      i32.const 33424
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=8
      local.get $8
      local.get $1
      local.get $9
      call $~lib/string/String.__concat
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.set $8
      global.get $~lib/memory/__stack_pointer
      i32.const 33456
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=28
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load offset=8
      local.tee $9
      i32.store offset=24
      i32.const 33456
      local.get $9
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 29664
      i32.store offset=16
      local.get $9
      i32.const 29664
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=8
      local.get $8
      local.get $1
      local.get $9
      call $~lib/string/String.__concat
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.set $8
      global.get $~lib/memory/__stack_pointer
      i32.const 33536
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=28
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.load offset=12
      local.tee $9
      i32.store offset=24
      i32.const 33536
      local.get $9
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 29664
      i32.store offset=16
      local.get $9
      i32.const 29664
      call $~lib/string/String.__concat
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=8
      local.get $8
      local.get $1
      local.get $9
      call $~lib/string/String.__concat
      local.tee $1
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 33632
     i32.store offset=80
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=88
     local.get $7
     i32.load offset=4
     i32.const 10
     call $~lib/number/I32#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=84
     i32.const 33632
     local.get $9
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=72
     global.get $~lib/memory/__stack_pointer
     i32.const 33680
     i32.store offset=76
     local.get $9
     i32.const 33680
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=64
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=72
     local.get $7
     f64.load offset=16
     f64.floor
     call $~lib/number/F64#toString
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=68
     local.get $9
     local.get $10
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=56
     global.get $~lib/memory/__stack_pointer
     i32.const 33712
     i32.store offset=60
     local.get $9
     i32.const 33712
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=56
     local.get $7
     f64.load offset=40
     f64.const 100
     f64.mul
     f64.floor
     call $~lib/number/F64#toString
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=44
     local.get $9
     local.get $10
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 33760
     i32.store offset=36
     local.get $9
     i32.const 33760
     call $~lib/string/String.__concat
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 33808
     i32.const 33840
     local.get $7
     i32.load8_u offset=48
     select
     local.tee $7
     i32.store offset=24
     local.get $9
     local.get $7
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 29664
     i32.store offset=16
     local.get $7
     i32.const 29664
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     local.get $8
     local.get $1
     local.get $7
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 33872
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 33872
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 33952
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 33952
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34032
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34032
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34160
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34160
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 30848
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 30848
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34288
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34288
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34432
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34432
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34512
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34512
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 31168
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 31168
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34592
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34592
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34752
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34752
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 34880
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 34880
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35040
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35040
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 92
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/comprehensive-benchmark-suite/runFullValidationSuite (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#constructor
   local.tee $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 16640
   call $~lib/rt/__newArray
   local.tee $9
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 32
   i32.const 16688
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     local.get $4
     local.get $0
     call $~lib/array/Array<i32>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $8
     local.get $5
     local.get $9
     call $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#validateProblemType
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   call $assembly/examples/polynomial-convergence-validator/PolynomialConvergenceValidator#generateValidationReport
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#constructor
   local.tee $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   i32.const 0
   local.set $0
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load
    local.tee $7
    i32.store
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $7
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $7
     local.get $0
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.tee $7
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $5
     local.get $7
     call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#benchmarkTestCase
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=4
   local.tee $7
   i32.store
   local.get $7
   call $~lib/array/Array<u32>#get:length
   if
    loop $for-loop|01
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load offset=4
     local.tee $7
     i32.store
     local.get $7
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.load offset=4
      local.tee $7
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $7
      local.get $1
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.tee $7
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $3
      local.get $7
      f64.load offset=16
      f64.add
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $2
      i32.const 1
      i32.add
      local.get $2
      local.get $7
      i32.load8_u offset=48
      select
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store
      local.get $0
      i32.const 1
      i32.add
      local.get $0
      local.get $7
      f64.load offset=40
      f64.const 0.9
      f64.gt
      select
      local.set $0
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|01
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=4
    local.tee $1
    i32.store offset=4
    local.get $5
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=4
    local.tee $1
    i32.store
    local.get $3
    local.get $1
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=4
    local.tee $1
    i32.store
    local.get $2
    f64.convert_i32_s
    local.get $1
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=4
    local.tee $1
    i32.store
    local.get $0
    f64.convert_i32_s
    local.get $1
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $10
    call $~lib/math/NativeMath.log10
    f64.const 6
    f64.div
    f64.const 1
    f64.min
    f64.const 0.4
    f64.mul
    local.get $3
    f64.const 0.35
    f64.mul
    f64.add
    local.get $6
    f64.const 0.25
    f64.mul
    f64.add
    f64.store offset=8
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#generateBenchmarkReport
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 35184
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 35184
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 30448
   i32.store offset=32
   local.get $4
   i32.const 30448
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=24
   local.get $1
   i32.const 35184
   local.get $2
   call $~lib/string/String.__concat
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 30448
   i32.store offset=32
   local.get $0
   i32.const 30448
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   local.get $2
   local.get $1
   local.get $0
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35312
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35312
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35408
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35408
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35504
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35504
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35616
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35616
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 35728
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 35728
   call $~lib/string/String.__concat
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/console/console.log (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/bindings/dom/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.const 197
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $1
  i32.const 13360
  i32.store offset=16
  local.get $1
  i32.const 13360
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 1e-06
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 49
  i32.const 199
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=12
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store8 offset=48
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 31744
  i32.store offset=8
  local.get $3
  i32.const 31744
  i32.store offset=8
  local.get $3
  i32.const 31744
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 32368
  i32.store offset=8
  local.get $3
  i32.const 32368
  i32.store offset=12
  local.get $3
  i32.const 32368
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $2
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $1
  i32.const 1
  i32.shl
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0.95
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0.98
  f64.store offset=40
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $2
  f64.const 100
  f64.gt
  i32.store8 offset=48
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testPerformanceMetricsCreation (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 35952
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 35952
  call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
  local.tee $1
  i32.store offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 36032
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 36032
  i32.const 20
  f64.const 5e3
  call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 36032
  i32.store offset=12
  local.get $4
  i32.const 36032
  call $~lib/string/String.__eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.load offset=4
   i32.const 20
   i32.eq
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   f64.load offset=16
   f64.const 5e3
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 31744
   i32.store offset=12
   local.get $4
   i32.const 31744
   call $~lib/string/String.__eq
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=12
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 32368
   i32.store offset=12
   local.get $4
   i32.const 32368
   call $~lib/string/String.__eq
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.load8_u offset=48
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $1
   local.get $3
   f64.load offset=16
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.const 5e3
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36080
   i32.store offset=12
   local.get $1
   i32.const 36080
   i32.store offset=16
   local.get $1
   i32.const 36080
   i32.const 0
   call $~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.get $2
  f64.sub
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $3
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.add
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    local.get $0
    local.get $2
    call $~lib/array/Array<f64>#__get
    f64.add
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  f64.div
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateStandardDeviation (param $0 i32) (param $1 f64) (result f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.le_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $2
    local.get $0
    local.get $3
    call $~lib/array/Array<f64>#__get
    local.get $1
    f64.sub
    local.tee $2
    local.get $2
    f64.mul
    f64.add
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 1
  i32.sub
  f64.convert_i32_s
  f64.div
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testPolynomialComplexityVerification (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 37120
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37120
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $1
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 32
   i32.const 37216
   call $~lib/rt/__newArray
   local.tee $12
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 3
   i32.const 7
   i32.const 37264
   call $~lib/rt/__newArray
   local.tee $13
   i32.store offset=12
   block $__inlined_func$assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testPolynomialFit$3743 (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store
    local.get $12
    call $~lib/array/Array<u32>#get:length
    local.set $14
    global.get $~lib/memory/__stack_pointer
    local.get $13
    i32.store
    local.get $13
    call $~lib/array/Array<u32>#get:length
    local.get $14
    i32.ne
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store
     local.get $12
     call $~lib/array/Array<u32>#get:length
     i32.const 2
     i32.lt_s
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     f64.const 0
     br $__inlined_func$assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testPolynomialFit$3743
    end
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store
    local.get $12
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    local.set $6
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store
     local.get $12
     call $~lib/array/Array<u32>#get:length
     local.get $3
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store
      local.get $12
      local.get $3
      call $~lib/array/Array<i32>#__get
      local.set $14
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store
      local.get $4
      local.get $12
      local.get $3
      call $~lib/array/Array<i32>#__get
      local.get $14
      i32.mul
      f64.convert_i32_s
      local.tee $7
      f64.add
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $13
      i32.store
      local.get $5
      local.get $13
      local.get $3
      call $~lib/array/Array<f64>#__get
      local.tee $8
      f64.add
      local.set $5
      local.get $9
      local.get $7
      local.get $8
      f64.mul
      f64.add
      local.set $9
      local.get $10
      local.get $7
      local.get $7
      f64.mul
      f64.add
      local.set $10
      local.get $2
      local.get $8
      local.get $8
      f64.mul
      f64.add
      local.set $2
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    local.get $9
    f64.mul
    local.get $4
    local.get $5
    f64.mul
    f64.sub
    local.get $6
    local.get $10
    f64.mul
    local.get $4
    local.get $4
    f64.mul
    f64.sub
    local.get $6
    local.get $2
    f64.mul
    local.get $5
    local.get $5
    f64.mul
    f64.sub
    f64.mul
    f64.sqrt
    f64.div
    local.tee $2
    local.get $2
    f64.mul
   end
   local.tee $2
   f64.const 0.95
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $2
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    f64.const 1
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 37328
    i32.store offset=20
    local.get $2
    call $~lib/number/F64#toString
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=24
    i32.const 37328
    local.get $3
    call $~lib/string/String.__concat
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    local.get $1
    local.get $3
    i32.store offset=16
    local.get $1
    local.get $3
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $11
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $3
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testMultipleProblemBenchmarking (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 38320
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 38320
  call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
  local.tee $1
  i32.store offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 32
  i32.const 38400
  call $~lib/rt/__newArray
  local.tee $6
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<f64>#constructor
  local.tee $5
  i32.store offset=12
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store
   local.get $6
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store
    f64.const 2
    local.get $6
    local.get $3
    call $~lib/array/Array<i32>#__get
    local.tee $4
    f64.convert_i32_s
    call $~lib/math/NativeMath.pow
    f64.const 10
    f64.div
    local.get $4
    local.get $4
    i32.mul
    f64.convert_i32_s
    f64.const 100
    f64.div
    f64.div
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $7
    call $~lib/array/Array<f64>#push
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  call $~lib/array/Array<u32>#get:length
  i32.const 3
  i32.eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 0
   call $~lib/array/Array<f64>#__get
   f64.const 10
   f64.gt
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 2
   call $~lib/array/Array<f64>#__get
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 1
   call $~lib/array/Array<f64>#__get
   local.get $7
   f64.lt
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 1
   call $~lib/array/Array<f64>#__get
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.const 0
   call $~lib/array/Array<f64>#__get
   local.get $7
   f64.lt
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   local.get $1
   local.get $5
   i32.const 2
   call $~lib/array/Array<f64>#__get
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.const 1e3
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 38432
   i32.store offset=16
   local.get $1
   i32.const 38432
   i32.store offset=16
   local.get $1
   i32.const 38432
   i32.const 0
   call $~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.get $2
  f64.sub
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $3
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.add
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#indexOf (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $4
  local.get $3
  i32.sub
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $2
    local.get $1
    local.get $3
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/string/String#includes (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/string/String#indexOf
  i32.const -1
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testBenchmarkReportGeneration (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 38736
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 38736
  call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
  local.tee $1
  i32.store offset=4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#constructor
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 38816
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 38816
  i32.const 20
  f64.const 1e3
  call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 38864
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 38864
  i32.const 15
  f64.const 5e3
  call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 38912
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 38912
  i32.const 25
  f64.const 2e3
  call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 3
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  f64.const 0.95
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#generateBenchmarkReport
  local.tee $3
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 100
  i32.gt_u
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 38960
   i32.store offset=28
   local.get $3
   i32.const 38960
   call $~lib/string/String#includes
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39008
   i32.store offset=28
   local.get $3
   i32.const 39008
   call $~lib/string/String#includes
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39056
    i32.store offset=28
    local.get $3
    i32.const 39056
    call $~lib/string/String#includes
   end
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=28
   local.get $1
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.const 500
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=28
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39104
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=40
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 10
   call $~lib/number/I32#toString
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=36
   i32.const 39104
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=28
   local.get $1
   local.get $3
   i32.store offset=16
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.get $2
  f64.sub
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $3
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=28
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 1
  i32.add
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#generateTestReport (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 60
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 40160
  i32.store
  i32.const 40160
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40288
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  i32.load offset=4
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  i32.const 40288
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40336
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  i32.load offset=8
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  i32.const 40336
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40384
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $0
  i32.load offset=4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $3
  local.get $0
  i32.load offset=8
  i32.sub
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  i32.const 40384
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40432
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $0
  i32.load offset=8
  f64.convert_i32_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $2
  local.get $0
  i32.load offset=4
  f64.convert_i32_s
  f64.div
  f64.const 100
  f64.mul
  f64.floor
  call $~lib/number/F64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=16
  i32.const 40432
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 40480
  i32.store offset=8
  local.get $3
  i32.const 40480
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40512
  i32.store
  i32.const 40512
  call $~lib/console/console.log
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $1
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.tee $3
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 40576
    i32.const 40608
    local.get $3
    i32.load8_u offset=4
    select
    local.tee $4
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    i32.const 40640
    i32.store offset=52
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=56
    i32.const 40640
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=44
    global.get $~lib/memory/__stack_pointer
    i32.const 40672
    i32.store offset=48
    local.get $4
    i32.const 40672
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=44
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load
    local.tee $5
    i32.store offset=40
    local.get $4
    local.get $5
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 40704
    i32.store offset=32
    local.get $4
    i32.const 40704
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=20
    local.get $3
    f64.load offset=8
    f64.floor
    call $~lib/number/F64#toString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=16
    local.get $4
    local.get $5
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 40736
    i32.store offset=8
    local.get $4
    i32.const 40736
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    call $~lib/console/console.log
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    i32.load8_u offset=4
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=16
     local.tee $4
     i32.store
     local.get $4
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 40768
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load offset=16
     local.tee $4
     i32.store offset=8
     i32.const 40768
     local.get $4
     call $~lib/string/String.__concat
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $4
     call $~lib/console/console.log
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    f64.load offset=24
    f64.const 0
    f64.ne
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     f64.load offset=32
     f64.const 0
     f64.ne
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 40816
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=36
     local.get $3
     f64.load offset=24
     call $~lib/number/F64#toString
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=32
     i32.const 40816
     local.get $4
     call $~lib/string/String.__concat
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 40864
     i32.store offset=16
     local.get $4
     i32.const 40864
     call $~lib/string/String.__concat
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     local.get $3
     f64.load offset=32
     call $~lib/number/F64#toString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $4
     local.get $3
     call $~lib/string/String.__concat
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     call $~lib/console/console.log
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40912
  i32.store
  i32.const 40912
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 41040
  i32.store
  i32.const 41040
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 41200
  i32.store
  i32.const 41200
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 41328
  i32.store
  i32.const 41328
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/examples/test-comprehensive-benchmark-suite/runBenchmarkTests (result i32)
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 196
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 198
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $3
   local.get $4
   i32.store
   local.get $3
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $0
   local.get $3
   i32.store
   local.get $0
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 35840
   i32.store
   i32.const 35840
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testPerformanceMetricsCreation
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 36176
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36176
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 32
   i32.const 36240
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 31744
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    i32.const 0
    call $~lib/array/Array<i32>#__get
    i32.const 10
    i32.eq
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    i32.const 2
    call $~lib/array/Array<i32>#__get
    i32.const 30
    i32.eq
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    local.get $2
    local.get $3
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 3
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 36272
    i32.store offset=16
    local.get $2
    i32.const 36272
    i32.store offset=16
    local.get $2
    i32.const 36272
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 36352
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36352
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 3
   i32.const 7
   i32.const 36416
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   local.tee $5
   f64.const -30
   f64.add
   f64.abs
   f64.const 0.001
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $5
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 30
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 36480
    i32.store offset=16
    local.get $5
    call $~lib/number/F64#toString
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=20
    i32.const 36480
    local.get $3
    call $~lib/string/String.__concat
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $2
    local.get $3
    i32.store offset=16
    local.get $2
    local.get $3
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 36560
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36560
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 3
   i32.const 7
   i32.const 36640
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $5
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateStandardDeviation
   local.tee $5
   f64.const 3
   f64.lt
   local.get $5
   f64.const 2
   f64.gt
   i32.and
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $5
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 2.58
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 36704
    i32.store offset=16
    local.get $5
    call $~lib/number/F64#toString
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=20
    i32.const 36704
    local.get $3
    call $~lib/string/String.__concat
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $2
    local.get $3
    i32.store offset=16
    local.get $2
    local.get $3
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 36816
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36816
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 3
   i32.const 7
   i32.const 36896
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 3
   i32.const 7
   i32.const 36960
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   f64.const 2
   f64.lt
   local.get $5
   f64.const 1e3
   f64.gt
   i32.and
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $5
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 2e3
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 37024
    i32.store offset=16
    local.get $2
    i32.const 37024
    i32.store offset=16
    local.get $2
    i32.const 37024
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testPolynomialComplexityVerification
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 37456
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37456
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#constructor
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.load offset=16
   i32.const 0
   i32.ge_s
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    f64.load offset=8
    f64.const 0
    f64.ge
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 1
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 1
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 37536
    i32.store offset=12
    local.get $2
    i32.const 37536
    i32.store offset=16
    local.get $2
    i32.const 37536
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 37632
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37632
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/comprehensive-benchmark-suite/ComprehensiveBenchmarkSuite#constructor
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load
   local.tee $4
   i32.store
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 5
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load
    local.tee $3
    i32.store offset=12
    local.get $2
    local.get $3
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 5
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 37712
    i32.store offset=12
    local.get $2
    i32.const 37712
    i32.store offset=16
    local.get $2
    i32.const 37712
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 37808
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37808
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   f64.const 2
   f64.const 20
   call $~lib/math/NativeMath.pow
   f64.const 2
   f64.const 10
   call $~lib/math/NativeMath.pow
   f64.div
   local.tee $5
   f64.const 1e3
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $5
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 1024
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 37872
    i32.store offset=8
    local.get $2
    i32.const 37872
    i32.store offset=16
    local.get $2
    i32.const 37872
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 37984
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 37984
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.const 1e3
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.const 1e3
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 38144
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 38144
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.const 2.25
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   f64.const 2.25
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=8
   i32.const 1
   i32.add
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testMultipleProblemBenchmarking
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 38528
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 38528
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   f64.const 1e5
   call $~lib/math/NativeMath.log10
   f64.const 6
   f64.div
   f64.const 1
   f64.min
   f64.const 0.4
   f64.mul
   f64.const 0.33599999999999997
   f64.add
   f64.const 0.25
   f64.add
   local.tee $5
   f64.const 0.8
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $5
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 0.9
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 38608
    i32.store offset=12
    local.get $5
    call $~lib/number/F64#toString
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    i32.const 38608
    local.get $3
    call $~lib/string/String.__concat
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=8
    local.get $2
    local.get $3
    i32.store offset=16
    local.get $2
    local.get $3
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#testBenchmarkReportGeneration
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 39216
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39216
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   call $assembly/examples/comprehensive-benchmark-suite/runFullValidationSuite
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 200
   i32.gt_u
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39280
    i32.store offset=12
    local.get $3
    i32.const 39280
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39328
    i32.store offset=12
    local.get $3
    i32.const 39328
    call $~lib/string/String#includes
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $2
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 2e3
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39360
    i32.store offset=12
    local.get $2
    i32.const 39360
    i32.store offset=16
    local.get $2
    i32.const 39360
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 39440
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39440
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 39504
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39504
   i32.const 1
   f64.const 10
   call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   i32.load offset=4
   i32.const 1
   i32.eq
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 39552
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39552
   i32.const 30
   f64.const 1e9
   call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
   local.tee $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $3
   i32.const 1
   i32.add
   local.get $3
   local.get $4
   f64.load offset=16
   f64.const 1e6
   f64.gt
   select
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $3
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 3
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39600
    i32.store offset=16
    local.get $2
    i32.const 39600
    i32.store offset=16
    local.get $2
    i32.const 39600
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 39712
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39712
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   f64.const 0
   f64.eq
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 3
   i32.const 7
   i32.const 39776
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $3
   i32.const 1
   i32.add
   local.get $3
   local.get $4
   local.get $5
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateStandardDeviation
   f64.const 0
   f64.eq
   local.get $5
   f64.const 42
   f64.eq
   i32.and
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 3
   i32.const 7
   i32.const 39808
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateMean
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $3
   i32.const 1
   i32.add
   local.get $3
   local.get $4
   local.get $5
   call $assembly/examples/test-comprehensive-benchmark-suite/TestStatisticalAnalyzer.testCalculateStandardDeviation
   f64.const 0
   f64.eq
   local.get $5
   f64.const 5
   f64.eq
   i32.and
   select
   local.tee $3
   i32.const 2
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $3
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 3
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 39872
    i32.store offset=20
    local.get $2
    i32.const 39872
    i32.store offset=16
    local.get $2
    i32.const 39872
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 39984
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 39984
   call $assembly/examples/test-comprehensive-benchmark-suite/TestResult#constructor
   local.tee $2
   i32.store offset=4
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 40032
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 40032
   i32.const -5
   f64.const 1e3
   call $assembly/examples/test-comprehensive-benchmark-suite/MockPerformanceMetrics#constructor
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   i32.const 2
   i32.const 1
   local.get $3
   i32.load offset=4
   i32.const -5
   i32.eq
   select
   local.tee $3
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    i32.const 1
    i32.store8 offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    local.get $3
    f64.convert_i32_s
    f64.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    f64.const 2
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    local.get $0
    i32.load offset=8
    i32.const 1
    i32.add
    i32.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 40080
    i32.store offset=12
    local.get $2
    i32.const 40080
    i32.store offset=16
    local.get $2
    i32.const 40080
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   local.get $1
   f64.sub
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $3
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/test-comprehensive-benchmark-suite/BenchmarkTestSuite#generateTestReport
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,f64>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u32>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<u32,f64>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<u32>#constructor
  local.tee $5
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 24
    i32.mul
    i32.add
    local.tee $4
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store
     local.get $5
     local.get $1
     local.get $4
     i32.load
     call $~lib/array/Array<i32>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  local.get $1
  call $~lib/array/Array<u32>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $"~lib/map/Map<u32,f64>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=16
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<u32,f64>#get" (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<u32,f64>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 41472
   i32.const 41536
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $"~lib/map/Map<u32,f64>#set" (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   i32.const 15
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   i32.const 13
   i32.shr_u
   local.get $3
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   i32.const 16
   i32.shr_u
   local.get $3
   i32.xor
   local.tee $7
   call $"~lib/map/Map<u32,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $10
        i32.load
        local.tee $11
        i32.store
        local.get $3
        local.get $10
        f64.load offset=8
        f64.store offset=8
        local.get $3
        local.get $9
        local.get $8
        local.get $11
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $11
        local.get $11
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $11
        local.get $11
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $11
        local.get $11
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=16
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 24
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,f64>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $1
  i32.const -1028477379
  i32.mul
  i32.const 374761397
  i32.add
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.tee $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  i32.const -2048144777
  i32.mul
  local.tee $0
  local.get $0
  i32.const 13
  i32.shr_u
  i32.xor
  i32.const -1028477379
  i32.mul
  local.tee $0
  local.get $0
  i32.const 16
  i32.shr_u
  i32.xor
  call $"~lib/map/Map<u32,f64>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<f64>#set:length (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.const 3
  i32.const 0
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/staticarray/StaticArray<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 3168
   i32.const 41584
   i32.const 78
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/resolang/ResonantFragment#constructor (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 85
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $4
   local.get $0
   i32.store
   local.get $4
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 3
   i32.const 7
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=4
   i32.store offset=20
   local.get $5
   i32.const 0
   local.get $1
   call $~lib/array/Array<f64>#__set
   local.get $5
   i32.const 1
   local.get $2
   call $~lib/array/Array<f64>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $~lib/array/Array<u32>#get:length
   i32.const 3
   i32.shl
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 86
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $6
   local.get $5
   i32.load offset=4
   local.get $0
   memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $4
   local.get $6
   i32.store offset=4
   local.get $4
   local.get $6
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $3
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/operators/tensor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  (local $13 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $7
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $5
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $5
     call $~lib/array/Array<u32>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $9
     i32.store offset=4
     local.get $9
     local.get $8
     call $"~lib/map/Map<u32,f64>#get"
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $8
     local.get $10
     call $"~lib/map/Map<u32,f64>#set"
     local.get $3
     local.get $10
     local.get $10
     f64.mul
     f64.add
     local.set $3
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $5
   i32.store offset=16
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $6
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $6
     call $~lib/array/Array<u32>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $8
     i32.store offset=4
     local.get $8
     local.get $7
     call $"~lib/map/Map<u32,f64>#get"
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $7
     call $"~lib/map/Map<u32,f64>#has"
     if
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      local.get $3
      local.get $4
      local.get $7
      call $"~lib/map/Map<u32,f64>#get"
      local.tee $11
      local.get $11
      f64.mul
      f64.sub
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      local.get $4
      local.get $7
      local.get $11
      local.get $10
      f64.add
      call $"~lib/map/Map<u32,f64>#set"
     else
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      local.get $4
      local.get $7
      local.get $10
      call $"~lib/map/Map<u32,f64>#set"
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $3
     local.get $4
     local.get $7
     call $"~lib/map/Map<u32,f64>#get"
     local.tee $3
     local.get $3
     f64.mul
     f64.add
     local.set $3
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|1
    end
   end
   local.get $3
   f64.sqrt
   local.tee $3
   f64.const 0
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    call $"~lib/map/Map<u32,f64>#keys"
    local.tee $6
    i32.store offset=20
    i32.const 0
    local.set $5
    loop $for-loop|2
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=4
     local.get $6
     call $~lib/array/Array<u32>#get:length
     local.get $5
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      local.get $6
      local.get $5
      call $~lib/array/Array<u32>#__get
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      local.get $4
      local.get $7
      local.get $4
      local.get $7
      call $"~lib/map/Map<u32,f64>#get"
      local.get $3
      f64.div
      call $"~lib/map/Map<u32,f64>#set"
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|2
     end
    end
   end
   f64.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.load offset=8
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=16
   local.tee $9
   call $~lib/array/Array<f64>#constructor
   local.tee $12
   i32.store offset=4
   i32.const 0
   local.set $6
   loop $for-loop|00
    local.get $6
    local.get $9
    i32.lt_s
    if
     local.get $8
     local.get $6
     i32.const 24
     i32.mul
     i32.add
     local.tee $5
     i32.load offset=16
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $12
      i32.store
      local.get $12
      local.get $2
      local.get $5
      f64.load offset=8
      call $~lib/array/Array<f64>#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store
   local.get $12
   local.get $2
   call $~lib/array/Array<f64>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $12
   i32.store offset=24
   i32.const 0
   local.set $2
   loop $for-loop|3
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store offset=4
    local.get $12
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store offset=4
     local.get $12
     local.get $2
     call $~lib/array/Array<f64>#__get
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store offset=4
     local.get $10
     local.get $12
     local.get $2
     call $~lib/array/Array<f64>#__get
     f64.mul
     local.tee $10
     f64.const 0
     f64.gt
     if
      local.get $3
      local.get $10
      local.get $10
      call $~lib/math/NativeMath.log
      f64.mul
      f64.sub
      local.set $3
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|3
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.load offset=8
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $10
   local.get $1
   f64.load offset=8
   f64.add
   local.tee $10
   f64.const 0
   f64.gt
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    f64.load offset=8
    local.get $10
    f64.div
   else
    f64.const 0.5
   end
   local.set $11
   local.get $10
   f64.const 0
   f64.gt
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    f64.load offset=8
    local.get $10
    f64.div
   else
    f64.const 0.5
   end
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   local.get $2
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $11
   f64.mul
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $2
   i32.store offset=4
   local.get $13
   local.get $2
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $10
   f64.mul
   f64.add
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $11
   f64.mul
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store offset=4
   local.get $11
   local.get $0
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   local.get $10
   f64.mul
   f64.add
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $13
   local.get $10
   local.get $3
   call $assembly/resolang/ResonantFragment#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/utils/toFixed (param $0 f64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   f64.const 10
   local.get $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.ge_s
   select
   local.tee $4
   f64.convert_i32_s
   call $~lib/math/NativeMath.pow
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $8
   f64.mul
   local.tee $0
   f64.ceil
   local.tee $6
   local.get $6
   f64.const -1
   f64.add
   local.get $6
   f64.const -0.5
   f64.add
   local.get $0
   f64.le
   select
   local.get $8
   f64.div
   call $~lib/number/F64#toString
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 41936
   i32.store offset=8
   local.get $1
   i32.const 41936
   call $~lib/string/String#indexOf
   local.tee $3
   i32.const -1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 41936
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.const 41936
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.const 1
    i32.sub
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.get $3
   i32.sub
   i32.const 1
   i32.sub
   local.tee $2
   local.get $4
   i32.lt_s
   if
    loop $for-loop|0
     local.get $2
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 13840
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.const 13840
      call $~lib/string/String.__concat
      local.tee $1
      i32.store
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
   else
    local.get $2
    local.get $4
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $3
     local.get $4
     i32.add
     i32.const 1
     i32.add
     local.tee $2
     i32.const 0
     local.get $2
     i32.const 0
     i32.gt_s
     select
     local.tee $2
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $4
     local.get $2
     local.get $4
     i32.lt_s
     select
     local.tee $2
     i32.const 0
     local.get $2
     i32.const 0
     i32.le_s
     select
     i32.const 1
     i32.shl
     local.set $3
     block $__inlined_func$~lib/string/String#substring$3964
      local.get $2
      i32.const 0
      local.get $2
      i32.const 0
      i32.ge_s
      select
      i32.const 1
      i32.shl
      local.tee $2
      local.get $3
      i32.sub
      local.tee $5
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 13360
       local.set $1
       br $__inlined_func$~lib/string/String#substring$3964
      end
      local.get $3
      i32.eqz
      local.get $2
      local.get $4
      i32.const 1
      i32.shl
      i32.eq
      i32.and
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/string/String#substring$3964
      end
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.const 2
      call $~lib/rt/itcms/__new
      local.tee $2
      i32.store offset=4
      local.get $2
      local.get $1
      local.get $3
      i32.add
      local.get $5
      memory.copy
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      local.set $1
     end
     local.get $7
     local.get $1
     i32.store
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/operators/linkEntanglement (param $0 i32) (param $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $1
  f64.load offset=16
  f64.add
  f64.const 0.5
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $6
  i32.store
  local.get $6
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=8
  local.tee $6
  i32.store
  local.get $4
  local.get $6
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  f64.min
  local.set $4
  loop $for-loop|0
   local.get $3
   f64.convert_i32_s
   local.get $4
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $6
    i32.store
    local.get $6
    local.get $3
    call $~lib/array/Array<f64>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=8
    local.tee $6
    i32.store
    local.get $2
    local.get $7
    local.get $6
    local.get $3
    call $~lib/array/Array<f64>#__get
    f64.sub
    f64.abs
    f64.add
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $5
  f64.const 1
  local.get $2
  local.get $4
  f64.div
  local.get $2
  local.get $4
  f64.const 0
  f64.gt
  select
  f64.const 6.283185307179586
  f64.div
  f64.sub
  f64.mul
  local.tee $2
  f64.const 0.75
  f64.gt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load offset=16
   local.get $2
   f64.const -0.75
   f64.add
   f64.const 5
   f64.div
   local.tee $2
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $1
   f64.load offset=16
   local.get $2
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 41872
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   i32.const 41876
   local.get $3
   i32.store
   i32.const 41872
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 41872
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=24
   i32.const 41884
   local.get $6
   i32.store
   i32.const 41872
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 41872
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   i32.const 41892
   local.get $0
   i32.store
   i32.const 41872
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 41872
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   i32.const 41900
   local.get $1
   i32.store
   i32.const 41872
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 41872
   i32.store offset=4
   i32.const 41872
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $3
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 42080
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   i32.const 42084
   local.get $0
   i32.store
   i32.const 42080
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42080
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=24
   i32.const 42092
   local.get $1
   i32.store
   i32.const 42080
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42080
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=24
   i32.const 42100
   local.get $3
   i32.store
   i32.const 42080
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42080
   i32.store offset=4
   i32.const 42080
  end
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=24
  local.get $0
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/operators/route~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/operators/route (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 60
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $9
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 42368
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=12
   local.tee $7
   i32.const 2
   i32.const 95
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.load offset=4
   local.set $11
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $4
    local.get $7
    local.get $2
    i32.load offset=12
    local.tee $12
    local.get $7
    local.get $12
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.const 2
     i32.shl
     local.tee $12
     local.get $2
     i32.load offset=4
     i32.add
     i32.load
     local.tee $13
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     i32.const 3
     global.set $~argumentsLength
     global.get $~lib/memory/__stack_pointer
     local.get $13
     local.get $4
     local.get $2
     i32.const 42368
     i32.load
     call_indirect (type $4)
     local.tee $13
     i32.store offset=16
     local.get $11
     local.get $12
     i32.add
     local.get $13
     i32.store
     local.get $8
     local.get $13
     i32.const 1
     call $~lib/rt/itcms/__link
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 42400
   i32.store offset=16
   local.get $10
   local.get $8
   i32.const 42400
   call $~lib/array/Array<~lib/string/String>#join
   local.tee $4
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 42320
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=16
   i32.const 42324
   local.get $9
   i32.store
   i32.const 42320
   local.get $9
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42320
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=16
   i32.const 42332
   local.get $6
   i32.store
   i32.const 42320
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42320
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   i32.const 42340
   local.get $4
   i32.store
   i32.const 42320
   local.get $4
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 42320
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=16
   i32.const 42320
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   i32.const 0
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/array/Array<assembly/resolang/EntangledNode>#slice@varargs$66 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.load offset=12
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.le_s
     select
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.get $6
     i32.sub
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.gt_s
     select
     local.tee $4
     i32.const 2
     i32.const 200
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $7
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     i32.load offset=4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.set $6
     i32.const 0
     local.set $2
     local.get $4
     i32.const 2
     i32.shl
     local.set $4
     loop $while-continue|0
      local.get $2
      local.get $4
      i32.lt_u
      if
       local.get $2
       local.get $8
       i32.add
       local.get $2
       local.get $6
       i32.add
       i32.load
       local.tee $9
       i32.store
       local.get $7
       local.get $9
       i32.const 1
       call $~lib/rt/itcms/__link
       local.get $2
       i32.const 4
       i32.add
       local.set $2
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     br $__inlined_func$~lib/array/Array<assembly/resolang/EntangledNode>#slice@varargs$66
    end
    br $folding-inner1
   end
   local.tee $2
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     local.get $3
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.tee $1
     i32.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=16
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $14
     local.get $1
     f64.load offset=16
     f64.add
     f64.const 0.5
     f64.mul
     local.tee $14
     f64.const 0.5
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $0
      i32.store offset=44
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load
      local.tee $1
      i32.store offset=48
      global.get $~lib/memory/__stack_pointer
      i32.const 42560
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=16
      i32.const 42564
      local.get $0
      i32.store
      i32.const 42560
      local.get $0
      i32.const 1
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      i32.const 42560
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=16
      i32.const 42572
      local.get $1
      i32.store
      i32.const 42560
      local.get $1
      i32.const 1
      call $~lib/rt/itcms/__link
      global.get $~lib/memory/__stack_pointer
      i32.const 42560
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 13360
      i32.store offset=16
      i32.const 42560
      call $~lib/staticarray/StaticArray<~lib/string/String>#join
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      local.get $0
      call $~lib/console/console.log
      global.get $~lib/memory/__stack_pointer
      i32.const 60
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $5
     f64.const 1
     local.get $14
     f64.div
     f64.const 1
     local.get $0
     f64.load offset=16
     f64.sub
     f64.const 0.5
     f64.mul
     f64.add
     f64.add
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $1
     local.tee $0
     i32.store offset=32
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $5
   local.get $2
   call $~lib/array/Array<u32>#get:length
   f64.convert_i32_s
   f64.const 2.5
   f64.mul
   f64.lt
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $0
    i32.store offset=52
    global.get $~lib/memory/__stack_pointer
    i32.const 42736
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    i32.const 42740
    local.get $0
    i32.store
    i32.const 42736
    local.get $0
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 42736
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 13360
    i32.store offset=16
    i32.const 42736
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/console/console.log
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $0
    i32.store offset=56
    global.get $~lib/memory/__stack_pointer
    i32.const 42944
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    i32.const 42948
    local.get $0
    i32.store
    i32.const 42944
    local.get $0
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 42944
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 13360
    i32.store offset=16
    i32.const 42944
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/console/console.log
    global.get $~lib/memory/__stack_pointer
    i32.const 60
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   end
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/operators/coherence (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/utils/entropyRate (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    f64.convert_i32_s
    f64.const 1
    f64.add
    f64.const 3.141592653589793
    f64.mul
    local.get $0
    call $~lib/array/Array<u32>#get:length
    f64.convert_i32_s
    f64.div
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $2
    local.get $0
    local.get $1
    call $~lib/array/Array<f64>#__get
    local.get $3
    f64.sub
    f64.const 2
    call $~lib/math/NativeMath.pow
    f64.add
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<u32>#get:length
  f64.convert_i32_s
  f64.div
  f64.sqrt
  f64.neg
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/functionalBlocks/stabilize (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  call $assembly/utils/entropyRate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/operators/coherence
  i32.const 4
  call $assembly/utils/toFixed
  local.tee $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 43168
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=20
  i32.const 43172
  local.get $3
  i32.store
  i32.const 43168
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 43168
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=20
  i32.const 43180
  local.get $4
  i32.store
  i32.const 43168
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 43168
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  i32.const 43188
  local.get $1
  i32.store
  i32.const 43168
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 43168
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=20
  i32.const 43168
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/console/console.log
  local.get $2
  f64.const -0.03
  f64.lt
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/operators/coherence
   f64.const 0.9
   f64.gt
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load offset=16
   f64.const 0.05
   f64.add
   f64.const 1
   f64.min
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   f64.load offset=16
   i32.const 4
   call $assembly/utils/toFixed
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 43328
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   i32.const 43332
   local.get $1
   i32.store
   i32.const 43328
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 43328
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   i32.const 43340
   local.get $0
   i32.store
   i32.const 43328
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 43328
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=20
   i32.const 43328
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 43504
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  i32.const 43508
  local.get $0
  i32.store
  i32.const 43504
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 43504
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=20
  i32.const 43504
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/console/console.log
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 95
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3376
   i32.const 4240
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $1
  local.get $2
  i32.store
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/serialization/JSONBuilder#constructor@varargs (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 13
    i32.const 203
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/object/Object#constructor
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8 offset=1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 44528
    i32.store offset=8
    local.get $0
    i32.const 44528
    i32.store offset=4
    local.get $0
    i32.const 44528
    i32.const 0
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 10
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    i32.const 0
    i32.store8 offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.get $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 17
   i32.const 202
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<~lib/string/String>#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.store8 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/serialization/JSONBuilder#startObject (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 44560
  i32.store offset=4
  local.get $1
  i32.const 44560
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 1
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.add
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#repeat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.set $4
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $4
   i64.extend_i32_s
   local.get $1
   i64.extend_i32_s
   i64.mul
   i64.const 268435456
   i64.gt_u
  end
  if
   i32.const 3376
   i32.const 44864
   i32.const 334
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.eqz
  local.get $1
  i32.eqz
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 13360
   return
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $4
  i32.mul
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $4
  i32.const 1
  i32.shl
  local.tee $4
  local.get $1
  i32.mul
  local.set $1
  loop $while-continue|0
   local.get $1
   local.get $2
   i32.gt_u
   if
    local.get $2
    local.get $3
    i32.add
    local.get $0
    local.get $4
    memory.copy
    local.get $2
    local.get $4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/core/serialization/JSONBuilder#addFieldInternal (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load8_u offset=16
  if
   i32.const 44672
   i32.const 44752
   i32.const 269
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load8_u offset=4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 44832
   i32.store offset=4
   local.get $3
   i32.const 44832
   call $~lib/array/Array<~lib/array/Array<i32>>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $3
  i32.store
  local.get $3
  i32.load8_u offset=1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 29664
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $4
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $4
   local.get $0
   i32.load offset=12
   call $~lib/string/String#repeat
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   i32.const 29664
   local.get $4
   call $~lib/string/String.__concat
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $3
   local.get $4
   call $~lib/array/Array<~lib/array/Array<i32>>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 44912
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  call $assembly/core/serialization/escapeJSON
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  i32.const 44912
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 44944
  i32.store offset=12
  local.get $1
  i32.const 44944
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  i32.load8_u offset=1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 44976
   i32.store offset=4
   local.get $1
   i32.const 44976
   call $~lib/array/Array<~lib/array/Array<i32>>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#addNumberField (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  block $__inlined_func$assembly/core/serialization/serializeNumber$1640 (result i32)
   i32.const 44640
   local.get $2
   local.get $2
   f64.ne
   br_if $__inlined_func$assembly/core/serialization/serializeNumber$1640
   drop
   i32.const 44640
   local.get $2
   local.get $2
   f64.sub
   f64.const 0
   f64.ne
   br_if $__inlined_func$assembly/core/serialization/serializeNumber$1640
   drop
   local.get $2
   call $~lib/number/F64#toString
  end
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $3
  call $assembly/core/serialization/JSONBuilder#addFieldInternal
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#addRawField (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/serialization/JSONBuilder#addFieldInternal
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#endObject (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store
  local.get $1
  i32.load8_u offset=1
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load8_u offset=4
  else
   i32.const 1
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 29664
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   local.get $2
   local.get $0
   i32.load offset=12
   call $~lib/string/String#repeat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 29664
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   call $~lib/array/Array<~lib/array/Array<i32>>#push
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 45136
  i32.store offset=4
  local.get $1
  i32.const 45136
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store8 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/serialization/JSONBuilder#build (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=4
  local.get $0
  i32.const 13360
  call $~lib/array/Array<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/resolang/ResonantFragment#toJSON (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 48
  memory.fill
  i32.const 0
  global.set $~argumentsLength
  global.get $~lib/memory/__stack_pointer
  call $assembly/core/serialization/JSONBuilder#constructor@varargs
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=12
  local.get $2
  call $assembly/core/serialization/JSONBuilder#startObject
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 44592
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $1
  i32.const 44592
  local.get $0
  f64.load offset=8
  call $assembly/core/serialization/JSONBuilder#addNumberField
  drop
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.const 0
  call $~lib/staticarray/StaticArray<f64>#__get
  call $~lib/number/F64#toString
  local.tee $5
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $6
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  call $~lib/staticarray/StaticArray<f64>#__get
  call $~lib/number/F64#toString
  local.tee $6
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 45008
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=8
  i32.const 45012
  local.get $5
  i32.store
  i32.const 45008
  local.get $5
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 45008
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  i32.const 45020
  local.get $6
  i32.store
  i32.const 45008
  local.get $6
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 45008
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $1
  i32.const 45008
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.tee $1
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45056
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $2
  i32.const 45056
  local.get $1
  call $assembly/core/serialization/JSONBuilder#addRawField
  drop
  i32.const 44560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 44560
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $5
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $6
  i32.store offset=32
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   call $~lib/array/Array<u32>#get:length
   local.get $3
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    local.get $6
    local.get $3
    call $~lib/array/Array<u32>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    local.get $5
    call $"~lib/map/Map<u32,f64>#get"
    local.set $4
    local.get $3
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store offset=28
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $5
    call $~lib/number/U32#toString
    local.tee $8
    i32.store offset=36
    global.get $~lib/memory/__stack_pointer
    local.get $4
    call $~lib/number/F64#toString
    local.tee $5
    i32.store offset=40
    global.get $~lib/memory/__stack_pointer
    i32.const 45088
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=44
    i32.const 45092
    local.get $8
    i32.store
    i32.const 45088
    local.get $8
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 45088
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=44
    i32.const 45100
    local.get $5
    i32.store
    i32.const 45088
    local.get $5
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 45088
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 13360
    i32.store offset=44
    i32.const 45088
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $7
    local.get $1
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store offset=28
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45136
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 45136
  call $~lib/string/String.__concat
  local.tee $0
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 45168
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=44
  local.get $2
  i32.const 45168
  local.get $0
  call $assembly/core/serialization/JSONBuilder#addRawField
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  call $assembly/core/serialization/JSONBuilder#endObject
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  call $assembly/core/serialization/JSONBuilder#build
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/functionalBlocks/teleport (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 48
    memory.fill
    global.get $assembly/resolang/currentNode
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 43536
     i32.store
     i32.const 43536
     call $~lib/console/console.log
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/resolang/currentNode
    local.tee $2
    i32.store offset=4
    local.get $2
    i32.eqz
    if
     i32.const 43680
     i32.const 43808
     i32.const 50
     i32.const 34
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $assembly/operators/coherence
    f64.const 0.8
    f64.gt
    local.tee $2
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     call $assembly/operators/coherence
     f64.const 0.8
     f64.gt
     local.set $2
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    f64.load offset=8
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $3
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/resolang/currentNode
    local.tee $5
    i32.store offset=16
    local.get $5
    i32.eqz
    if
     i32.const 43680
     i32.const 43808
     i32.const 52
     i32.const 98
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $4
    local.get $5
    i32.load
    local.tee $4
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $5
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    i32.const 44240
    i32.const 44272
    local.get $2
    select
    local.tee $6
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    call $assembly/operators/coherence
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $7
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=36
    i32.const 44180
    local.get $3
    i32.store
    i32.const 44176
    local.get $3
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=36
    i32.const 44188
    local.get $4
    i32.store
    i32.const 44176
    local.get $4
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=36
    i32.const 44196
    local.get $5
    i32.store
    i32.const 44176
    local.get $5
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=36
    i32.const 44204
    local.get $6
    i32.store
    i32.const 44176
    local.get $6
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=36
    i32.const 44212
    local.get $7
    i32.store
    i32.const 44176
    local.get $7
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 44176
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 13360
    i32.store offset=36
    i32.const 44176
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    call $~lib/console/console.log
    local.get $2
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     call $assembly/operators/coherence
     f64.const 0.85
     f64.gt
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/resolang/ResonantFragment#toJSON
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     local.get $0
     i32.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $1
     i32.store offset=44
     global.get $~lib/memory/__stack_pointer
     i32.const 44480
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=36
     i32.const 44484
     local.get $0
     i32.store
     i32.const 44480
     local.get $0
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 44480
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=36
     i32.const 44492
     local.get $1
     i32.store
     i32.const 44480
     local.get $1
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 44480
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 13360
     i32.store offset=36
     i32.const 44480
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $~lib/console/console.log
     global.get $~lib/memory/__stack_pointer
     i32.const 48
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 45200
    i32.store
    i32.const 45200
    call $~lib/console/console.log
    br $folding-inner1
   end
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#clear" (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  loop $while-continue|0
   local.get $2
   if
    local.get $2
    i32.load offset=16
    local.tee $0
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $0
    i32.const -2
    i32.and
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#set" (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $7
   call $"~lib/map/Map<~lib/string/String,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load
        local.tee $11
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $11
        i32.store
        local.get $3
        local.get $10
        f64.load offset=8
        f64.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $9
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $8
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=16
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 24
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/Quaternion#norm (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=16
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/Quaternion#constructor (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 205
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $2
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $3
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/quaternion/Quaternion#normalize (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  local.tee $1
  f64.const 1e-10
  f64.lt
  if
   f64.const 1
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.get $1
  f64.div
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.get $1
  f64.div
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.get $1
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $3
  local.get $4
  local.get $0
  f64.load offset=24
  local.get $1
  f64.div
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion-entanglement/QuaternionicAgent#encodeMessage (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $5
  i32.store
  local.get $5
  call $"~lib/map/Map<~lib/string/String,f64>#clear"
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $2
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if (result f64)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     f64.const 1
     f64.const 0
     local.get $1
     local.get $2
     call $~lib/string/String#charCodeAt
     i32.const 49
     i32.eq
     select
    else
     f64.const 0
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.tee $5
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if (result f64)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     f64.const 1
     f64.const 0
     local.get $1
     local.get $5
     call $~lib/string/String#charCodeAt
     i32.const 49
     i32.eq
     select
    else
     f64.const 0
    end
    local.set $4
    local.get $2
    i32.const 2
    i32.div_s
    local.tee $5
    if
     local.get $5
     i32.const 1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $6
      i32.store
      local.get $6
      local.get $3
      f64.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $6
      i32.store
      local.get $6
      local.get $4
      f64.store offset=24
     end
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $6
     i32.store
     local.get $6
     local.get $3
     f64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $6
     i32.store
     local.get $6
     local.get $4
     f64.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=16
    local.tee $6
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 45680
    i32.store offset=8
    local.get $5
    i32.const 10
    call $~lib/number/I32#toString
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=12
    i32.const 45680
    local.get $5
    call $~lib/string/String#concat
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $6
    local.get $5
    local.get $3
    local.get $3
    f64.add
    local.get $4
    f64.add
    call $"~lib/map/Map<~lib/string/String,f64>#set"
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=8
  local.get $1
  call $assembly/quaternion/Quaternion#normalize
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float64Array#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 208
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 3
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 134217727
   i32.gt_u
   if
    i32.const 3376
    i32.const 3424
    i32.const 19
    i32.const 57
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 3
   i32.shl
   local.tee $0
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   local.get $1
   local.get $3
   i32.store
   local.get $1
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Float64Array#__set (param $0 i32) (param $1 i32) (param $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 3168
   i32.const 45712
   i32.const 1457
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 212
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  local.get $2
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  i32.const 9
  call $~lib/typedarray/Float64Array#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store offset=16
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   i32.const 9
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load offset=16
    local.tee $1
    i32.store offset=4
    local.get $1
    local.get $0
    call $~lib/math/NativeMath.random
    f64.const -0.5
    f64.add
    f64.const 0.1
    f64.mul
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $3
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=8
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=16
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $4
  local.get $3
  f64.load offset=24
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $3
  f64.load
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $5
  local.get $3
  f64.load offset=8
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $3
  f64.load offset=16
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $3
  i32.store
  local.get $4
  local.get $5
  local.get $3
  f64.load offset=16
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $2
  local.get $4
  local.get $5
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.mul
  f64.abs
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion/Quaternion#toBlochVector (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/quaternion/Quaternion#normalize
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 0
  local.get $1
  f64.load offset=8
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 1
  local.get $1
  f64.load offset=16
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 2
  local.get $1
  f64.load offset=24
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Float64Array#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 3168
   i32.const 45712
   i32.const 1446
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion/Quaternion#rotate (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  f64.const 0.5
  f64.mul
  local.tee $1
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load offset=8
  local.get $3
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load offset=16
  local.get $3
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $4
  local.get $5
  local.get $1
  local.get $0
  f64.load offset=24
  local.get $3
  f64.mul
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  call $assembly/quaternion/Quaternion#normalize
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#exp (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load offset=8
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=16
  f64.mul
  f64.add
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  call $~lib/math/NativeMath.exp
  local.set $2
  local.get $1
  f64.const 1e-10
  f64.lt
  if
   local.get $2
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  local.get $2
  local.get $1
  call $~lib/math/NativeMath.sin
  f64.mul
  local.get $1
  f64.div
  local.set $3
  local.get $2
  local.get $1
  call $~lib/math/NativeMath.cos
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  f64.load offset=8
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  f64.load offset=16
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $1
  local.get $4
  local.get $3
  local.get $0
  f64.load offset=24
  f64.mul
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#multiply (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=16
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=24
  f64.mul
  f64.sub
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load
  f64.mul
  f64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $4
  local.get $1
  f64.load offset=16
  f64.mul
  f64.sub
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $1
  f64.load offset=16
  f64.mul
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load offset=24
  f64.mul
  f64.sub
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $5
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $1
  f64.load offset=24
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $6
  local.get $1
  f64.load offset=16
  f64.mul
  f64.add
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $5
  local.get $6
  local.get $1
  f64.load offset=8
  f64.mul
  f64.sub
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  local.get $1
  f64.load
  f64.mul
  f64.add
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#conjugate (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  f64.neg
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  f64.neg
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $3
  local.get $0
  f64.load offset=24
  f64.neg
  call $assembly/quaternion/Quaternion#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve (param $0 i32) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/quaternion/Quaternion#toBlochVector
  local.tee $4
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/quaternion/Quaternion#toBlochVector
  local.tee $5
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6.283185307179586
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $5
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6.283185307179586
  f64.mul
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=16
  local.get $2
  local.get $6
  local.get $1
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=16
  local.get $2
  local.get $8
  local.get $1
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $6
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store
  local.get $6
  local.get $5
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=16
  local.get $2
  local.get $6
  local.get $1
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=16
  local.get $2
  local.get $6
  f64.neg
  local.get $1
  f64.mul
  call $assembly/quaternion/Quaternion#rotate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  loop $for-loop|0
   local.get $3
   i32.const 3
   i32.lt_s
   if
    i32.const 0
    local.set $2
    loop $for-loop|1
     local.get $2
     i32.const 3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=16
      local.tee $7
      i32.store
      local.get $7
      local.get $3
      i32.const 3
      i32.mul
      local.get $2
      i32.add
      call $~lib/typedarray/Float64Array#__get
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $6
      local.get $4
      local.get $3
      call $~lib/typedarray/Float64Array#__get
      f64.mul
      local.set $6
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $6
      local.get $5
      local.get $2
      call $~lib/typedarray/Float64Array#__get
      f64.mul
      local.get $1
      f64.mul
      local.tee $6
      f64.abs
      f64.const 1e-10
      f64.gt
      if
       global.get $~lib/memory/__stack_pointer
       f64.const 0
       f64.const 0
       local.get $6
       local.get $3
       select
       local.get $6
       f64.const 0
       local.get $3
       i32.const 1
       i32.eq
       select
       local.get $6
       f64.const 0
       local.get $3
       i32.const 2
       i32.eq
       select
       call $assembly/quaternion/Quaternion#constructor
       local.tee $9
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $7
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=28
       local.get $9
       call $assembly/quaternion/Quaternion#exp
       local.set $10
       global.get $~lib/memory/__stack_pointer
       local.get $10
       i32.store offset=20
       local.get $7
       local.get $10
       call $assembly/quaternion/Quaternion#multiply
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=4
       local.get $0
       local.get $7
       i32.store
       local.get $0
       local.get $7
       i32.const 0
       call $~lib/rt/itcms/__link
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=32
       local.get $9
       call $assembly/quaternion/Quaternion#conjugate
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=28
       local.get $9
       call $assembly/quaternion/Quaternion#exp
       local.set $9
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=20
       local.get $7
       local.get $9
       call $assembly/quaternion/Quaternion#multiply
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=4
       local.get $0
       local.get $7
       i32.store offset=4
       local.get $0
       local.get $7
       i32.const 0
       call $~lib/rt/itcms/__link
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=16
  local.get $2
  call $assembly/quaternion/Quaternion#normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=16
  local.get $2
  call $assembly/quaternion/Quaternion#normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion-entanglement/EntangledQuaternionPair#optimizeEntanglement (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  loop $for-loop|0
   local.get $2
   local.get $5
   i32.gt_s
   if
    block $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     f64.const 0.95
     f64.gt
     br_if $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const 1e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.const 0.01
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const -2e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.const 0.01
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     f64.const 1e-06
     f64.add
     f64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     local.get $0
     f64.load offset=8
     local.get $4
     local.get $6
     f64.sub
     f64.const 2e-06
     f64.div
     f64.const 0.01
     f64.mul
     f64.add
     f64.store offset=8
     i32.const 0
     local.set $3
     loop $for-loop|1
      local.get $3
      i32.const 9
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $8
       i32.store offset=4
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       f64.const 0.01
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       local.get $0
       local.get $1
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $8
       i32.store offset=4
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const -2e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       f64.const 0.01
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       local.get $0
       local.get $1
       call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $8
       i32.store offset=4
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=16
       local.tee $8
       i32.store offset=4
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       local.get $4
       local.get $6
       f64.sub
       f64.const 2e-06
       f64.div
       f64.const 0.01
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|1
      end
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion-entanglement/QuaternionicAgent#entangleWith (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.get $3
  f64.const 0.5
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=8
  local.get $0
  call $assembly/quaternion/Quaternion#normalize
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $1
  i32.store offset=8
  local.get $1
  call $assembly/quaternion/Quaternion#normalize
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $0
  local.get $1
  f64.const 1
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
  local.tee $0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $2
  local.get $0
  i32.const 100
  call $assembly/quaternion-entanglement/EntangledQuaternionPair#optimizeEntanglement
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,f64>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion-entanglement/QuaternionicSynchronizer#measurePhaseDifference (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $0
  call $assembly/quaternion/Quaternion#conjugate
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $0
  local.get $1
  call $assembly/quaternion/Quaternion#multiply
  local.tee $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $4
  local.get $0
  f64.load offset=16
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $4
  local.get $0
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  f64.load
  call $~lib/math/NativeMath.atan2
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#get" (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,f64>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 41472
   i32.const 41536
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion-entanglement/QuaternionicSynchronizer#synchronize (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $7
  local.get $3
  call $"~lib/map/Map<~lib/string/String,f64>#has"
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $7
   local.get $3
   f64.const 0.1
   call $"~lib/map/Map<~lib/string/String,f64>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $7
  local.get $4
  call $"~lib/map/Map<~lib/string/String,f64>#has"
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $7
   local.get $4
   f64.const 0.1
   call $"~lib/map/Map<~lib/string/String,f64>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $6
  local.get $5
  local.get $1
  local.get $2
  call $assembly/quaternion-entanglement/QuaternionicSynchronizer#measurePhaseDifference
  f64.sub
  local.tee $5
  f64.abs
  f64.gt
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $7
  local.get $3
  call $"~lib/map/Map<~lib/string/String,f64>#get"
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $7
  local.get $4
  call $"~lib/map/Map<~lib/string/String,f64>#get"
  local.set $8
  global.get $~lib/memory/__stack_pointer
  f64.const 0
  local.get $6
  local.get $5
  f64.mul
  f64.const 0
  f64.const 0
  call $assembly/quaternion/Quaternion#constructor
  local.tee $9
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  f64.const 0
  local.get $8
  f64.neg
  local.get $5
  f64.mul
  f64.const 0
  f64.const 0
  call $assembly/quaternion/Quaternion#constructor
  local.tee $10
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=8
  local.get $9
  call $assembly/quaternion/Quaternion#exp
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $9
  i32.store offset=4
  local.get $7
  local.get $1
  local.get $9
  call $assembly/quaternion/Quaternion#multiply
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store offset=8
  local.get $10
  call $assembly/quaternion/Quaternion#exp
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $1
  local.get $2
  local.get $7
  call $assembly/quaternion/Quaternion#multiply
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $6
  local.get $0
  f64.load offset=16
  local.get $5
  f64.abs
  f64.mul
  f64.const 1
  f64.add
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $8
  local.get $0
  f64.load offset=16
  local.get $5
  f64.abs
  f64.mul
  f64.const 1
  f64.add
  f64.mul
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $1
  local.get $3
  local.get $6
  f64.const 1
  f64.min
  call $"~lib/map/Map<~lib/string/String,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $0
  local.get $4
  local.get $5
  f64.const 1
  f64.min
  call $"~lib/map/Map<~lib/string/String,f64>#set"
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion-entanglement/QuaternionicSynchronizer#runAdaptiveSynchronization (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 213
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $4
   i32.const 0
   local.get $1
   i32.load
   call $~lib/array/Array<~lib/array/Array<f64>>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $4
   i32.const 1
   local.get $1
   i32.load offset=4
   call $~lib/array/Array<~lib/array/Array<f64>>#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $4
   i32.store offset=4
   loop $for-loop|0
    local.get $2
    local.get $6
    i32.gt_s
    if
     block $for-break0
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $1
      local.get $3
      call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=24
      local.get $4
      i32.const 0
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=24
      local.get $4
      i32.const 1
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      i32.const 45776
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 45808
      i32.store offset=20
      local.get $0
      local.get $5
      local.get $7
      i32.const 45776
      i32.const 45808
      f64.const 0
      f64.const 0.01
      call $assembly/quaternion-entanglement/QuaternionicSynchronizer#synchronize
      local.tee $5
      br_if $for-break0
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/TwistDynamics#evolve (param $0 i32) (param $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  call $~lib/math/NativeMath.random
  f64.const -0.5
  f64.add
  f64.const 2
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  f64.load offset=24
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $4
  local.get $2
  local.get $0
  f64.load
  f64.const 2
  f64.mul
  call $~lib/math/NativeMath.sin
  f64.mul
  f64.add
  local.get $3
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  f64.load
  local.get $2
  local.get $1
  f64.mul
  f64.add
  f64.store
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load
   f64.const 6.283185307179586
   f64.gt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    f64.load
    f64.const -6.283185307179586
    f64.add
    f64.store
    br $while-continue|0
   end
  end
  loop $while-continue|1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load
   f64.const 0
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    f64.load
    f64.const 6.283185307179586
    f64.add
    f64.store
    br $while-continue|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion/TwistDynamics#checkCollapse (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  f64.lt
  local.get $3
  local.get $0
  f64.load
  f64.const 1.5707963267948966
  call $~lib/math/NativeMath.mod
  f64.abs
  f64.gt
  i32.and
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/QuaternionicProjector#project (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  call $~lib/typedarray/Float64Array#constructor
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  i32.const 0
  local.get $1
  f64.load offset=8
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 1
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  f64.load offset=16
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.load offset=24
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $4
  local.get $3
  local.get $5
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  f64.sqrt
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  i32.const 0
  local.get $4
  local.get $3
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  i32.const 1
  local.get $4
  local.get $3
  local.get $1
  f64.load offset=16
  f64.neg
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion-entanglement/QuaternionicAgent#applySymbolicCollapse (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 3
   i32.const 7
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $6
   i32.store offset=8
   local.get $4
   i32.const 0
   local.get $6
   f64.load
   call $~lib/array/Array<f64>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $6
   i32.store offset=8
   local.get $4
   i32.const 1
   local.get $6
   f64.load offset=8
   call $~lib/array/Array<f64>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $6
   i32.store offset=8
   local.get $4
   i32.const 2
   local.get $6
   f64.load offset=16
   call $~lib/array/Array<f64>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $6
   i32.store offset=8
   local.get $4
   i32.const 3
   local.get $6
   f64.load offset=24
   call $~lib/array/Array<f64>#__set
   local.get $5
   local.get $4
   i32.store offset=16
   loop $for-loop|0
    local.get $3
    i32.const 4
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $4
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $7
     local.get $4
     local.get $3
     call $~lib/array/Array<f64>#__get
     f64.mul
     local.tee $7
     f64.const 1e-10
     f64.gt
     if
      local.get $2
      local.get $7
      local.get $7
      call $~lib/math/NativeMath.log
      f64.mul
      f64.sub
      local.set $2
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store
   local.get $3
   f64.const 0.01
   call $assembly/quaternion/TwistDynamics#evolve
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store
   local.get $3
   local.get $2
   local.get $1
   f64.const 0.1
   call $assembly/quaternion/TwistDynamics#checkCollapse
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=12
    local.tee $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $4
    call $assembly/quaternion/QuaternionicProjector#project
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $3
    f64.load
    f64.abs
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $1
    local.get $3
    f64.load offset=8
    f64.abs
    f64.max
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $3
    f64.load offset=16
    f64.abs
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $1
    local.get $2
    local.get $3
    f64.load offset=24
    f64.abs
    f64.max
    f64.max
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $1
    local.get $3
    f64.load
    f64.abs
    f64.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     f64.const 1
     f64.const 0
     f64.const 0
     f64.const 0
     call $assembly/quaternion/Quaternion#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $0
     local.get $3
     i32.store
     local.get $0
     local.get $3
     i32.const 0
     call $~lib/rt/itcms/__link
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $1
     local.get $3
     f64.load offset=8
     f64.abs
     f64.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      f64.const 0
      f64.const 1
      f64.const 0
      f64.const 0
      call $assembly/quaternion/Quaternion#constructor
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $0
      local.get $3
      i32.store
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $3
      i32.store
      local.get $1
      local.get $3
      f64.load offset=16
      f64.abs
      f64.eq
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       f64.const 0
       f64.const 0
       f64.const 1
       f64.const 0
       call $assembly/quaternion/Quaternion#constructor
      else
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       f64.const 0
       f64.const 0
       f64.const 0
       f64.const 1
       call $assembly/quaternion/Quaternion#constructor
      end
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $0
      local.get $3
      i32.store
     end
     local.get $0
     local.get $3
     i32.const 0
     call $~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion-entanglement/QuaternionicAgent#decodeMessage (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45840
  i32.const 13840
  local.get $1
  f64.load
  f64.abs
  f64.const 0.5
  f64.gt
  select
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45840
  i32.const 13840
  local.get $2
  f64.load offset=8
  f64.abs
  f64.const 0.5
  f64.gt
  select
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=24
  local.get $1
  local.get $2
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  i32.const 13360
  local.get $1
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45840
  i32.const 13840
  local.get $2
  f64.load offset=16
  f64.abs
  f64.const 0.5
  f64.gt
  select
  local.tee $2
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45840
  i32.const 13840
  local.get $0
  f64.load offset=24
  f64.abs
  f64.const 0.5
  f64.gt
  select
  local.tee $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=24
  local.get $2
  local.get $0
  call $~lib/string/String.__concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $1
  local.get $0
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#constructor" (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 96
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 4
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,f64>#constructor"
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,f64>#constructor"
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=12
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<u32,f64>#constructor"
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=16
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   call $"~lib/map/Map<u32,f64>#constructor"
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=20
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 0
   call $~lib/array/Array<f64>#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=24
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0.1
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 50
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<~lib/string/String,f64>#keys" (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $4
  i32.store offset=4
  loop $for-loop|0
   local.get $0
   local.get $2
   i32.gt_s
   if
    local.get $3
    local.get $2
    i32.const 24
    i32.mul
    i32.add
    local.tee $5
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $5
     i32.store offset=8
     local.get $4
     local.get $1
     local.get $5
     call $~lib/array/Array<~lib/array/Array<f64>>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  local.get $1
  call $~lib/array/Array<u32>#set:length
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/entropy-viz/EntropyFieldSampler#exportData (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 60
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 44560
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 44560
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 46032
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=28
  local.get $3
  f64.load
  call $~lib/number/F64#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  i32.const 46032
  local.get $3
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 44832
  i32.store offset=16
  local.get $3
  i32.const 44832
  call $~lib/string/String.__concat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $1
  i32.const 44560
  local.get $3
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46080
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46080
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.load offset=8
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<~lib/string/String,f64>#keys"
  local.tee $3
  i32.store offset=36
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.tee $4
    i32.store offset=40
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 44912
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    i32.const 44912
    local.get $4
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 44944
    i32.store offset=24
    local.get $6
    i32.const 44944
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=8
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $7
    local.get $4
    call $"~lib/map/Map<~lib/string/String,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46128
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46128
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46160
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46160
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=12
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<~lib/string/String,f64>#keys"
  local.tee $3
  i32.store offset=44
  i32.const 0
  local.set $2
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.tee $4
    i32.store offset=48
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 44912
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=32
    i32.const 44912
    local.get $4
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 44944
    i32.store offset=24
    local.get $6
    i32.const 44944
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=12
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $7
    local.get $4
    call $"~lib/map/Map<~lib/string/String,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46128
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46128
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46208
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46208
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=16
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=52
  i32.const 0
  local.set $2
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 44912
    i32.store offset=28
    local.get $4
    call $~lib/number/U32#toString
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=32
    i32.const 44912
    local.get $6
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 44944
    i32.store offset=24
    local.get $6
    i32.const 44944
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=16
    local.tee $7
    i32.store offset=20
    local.get $7
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46128
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46128
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46256
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46256
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=20
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=56
  i32.const 0
  local.set $2
  loop $for-loop|3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 44912
    i32.store offset=28
    local.get $4
    call $~lib/number/U32#toString
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=32
    i32.const 44912
    local.get $6
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 44944
    i32.store offset=24
    local.get $6
    i32.const 44944
    call $~lib/string/String.__concat
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $7
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.load offset=20
    local.tee $7
    i32.store offset=20
    local.get $7
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=16
    local.get $6
    local.get $4
    call $~lib/string/String.__concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $5
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46128
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46128
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 46320
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 46320
  call $~lib/string/String.__concat
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=24
   local.tee $3
   i32.store offset=4
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $2
   i32.gt_s
   if
    local.get $2
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 44832
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 44832
     call $~lib/string/String.__concat
     local.tee $1
     i32.store
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=24
    local.tee $4
    i32.store offset=12
    local.get $4
    local.get $2
    call $~lib/array/Array<f64>#__get
    call $~lib/number/F64#toString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=8
    local.get $3
    local.get $1
    local.get $4
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|4
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 42288
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 42288
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 45136
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 45136
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/exportEntropyData (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  call $assembly/entropy-viz/getGlobalSampler
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/entropy-viz/EntropyFieldSampler#exportData
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/exportEntropyHistory (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   call $assembly/entropy-viz/getGlobalTracker
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   i32.const 40640
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 40640
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load
    local.tee $3
    i32.store offset=4
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     local.get $1
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 44832
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.const 44832
      call $~lib/string/String.__concat
      local.tee $0
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 46368
     i32.store offset=20
     local.get $1
     i32.const 10
     call $~lib/number/I32#toString
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=24
     i32.const 46368
     local.get $4
     call $~lib/string/String.__concat
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 45136
     i32.store offset=16
     local.get $4
     i32.const 45136
     call $~lib/string/String.__concat
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $3
     local.get $0
     local.get $4
     call $~lib/string/String.__concat
     local.tee $0
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 42288
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 42288
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<assembly/core/object-pool/PoolableExtendedGCDResult>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   i32.const 46576
   i32.const 4240
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/math-extended-gcd/extendedGCD (param $0 i64) (param $1 i64) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$assembly/core/math-extended-gcd/extendedGCDPooled$92 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/core/object-pool/MathObjectPools.extendedGCDPool
     local.tee $9
     i32.store offset=4
     local.get $9
     i32.eqz
     if
      i32.const 43680
      i32.const 46480
      i32.const 35
      i32.const 18
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.load
     local.tee $10
     i32.store
     block $__inlined_func$assembly/core/object-pool/ObjectPool<assembly/core/object-pool/PoolableExtendedGCDResult>#acquire$3773 (result i32)
      local.get $10
      call $~lib/array/Array<u32>#get:length
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.load
       local.tee $9
       i32.store
       local.get $9
       call $~lib/array/Array<assembly/core/object-pool/PoolableExtendedGCDResult>#pop
       br $__inlined_func$assembly/core/object-pool/ObjectPool<assembly/core/object-pool/PoolableExtendedGCDResult>#acquire$3773
      end
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=4
      local.get $9
      local.get $9
      i32.load offset=12
      i32.const 1
      i32.add
      i32.store offset=12
      i32.const 0
      global.set $~argumentsLength
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store
      local.get $9
      i32.load offset=4
      i32.load
      call_indirect (type $1)
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     local.get $9
     i32.store offset=8
     local.get $0
     local.set $2
     i64.const 1
     local.set $4
     i64.const 1
     local.set $6
     loop $while-continue|0
      local.get $1
      i64.const 0
      i64.ne
      if
       local.get $2
       local.get $1
       local.get $2
       local.get $1
       local.tee $0
       i64.div_s
       local.tee $8
       i64.mul
       i64.sub
       local.set $1
       local.get $0
       local.set $2
       local.get $4
       local.get $5
       local.tee $0
       local.get $8
       i64.mul
       i64.sub
       local.set $5
       local.get $0
       local.set $4
       local.get $3
       local.get $6
       local.tee $0
       local.get $8
       i64.mul
       i64.sub
       local.set $6
       local.get $0
       local.set $3
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store
     local.get $9
     local.get $2
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store
     local.get $9
     local.get $4
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store
     local.get $9
     local.get $3
     i64.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $9
     br $__inlined_func$assembly/core/math-extended-gcd/extendedGCDPooled$92
    end
    br $folding-inner1
   end
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   local.get $7
   i64.load offset=16
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 225
   call $~lib/rt/itcms/__new
   local.tee $10
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   local.get $10
   local.get $0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   local.get $10
   local.get $1
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=4
   local.get $10
   local.get $2
   i64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   local.get $10
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/object-pool/MathObjectPools.extendedGCDPool
   local.tee $9
   i32.store offset=16
   local.get $9
   i32.eqz
   if
    i32.const 43680
    i32.const 46480
    i32.const 27
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.load
   local.tee $11
   i32.store
   local.get $11
   call $~lib/array/Array<u32>#get:length
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   local.get $11
   local.get $9
   i32.load offset=8
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    i64.const 0
    i64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store
    local.get $7
    i64.const 0
    i64.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $9
    i32.load
    local.tee $9
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $9
    local.get $7
    call $~lib/array/Array<~lib/array/Array<i32>>#push
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-montgomery/MontgomeryContext#constructor (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 224
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  i64.store
  loop $while-continue|0
   local.get $0
   i64.const 0
   i64.ne
   if
    local.get $0
    i64.const 1
    i64.shr_u
    local.set $0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.const 1
  local.get $5
  i64.extend_i32_s
  i64.shl
  local.tee $2
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.load offset=8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i64.load
  call $assembly/core/math-extended-gcd/extendedGCD
  local.tee $5
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=12
  local.get $5
  i64.load offset=8
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  i64.load
  i64.add
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  local.get $0
  local.get $1
  i64.load
  i64.rem_s
  i64.store offset=16
  i64.const 1
  local.set $4
  i64.const 0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i64.load
  local.tee $6
  local.set $3
  loop $while-continue|01
   local.get $3
   i64.const 0
   i64.ne
   if
    loop $while-continue|1
     local.get $3
     i64.const 1
     i64.and
     i64.eqz
     if
      local.get $3
      i64.const 1
      i64.shr_u
      local.set $3
      local.get $4
      i64.const 1
      i64.shr_u
      local.get $2
      local.get $4
      i64.add
      i64.const 1
      i64.shr_u
      local.get $4
      i64.const 1
      i64.and
      i64.eqz
      select
      local.set $4
      br $while-continue|1
     end
    end
    loop $while-continue|2
     local.get $2
     i64.const 1
     i64.and
     i64.eqz
     if
      local.get $2
      i64.const 1
      i64.shr_u
      local.set $2
      local.get $0
      i64.const 1
      i64.shr_u
      local.get $0
      local.get $6
      i64.add
      i64.const 1
      i64.shr_u
      local.get $0
      i64.const 1
      i64.and
      i64.eqz
      select
      local.set $0
      br $while-continue|2
     end
    end
    local.get $2
    local.get $3
    i64.le_u
    if
     local.get $3
     local.get $2
     i64.sub
     local.set $3
     local.get $4
     local.get $0
     i64.sub
     local.set $4
    else
     local.get $2
     local.get $3
     i64.sub
     local.set $2
     local.get $0
     local.get $4
     i64.sub
     local.set $0
    end
    br $while-continue|01
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  i64.load offset=8
  local.get $0
  i64.sub
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  local.get $0
  local.get $1
  i64.load offset=8
  i64.const 1
  i64.sub
  i64.and
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/math-montgomery/MontgomeryContext#addMod (param $0 i32) (param $1 i64) (param $2 i64) (result i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  i64.add
  local.tee $1
  local.get $0
  i64.load
  i64.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i64.load
   i64.sub
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/math-montgomery/MontgomeryContext#toMontgomery (param $0 i32) (param $1 i64) (result i64)
  (local $2 i64)
  (local $3 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i64.load offset=8
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$assembly/core/math-montgomery/MontgomeryContext#mulMod$3776
    local.get $3
    i64.const 1048576
    i64.lt_u
    local.get $1
    i64.const 1048576
    i64.lt_u
    i32.and
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $1
     local.get $3
     i64.mul
     local.get $0
     i64.load
     i64.rem_u
     local.set $1
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$assembly/core/math-montgomery/MontgomeryContext#mulMod$3776
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    local.get $0
    i64.load
    i64.rem_u
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i64.load
    i64.rem_u
    local.set $3
    loop $while-continue|0
     local.get $3
     i64.const 0
     i64.ne
     if
      local.get $3
      i64.const 1
      i64.and
      i32.wrap_i64
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       local.get $2
       local.get $1
       call $assembly/core/math-montgomery/MontgomeryContext#addMod
       local.set $2
      end
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store
      local.get $0
      local.get $1
      local.get $1
      call $assembly/core/math-montgomery/MontgomeryContext#addMod
      local.set $1
      local.get $3
      i64.const 1
      i64.shr_u
      local.set $3
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-montgomery/MontgomeryContext#montgomeryMul (param $0 i32) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  i64.mul
  local.tee $1
  local.get $0
  i64.load offset=24
  i64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i64.load offset=8
  i64.const 1
  i64.sub
  i64.and
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  i64.load
  i64.mul
  i64.add
  block $__inlined_func$assembly/core/math-montgomery/countTrailingZeros$2147 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 64
   local.get $0
   i64.load offset=8
   local.tee $1
   i64.eqz
   br_if $__inlined_func$assembly/core/math-montgomery/countTrailingZeros$2147
   drop
   loop $while-continue|0
    local.get $1
    i64.const 1
    i64.and
    i64.eqz
    if
     local.get $1
     i64.const 1
     i64.shr_u
     local.set $1
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $while-continue|0
    end
   end
   local.get $3
  end
  i64.extend_i32_s
  i64.shr_u
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i64.load
  i64.ge_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i64.load
   i64.sub
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/core/math-montgomery/modExpMontgomery (param $0 i64) (param $1 i64) (param $2 i64) (result i64)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   local.get $2
   i64.const 1
   i64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i64.const 0
    return
   end
   local.get $1
   i64.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i64.const 1
    return
   end
   block $folding-inner0
    local.get $1
    i64.const 1
    i64.eq
    if
     local.get $0
     local.get $2
     i64.rem_u
     local.set $0
     br $folding-inner0
    end
    local.get $1
    i64.const 16
    i64.lt_u
    if
     local.get $2
     i64.const 1
     i64.eq
     if (result i64)
      i64.const 0
     else
      i64.const 1
      local.set $3
      local.get $0
      local.get $2
      i64.rem_u
      local.set $0
      loop $while-continue|0
       local.get $1
       i64.const 0
       i64.ne
       if
        local.get $1
        i64.const 1
        i64.and
        i32.wrap_i64
        if
         local.get $0
         local.get $3
         i64.mul
         local.get $2
         i64.rem_u
         local.set $3
        end
        local.get $1
        i64.const 1
        i64.shr_u
        local.set $1
        local.get $0
        local.get $0
        i64.mul
        local.get $2
        i64.rem_u
        local.set $0
        br $while-continue|0
       end
      end
      local.get $3
     end
     local.set $0
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    call $assembly/core/math-montgomery/MontgomeryContext#constructor
    local.tee $4
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    i64.const 1
    call $assembly/core/math-montgomery/MontgomeryContext#toMontgomery
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    local.get $0
    local.get $2
    i64.rem_u
    call $assembly/core/math-montgomery/MontgomeryContext#toMontgomery
    local.set $0
    loop $while-continue|01
     local.get $1
     i64.const 0
     i64.ne
     if
      local.get $1
      i64.const 1
      i64.and
      i32.wrap_i64
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       local.get $4
       local.get $3
       local.get $0
       call $assembly/core/math-montgomery/MontgomeryContext#montgomeryMul
       local.set $3
      end
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      local.get $4
      local.get $0
      local.get $0
      call $assembly/core/math-montgomery/MontgomeryContext#montgomeryMul
      local.set $0
      local.get $1
      i64.const 1
      i64.shr_u
      local.set $1
      br $while-continue|01
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    block $__inlined_func$assembly/core/math-montgomery/MontgomeryContext#fromMontgomery$93 (result i64)
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     block $folding-inner00
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner00
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner00
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $3
      local.get $4
      i64.load offset=24
      i64.mul
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $0
      local.get $4
      i64.load offset=8
      i64.const 1
      i64.sub
      i64.and
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $3
      local.get $0
      local.get $4
      i64.load
      i64.mul
      i64.add
      local.set $0
      block $__inlined_func$assembly/core/math-montgomery/countTrailingZeros$2155 (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       i32.const 64
       local.get $4
       i64.load offset=8
       local.tee $3
       i64.eqz
       br_if $__inlined_func$assembly/core/math-montgomery/countTrailingZeros$2155
       drop
       loop $while-continue|02
        local.get $3
        i64.const 1
        i64.and
        i64.eqz
        if
         local.get $3
         i64.const 1
         i64.shr_u
         local.set $3
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $while-continue|02
        end
       end
       local.get $5
      end
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $0
      local.get $5
      i64.extend_i32_s
      i64.shr_u
      local.tee $0
      local.get $4
      i64.load
      i64.ge_u
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $0
       local.get $4
       i64.load
       i64.sub
       local.set $0
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $0
      br $__inlined_func$assembly/core/math-montgomery/MontgomeryContext#fromMontgomery$93
     end
     br $folding-inner1
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-extended-gcd/modInverse (param $0 i64) (param $1 i64) (result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/core/math-extended-gcd/extendedGCD
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load
  i64.const 1
  i64.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i64.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i64.load offset=8
  local.get $1
  i64.rem_s
  local.get $1
  i64.add
  local.get $1
  i64.rem_s
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/typedarray/Float64Array#get:length (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math-operations/arrayMul (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $4
  local.get $5
  local.get $2
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  f64.min
  f64.min
  local.set $4
  loop $for-loop|0
   local.get $3
   f64.convert_i32_s
   local.get $4
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $3
    call $~lib/typedarray/Float64Array#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $2
    local.get $3
    local.get $5
    local.get $1
    local.get $3
    call $~lib/typedarray/Float64Array#__get
    f64.mul
    call $~lib/typedarray/Float64Array#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/math-operations/arrayAdd (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $4
  local.get $5
  local.get $2
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  f64.min
  f64.min
  local.set $4
  loop $for-loop|0
   local.get $3
   f64.convert_i32_s
   local.get $4
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $3
    call $~lib/typedarray/Float64Array#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $2
    local.get $3
    local.get $5
    local.get $1
    local.get $3
    call $~lib/typedarray/Float64Array#__get
    f64.add
    call $~lib/typedarray/Float64Array#__set
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/math-operations/dotProduct (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $4
  local.get $1
  call $~lib/typedarray/Float64Array#get:length
  f64.convert_i32_s
  f64.min
  local.set $4
  loop $for-loop|0
   local.get $2
   f64.convert_i32_s
   local.get $4
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $2
    call $~lib/typedarray/Float64Array#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $5
    local.get $1
    local.get $2
    call $~lib/typedarray/Float64Array#__get
    f64.mul
    f64.add
    local.set $3
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/core/math-cache/PrimeCache#getPrimes (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u64>#__get (param $0 i32) (param $1 i32) (result i64)
  (local $2 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/math-optimized/getPrimeCacheStats (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/core/math-cache/primeCache
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $assembly/core/math-cache/PrimeCache#getPrimes
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 10
  call $~lib/number/I32#toString
  local.tee $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if (result i64)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   local.get $0
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<u64>#__get
  else
   i64.const 0
  end
  call $~lib/number/U64#toString
  local.tee $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 46752
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  i32.const 46756
  local.get $1
  i32.store
  i32.const 46752
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 46752
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  i32.const 46764
  local.get $0
  i32.store
  i32.const 46752
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 46752
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=12
  i32.const 46752
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math-cache/PrimeCache#clear (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 64
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 0
   i32.const 3
   i32.const 31
   i32.const 46800
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-optimized/resetMathOptimizations
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/core/math-cache/primeCache
  local.tee $0
  i32.store
  local.get $0
  call $assembly/core/math-cache/PrimeCache#clear
  i32.const 0
  global.set $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/math-optimized/getMathPerformanceReport (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 46832
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 46832
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $6
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $7
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 10
   call $~lib/number/I32#toString
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=32
   i32.const 47572
   local.get $2
   i32.store
   i32.const 47568
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=32
   i32.const 47580
   local.get $3
   i32.store
   i32.const 47568
   local.get $3
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=32
   i32.const 47588
   local.get $4
   i32.store
   i32.const 47568
   local.get $4
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=32
   i32.const 47596
   local.get $5
   i32.store
   i32.const 47568
   local.get $5
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=32
   i32.const 47604
   local.get $6
   i32.store
   i32.const 47568
   local.get $6
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=32
   i32.const 47612
   local.get $7
   i32.store
   i32.const 47568
   local.get $7
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=32
   i32.const 47620
   local.get $0
   i32.store
   i32.const 47568
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 47568
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=32
   i32.const 47568
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 29664
   i32.store offset=16
   local.get $0
   i32.const 29664
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   i32.const 46832
   local.get $0
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $1
   call $assembly/core/math-optimized/getPrimeCacheStats
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 29664
   i32.store offset=16
   local.get $2
   i32.const 29664
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $0
   local.get $2
   call $~lib/string/String.__concat
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-cache/PrimeCache#has (param $0 i32) (param $1 i64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.const 374761401
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.get $1
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $0
   i32.const 15
   i32.shr_u
   local.get $0
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   i32.const 13
   i32.shr_u
   local.get $0
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   i32.const 16
   i32.shr_u
   local.get $0
   i32.xor
   call $"~lib/map/Map<u64,bool>#find"
   i32.const 0
   i32.ne
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/core/math-cache/PrimeCache#set (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  local.get $1
  local.get $2
  call $"~lib/map/Map<u64,bool>#set"
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i64.load offset=8
   i64.gt_u
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store
   local.get $2
   local.get $1
   call $~lib/array/Array<u64>#push
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   i64.store offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/core/math-miller-rabin/millerRabinDeterministic32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $folding-inner1
   block $folding-inner0
    local.get $0
    i32.const 2
    i32.lt_u
    br_if $folding-inner0
    local.get $0
    i32.const 3
    i32.eq
    local.get $0
    i32.const 2
    i32.eq
    i32.or
    br_if $folding-inner1
    local.get $0
    i32.const 1
    i32.and
    i32.eqz
    br_if $folding-inner0
    local.get $0
    i32.const 1
    i32.sub
    local.set $2
    loop $while-continue|0
     local.get $2
     i32.const 1
     i32.and
     i32.eqz
     if
      local.get $2
      i32.const 1
      i32.shr_u
      local.set $2
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $while-continue|0
     end
    end
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     i32.const 4768
     i32.store
     i32.const 4768
     call $~lib/array/Array<u32>#get:length
     local.get $7
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4768
      i32.store
      i32.const 4768
      local.get $7
      call $~lib/array/Array<u32>#__get
      local.tee $4
      local.get $0
      i32.lt_u
      if
       block $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness32$3781 (result i32)
        local.get $2
        local.set $3
        i32.const 1
        local.set $1
        local.get $4
        local.get $0
        i32.rem_u
        local.set $4
        loop $while-continue|01
         local.get $3
         if
          local.get $3
          i32.const 1
          i32.and
          if
           local.get $1
           i64.extend_i32_u
           local.get $4
           i64.extend_i32_u
           i64.mul
           local.get $0
           i64.extend_i32_u
           i64.rem_u
           i32.wrap_i64
           local.set $1
          end
          local.get $4
          i64.extend_i32_u
          local.tee $5
          local.get $5
          i64.mul
          local.get $0
          i64.extend_i32_u
          i64.rem_u
          i32.wrap_i64
          local.set $4
          local.get $3
          i32.const 1
          i32.shr_u
          local.set $3
          br $while-continue|01
         end
        end
        i32.const 1
        local.get $1
        local.tee $4
        local.get $0
        i32.const 1
        i32.sub
        i32.eq
        local.get $4
        i32.const 1
        i32.eq
        i32.or
        br_if $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness32$3781
        drop
        i32.const 0
        local.set $3
        loop $for-loop|0
         local.get $3
         local.get $6
         i32.const 1
         i32.sub
         i32.lt_s
         if
          i32.const 1
          local.get $4
          i64.extend_i32_u
          local.tee $5
          local.get $5
          i64.mul
          local.get $0
          i64.extend_i32_u
          i64.rem_u
          i32.wrap_i64
          local.tee $4
          local.get $0
          i32.const 1
          i32.sub
          i32.eq
          br_if $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness32$3781
          drop
          local.get $3
          i32.const 1
          i32.add
          local.set $3
          br $for-loop|0
         end
        end
        i32.const 0
       end
       i32.eqz
       br_if $folding-inner0
      end
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      br $for-loop|1
     end
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/core/math-miller-rabin/millerRabinDeterministic64 (param $0 i64) (result i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i64.const 1
  i64.sub
  local.set $5
  loop $while-continue|0
   local.get $5
   i64.const 1
   i64.and
   i64.eqz
   if
    local.get $5
    i64.const 1
    i64.shr_u
    local.set $5
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $while-continue|0
   end
  end
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   i32.const 4944
   i32.store
   i32.const 4944
   call $~lib/array/Array<u32>#get:length
   local.get $10
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4944
    i32.store
    i32.const 4944
    local.get $10
    call $~lib/array/Array<u64>#__get
    local.tee $1
    local.get $0
    i64.lt_u
    if
     block $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness64$3782 (result i32)
      i32.const 1
      block $__inlined_func$assembly/core/math-miller-rabin/modExp64$177 (result i64)
       local.get $5
       local.set $4
       i64.const 0
       local.get $0
       i64.const 1
       i64.eq
       br_if $__inlined_func$assembly/core/math-miller-rabin/modExp64$177
       drop
       i64.const 1
       local.set $3
       local.get $1
       local.get $0
       i64.rem_u
       local.set $6
       loop $while-continue|01
        local.get $4
        i64.const 0
        i64.ne
        if
         local.get $4
         i64.const 1
         i64.and
         i32.wrap_i64
         if
          block $__inlined_func$assembly/core/math-miller-rabin/mulMod64$104 (result i64)
           i64.const 0
           local.set $1
           local.get $6
           i64.const 1048576
           i64.lt_u
           local.get $3
           i64.const 1048576
           i64.lt_u
           i32.and
           if
            local.get $3
            local.get $6
            i64.mul
            local.get $0
            i64.rem_u
            br $__inlined_func$assembly/core/math-miller-rabin/mulMod64$104
           end
           local.get $3
           local.get $0
           i64.rem_u
           local.set $3
           local.get $6
           local.get $0
           i64.rem_u
           local.set $2
           loop $while-continue|00
            local.get $2
            i64.const 0
            i64.ne
            if
             local.get $2
             i64.const 1
             i64.and
             i32.wrap_i64
             if
              local.get $1
              local.get $3
              i64.add
              local.tee $1
              local.get $0
              i64.sub
              local.get $1
              local.get $0
              local.get $1
              i64.le_u
              select
              local.set $1
             end
             local.get $3
             local.get $3
             i64.add
             local.tee $3
             local.get $0
             i64.sub
             local.get $3
             local.get $0
             local.get $3
             i64.le_u
             select
             local.set $3
             local.get $2
             i64.const 1
             i64.shr_u
             local.set $2
             br $while-continue|00
            end
           end
           local.get $1
          end
          local.set $3
         end
         local.get $4
         i64.const 1
         i64.shr_u
         local.set $4
         block $__inlined_func$assembly/core/math-miller-rabin/mulMod64$105 (result i64)
          i64.const 0
          local.set $1
          local.get $6
          i64.const 1048576
          i64.lt_u
          local.tee $7
          local.get $7
          i32.and
          if
           local.get $6
           local.get $6
           i64.mul
           local.get $0
           i64.rem_u
           br $__inlined_func$assembly/core/math-miller-rabin/mulMod64$105
          end
          local.get $6
          local.get $0
          i64.rem_u
          local.tee $2
          local.set $6
          loop $while-continue|02
           local.get $2
           i64.const 0
           i64.ne
           if
            local.get $2
            i64.const 1
            i64.and
            i32.wrap_i64
            if
             local.get $1
             local.get $6
             i64.add
             local.tee $1
             local.get $0
             i64.sub
             local.get $1
             local.get $0
             local.get $1
             i64.le_u
             select
             local.set $1
            end
            local.get $6
            local.get $6
            i64.add
            local.tee $6
            local.get $0
            i64.sub
            local.get $6
            local.get $0
            local.get $6
            i64.le_u
            select
            local.set $6
            local.get $2
            i64.const 1
            i64.shr_u
            local.set $2
            br $while-continue|02
           end
          end
          local.get $1
         end
         local.set $6
         br $while-continue|01
        end
       end
       local.get $3
      end
      local.tee $6
      local.get $0
      i64.const 1
      i64.sub
      i64.eq
      local.get $6
      i64.const 1
      i64.eq
      i32.or
      br_if $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness64$3782
      drop
      i32.const 0
      local.set $9
      loop $for-loop|0
       local.get $9
       local.get $8
       i32.const 1
       i32.sub
       i32.lt_s
       if
        i32.const 1
        block $__inlined_func$assembly/core/math-miller-rabin/mulMod64$106 (result i64)
         i64.const 0
         local.set $2
         local.get $6
         i64.const 1048576
         i64.lt_u
         local.tee $7
         local.get $7
         i32.and
         if
          local.get $6
          local.get $6
          i64.mul
          local.get $0
          i64.rem_u
          br $__inlined_func$assembly/core/math-miller-rabin/mulMod64$106
         end
         local.get $6
         local.get $0
         i64.rem_u
         local.tee $3
         local.set $6
         loop $while-continue|03
          local.get $3
          i64.const 0
          i64.ne
          if
           local.get $3
           i64.const 1
           i64.and
           i32.wrap_i64
           if
            local.get $2
            local.get $6
            i64.add
            local.tee $1
            local.get $0
            i64.sub
            local.get $1
            local.get $0
            local.get $1
            i64.le_u
            select
            local.set $2
           end
           local.get $6
           local.get $6
           i64.add
           local.tee $1
           local.get $0
           i64.sub
           local.get $1
           local.get $0
           local.get $1
           i64.le_u
           select
           local.set $6
           local.get $3
           i64.const 1
           i64.shr_u
           local.set $3
           br $while-continue|03
          end
         end
         local.get $2
        end
        local.tee $6
        local.get $0
        i64.const 1
        i64.sub
        i64.eq
        br_if $__inlined_func$assembly/core/math-miller-rabin/millerRabinWitness64$3782
        drop
        local.get $9
        i32.const 1
        i32.add
        local.set $9
        br $for-loop|0
       end
      end
      i32.const 0
     end
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      return
     end
    end
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/core/math-primes/isPrimeOptimized (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   block $folding-inner1
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/core/math-cache/primeCache
     local.tee $3
     i32.store
     local.get $3
     local.get $0
     call $assembly/core/math-cache/PrimeCache#has
     if
      global.get $~lib/memory/__stack_pointer
      global.get $assembly/core/math-cache/primeCache
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      local.get $1
      local.get $0
      local.get $0
      i32.wrap_i64
      i32.const -1028477379
      i32.mul
      i32.const 374761401
      i32.add
      i32.const 17
      i32.rotl
      i32.const 668265263
      i32.mul
      local.get $0
      i64.const 32
      i64.shr_u
      i32.wrap_i64
      i32.const -1028477379
      i32.mul
      i32.add
      i32.const 17
      i32.rotl
      i32.const 668265263
      i32.mul
      local.tee $1
      i32.const 15
      i32.shr_u
      local.get $1
      i32.xor
      i32.const -2048144777
      i32.mul
      local.tee $1
      i32.const 13
      i32.shr_u
      local.get $1
      i32.xor
      i32.const -1028477379
      i32.mul
      local.tee $1
      i32.const 16
      i32.shr_u
      local.get $1
      i32.xor
      call $"~lib/map/Map<u64,bool>#find"
      local.tee $1
      i32.eqz
      if
       i32.const 41472
       i32.const 41536
       i32.const 105
       i32.const 17
       call $~lib/builtins/abort
       unreachable
      end
      local.get $1
      i32.load8_u offset=8
      local.set $1
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
      i32.const 0
      i32.ne
      return
     end
     local.get $0
     i64.const 2
     i64.lt_u
     br_if $folding-inner1
     local.get $0
     i64.const 2
     i64.eq
     br_if $folding-inner2
     local.get $0
     i64.const 1
     i64.and
     i64.eqz
     br_if $folding-inner1
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      i32.const 4192
      i32.store
      i32.const 4192
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       block $for-break0
        global.get $~lib/memory/__stack_pointer
        i32.const 4192
        i32.store
        i32.const 4192
        local.get $1
        call $~lib/array/Array<u32>#__get
        i64.extend_i32_u
        local.tee $2
        local.get $0
        i64.eq
        br_if $folding-inner2
        local.get $0
        local.get $2
        i64.rem_u
        i64.eqz
        if
         global.get $~lib/memory/__stack_pointer
         global.get $assembly/core/math-cache/primeCache
         local.tee $1
         i32.store
         local.get $1
         local.get $0
         i32.const 0
         call $assembly/core/math-cache/PrimeCache#set
         br $folding-inner1
        end
        local.get $2
        local.get $2
        i64.mul
        local.get $0
        i64.gt_u
        br_if $for-break0
        local.get $1
        i32.const 1
        i32.add
        local.set $1
        br $for-loop|0
       end
      end
     end
     local.get $0
     i64.const 4294967296
     i64.lt_u
     if (result i32)
      local.get $0
      i32.wrap_i64
      call $assembly/core/math-miller-rabin/millerRabinDeterministic32
     else
      local.get $0
      call $assembly/core/math-miller-rabin/millerRabinDeterministic64
     end
     local.set $1
     global.get $~lib/memory/__stack_pointer
     global.get $assembly/core/math-cache/primeCache
     local.tee $3
     i32.store
     local.get $3
     local.get $0
     local.get $1
     call $assembly/core/math-cache/PrimeCache#set
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     return
    end
    i32.const 88336
    i32.const 88384
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $assembly/core/math-optimized/validateMathOperations (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $folding-inner0
   i64.const 2
   i64.const 10
   i64.const 1000
   call $assembly/core/math-optimized/modExpOptimized
   i64.const 24
   i64.ne
   br_if $folding-inner0
   i64.const 17
   call $assembly/core/math-primes/isPrimeOptimized
   i32.eqz
   br_if $folding-inner0
   i64.const 15
   call $assembly/core/math-primes/isPrimeOptimized
   br_if $folding-inner0
   i64.const 123
   i64.const 456
   i64.const 789
   call $assembly/core/math-operations/mulMod
   i64.const 456
   i64.const 123
   i64.const 789
   call $assembly/core/math-operations/mulMod
   i64.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 48
   i64.const 18
   call $assembly/core/math-extended-gcd/extendedGCD
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i64.load
   i64.const 6
   i64.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/core/math-primes/generatePrimesOptimized (param $0 i32) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $0
  i32.const 0
  i32.le_s
  if
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/core/math-cache/primeCache
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $assembly/core/math-cache/PrimeCache#getPrimes
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store
  local.get $3
  call $~lib/array/Array<u32>#get:length
  local.get $0
  i32.ge_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $4
   i32.store offset=8
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     local.get $4
     local.get $3
     local.get $2
     call $~lib/array/Array<u64>#__get
     i32.wrap_i64
     call $~lib/array/Array<i32>#push
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<u32>#constructor
  local.tee $2
  i32.store offset=16
  i64.const 2
  local.set $1
  loop $while-continue|1
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $0
   i32.lt_s
   if
    local.get $1
    call $assembly/core/math-primes/isPrimeOptimized
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $2
     local.get $1
     i32.wrap_i64
     call $~lib/array/Array<i32>#push
    end
    local.get $1
    i64.const 1
    i64.add
    local.set $1
    br $while-continue|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/core/math-optimized/benchmarkMathOperations (result i32)
  (local $0 i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 40
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 47648
  i32.store
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $1
  loop $for-loop|0
   local.get $0
   i32.const 1000
   i32.lt_s
   if
    local.get $0
    i64.extend_i32_s
    i64.const 1000000007
    i64.add
    call $assembly/core/math-primes/isPrimeOptimized
    drop
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 47648
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 1000
  i32.const 10
  call $~lib/number/I32#toString
  local.tee $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.get $1
  f64.sub
  call $~lib/number/F64#toString
  local.tee $4
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 47888
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=24
  i32.const 47892
  local.get $3
  i32.store
  i32.const 47888
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 47888
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=24
  i32.const 47900
  local.get $4
  i32.store
  i32.const 47888
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 47888
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=24
  i32.const 47888
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $0
  i32.const 47648
  local.get $3
  call $~lib/string/String.__concat
  local.tee $3
  i32.store
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $1
  i32.const 0
  local.set $0
  loop $for-loop|1
   local.get $0
   i32.const 1000
   i32.lt_s
   if
    local.get $0
    i64.extend_i32_s
    i64.const 2
    i64.add
    i64.const 100
    i64.const 1000000007
    call $assembly/core/math-optimized/modExpOptimized
    drop
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|1
   end
  end
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 1000
  i32.const 10
  call $~lib/number/I32#toString
  local.tee $5
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.get $1
  f64.sub
  call $~lib/number/F64#toString
  local.tee $0
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 48080
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.store offset=24
  i32.const 48084
  local.get $5
  i32.store
  i32.const 48080
  local.get $5
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 48080
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=24
  i32.const 48092
  local.get $0
  i32.store
  i32.const 48080
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 48080
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=24
  i32.const 48080
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $3
  local.get $0
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $1
  i32.const 100
  call $assembly/core/math-primes/generatePrimesOptimized
  drop
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $2
  local.get $1
  f64.sub
  call $~lib/number/F64#toString
  local.tee $4
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 48224
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=24
  i32.const 48228
  local.get $4
  i32.store
  i32.const 48224
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 48224
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=24
  i32.const 48224
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $3
  local.get $0
  local.get $4
  call $~lib/string/String.__concat
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math-optimized/testMathOperations (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $folding-inner0
   call $assembly/core/math-optimized/validateMathOperations
   i32.eqz
   br_if $folding-inner0
   i32.const 0
   global.set $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
   i64.const 2
   i64.const 100
   i64.const 1000
   call $assembly/core/math-optimized/modExpOptimized
   drop
   global.get $assembly/core/math-performance/MathPerformanceStats.modularExponentiations
   i32.const 1
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/math-cache/primeCache
   local.tee $0
   i32.store
   local.get $0
   call $assembly/core/math-cache/PrimeCache#clear
   i64.const 17
   call $assembly/core/math-primes/isPrimeOptimized
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/math-cache/primeCache
   local.tee $0
   i32.store
   local.get $0
   i64.const 17
   call $assembly/core/math-cache/PrimeCache#has
   i32.eqz
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/core/math-operations/vectorMagnitude (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    local.get $1
    call $~lib/typedarray/Float64Array#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $2
    local.get $3
    local.get $0
    local.get $1
    call $~lib/typedarray/Float64Array#__get
    f64.mul
    f64.add
    local.set $2
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
  f64.sqrt
 )
 (func $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 41472
   i32.const 41536
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#has" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find"
  i32.const 0
  i32.ne
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#get" (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find"
  local.tee $0
  i32.eqz
  if
   i32.const 41472
   i32.const 41536
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $"~lib/map/Map<~lib/string/String,i32>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $7
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    i32.store offset=4
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $9
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $6
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $10
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $5
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $10
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.load
        local.tee $11
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $11
        i32.store
        local.get $3
        local.get $10
        i32.load offset=4
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.store offset=8
        local.get $3
        local.get $9
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $8
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=8
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $10
       i32.const 12
       i32.add
       local.set $10
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=16
     local.get $0
     local.get $9
     i32.store
     local.get $0
     local.get $9
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $6
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $0
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $3
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $7
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<bool>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3168
    i32.const 4240
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 0
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  local.get $2
  i32.store8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<bool>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3168
   i32.const 4240
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  i32.add
  i32.load8_u
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/core/math-primes/sieveOfEratosthenes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 2
   i32.lt_u
   if
    i32.const 0
    call $~lib/array/Array<u32>#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 226
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 1
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    i32.const 3376
    i32.const 4240
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $5
   local.get $5
   i32.const 8
   i32.le_u
   select
   local.tee $2
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   local.get $1
   local.get $4
   i32.store
   local.get $1
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   loop $for-loop|0
    local.get $0
    local.get $3
    i32.ge_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     local.get $3
     i32.const 1
     call $~lib/array/Array<bool>#__set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/array/Array<bool>#__set
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 1
   i32.const 0
   call $~lib/array/Array<bool>#__set
   i32.const 2
   local.set $3
   loop $for-loop|1
    local.get $3
    local.get $3
    i32.mul
    local.tee $2
    local.get $0
    i32.le_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     local.get $3
     call $~lib/array/Array<bool>#__get
     if
      loop $for-loop|2
       local.get $0
       local.get $2
       i32.ge_u
       if
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=4
        local.get $1
        local.get $2
        i32.const 0
        call $~lib/array/Array<bool>#__set
        local.get $2
        local.get $3
        i32.add
        local.set $2
        br $for-loop|2
       end
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<u32>#constructor
   local.tee $3
   i32.store offset=8
   i32.const 2
   local.set $2
   loop $for-loop|3
    local.get $0
    local.get $2
    i32.ge_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     local.get $2
     call $~lib/array/Array<bool>#__get
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      local.get $3
      local.get $2
      call $~lib/array/Array<i32>#push
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|3
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/identity/Identity#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 48
   i32.const 227
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store8 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=36
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=40
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=44
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=16
   local.get $1
   i32.eqz
   if
    call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=36
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 48416
   i32.store offset=16
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   i32.const 48416
   local.get $1
   call $~lib/string/String.__concat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48448
   i32.store offset=12
   local.get $1
   i32.const 48448
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $assembly/identity/types/IdGenerator.counter
   i64.const 1
   i64.add
   global.set $assembly/identity/types/IdGenerator.counter
   global.get $assembly/identity/types/IdGenerator.counter
   call $~lib/number/U64#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $3
   local.get $1
   call $~lib/string/String.__concat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48368
   i32.store offset=12
   local.get $2
   local.get $1
   i32.const 48368
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 0
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 48480
    i32.store offset=12
    i32.const 1
    i32.const 2
    local.get $1
    i32.const 48480
    call $~lib/string/String.__eq
    select
   end
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $2
   f64.load offset=16
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 1
   i32.store8 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=40
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=44
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.load offset=40
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=36
    local.tee $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 9696
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=40
    local.tee $1
    i32.store offset=24
    local.get $1
    i32.eqz
    if
     i32.const 43680
     i32.const 48528
     i32.const 56
     i32.const 57
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $0
    i32.const 9696
    local.get $1
    call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.load offset=44
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=36
    local.tee $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 9744
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=44
    local.tee $1
    i32.store offset=28
    local.get $1
    i32.eqz
    if
     i32.const 43680
     i32.const 48528
     i32.const 59
     i32.const 57
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $0
    i32.const 9744
    local.get $1
    call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/identity/Identity#getId (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/types/DomainCreationParams#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 233
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  local.get $2
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/set/Set<~lib/string/String>#add (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   local.get $1
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $1
   local.get $6
   local.get $0
   i32.load offset=4
   i32.and
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $1
   block $__inlined_func$~lib/set/Set<~lib/string/String>#find$3790
    loop $while-continue|0
     local.get $1
     if
      local.get $1
      i32.load offset=4
      local.tee $3
      i32.const 1
      i32.and
      if (result i32)
       i32.const 0
      else
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load
       local.tee $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store offset=4
       local.get $4
       local.get $2
       call $~lib/string/String.__eq
      end
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/set/Set<~lib/string/String>#find$3790
      end
      local.get $3
      i32.const -2
      i32.and
      local.set $1
      br $while-continue|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $1
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $1
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 3
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $4
     local.get $0
     i32.load offset=16
     i32.const 3
     i32.shl
     i32.add
     local.set $8
     local.get $3
     local.set $1
     loop $while-continue|00
      local.get $4
      local.get $8
      i32.ne
      if
       local.get $4
       i32.load offset=4
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.load
        local.tee $10
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store offset=8
        local.get $1
        local.get $10
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $10
        i32.store offset=8
        local.get $1
        local.get $5
        local.get $10
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $9
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $10
        i32.load
        i32.store offset=4
        local.get $10
        local.get $1
        i32.store
        local.get $1
        i32.const 8
        i32.add
        local.set $1
       end
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $while-continue|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=16
     local.get $0
     local.get $5
     i32.store
     local.get $0
     local.get $5
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=16
     local.get $0
     local.get $3
     i32.store offset=8
     local.get $0
     local.get $3
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=8
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $3
    i32.const 1
    i32.add
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $1
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    local.tee $1
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $1
    local.get $2
    local.get $6
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=4
    local.get $0
    local.get $1
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/domain/Domain#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 56
    i32.const 230
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=48
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=4
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=16
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   call $~lib/set/Set<~lib/string/String>#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=20
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 232
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=24
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=12
   local.tee $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=48
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $3
   local.get $1
   i32.load offset=16
   i32.store offset=52
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=8
    local.tee $0
    i32.store offset=24
    local.get $0
    i32.eqz
    if
     i32.const 43680
     i32.const 48704
     i32.const 59
     i32.const 40
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 41936
    i32.store offset=16
    local.get $0
    i32.const 41936
    call $~lib/string/String.__concat
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $1
    i32.store offset=8
    local.get $0
    local.get $1
    call $~lib/string/String.__concat
   else
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    i32.load
   end
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 48784
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 41936
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 48448
   i32.store offset=32
   block $__inlined_func$~lib/string/String#replace$116 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 41936
    i32.store
    i32.const 41932
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $4
    local.get $2
    i32.ge_u
    if
     local.get $2
     local.get $4
     i32.ge_u
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 41936
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      i32.const 48448
      local.get $0
      i32.const 41936
      local.get $0
      call $~lib/string/String.__eq
      select
      local.set $0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$~lib/string/String#replace$116
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 41936
    i32.store offset=4
    local.get $0
    i32.const 41936
    call $~lib/string/String#indexOf
    local.tee $5
    i32.const -1
    i32.xor
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 48448
     i32.store
     i32.const 48444
     i32.load
     i32.const 1
     i32.shr_u
     local.tee $1
     local.get $2
     local.get $4
     i32.sub
     local.tee $6
     i32.add
     local.tee $2
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.const 1
      i32.shl
      i32.const 2
      call $~lib/rt/itcms/__new
      local.tee $7
      i32.store offset=8
      local.get $7
      local.get $0
      local.get $5
      i32.const 1
      i32.shl
      local.tee $2
      memory.copy
      local.get $2
      local.get $7
      i32.add
      i32.const 48448
      local.get $1
      i32.const 1
      i32.shl
      memory.copy
      local.get $7
      local.get $1
      local.get $5
      i32.add
      i32.const 1
      i32.shl
      i32.add
      local.get $0
      local.get $4
      local.get $5
      i32.add
      i32.const 1
      i32.shl
      i32.add
      local.get $6
      local.get $5
      i32.sub
      i32.const 1
      i32.shl
      memory.copy
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      br $__inlined_func$~lib/string/String#replace$116
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   i32.const 48784
   local.get $0
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48448
   i32.store offset=12
   local.get $0
   i32.const 48448
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $3
   local.get $3
   f64.load offset=32
   f64.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=16
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=12
   local.tee $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $~lib/set/Set<~lib/string/String>#add
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=48
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 9696
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=12
   local.tee $1
   i32.store offset=12
   local.get $0
   i32.const 9696
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=48
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 10176
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $3
   f64.load offset=32
   call $~lib/number/F64#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 10176
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/set/Set<~lib/string/String>#get:size (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load offset=20
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/types/ObjectCreationParams#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.const 238
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store8 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store8 offset=13
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store8 offset=14
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=16
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store8 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 1
  i32.store8 offset=13
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 1
  i32.store8 offset=14
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store offset=16
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/identity/domain-object/DomainObject#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 45
    i32.const 235
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=40
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store8 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.eqz
   if
    call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=40
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 49088
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=36
   i32.const 49088
   local.get $0
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 48448
   i32.store offset=28
   local.get $0
   i32.const 48448
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   local.get $0
   local.get $3
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48448
   i32.store offset=12
   local.get $0
   i32.const 48448
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $assembly/identity/types/IdGenerator.counter
   i64.const 1
   i64.add
   global.set $assembly/identity/types/IdGenerator.counter
   global.get $assembly/identity/types/IdGenerator.counter
   call $~lib/number/U64#toString
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $0
   local.get $3
   call $~lib/string/String.__concat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $0
   i32.store offset=8
   local.get $2
   local.get $0
   i32.store offset=12
   local.get $2
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load8_u offset=12
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load8_u offset=13
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load8_u offset=14
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 239
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store8 offset=1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store8 offset=2
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $3
   i32.store8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $0
   i32.store8 offset=1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $1
   i32.store8 offset=2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=16
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $2
   f64.load offset=24
   f64.store offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=44
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/permissions/Permission#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 37
  i32.const 104
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=24
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=28
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store offset=32
  local.get $4
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 0
  i32.store8 offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  call $assembly/core/interfaces/BaseSerializable#constructor
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store
  local.get $4
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $4
  local.get $1
  i32.store offset=4
  local.get $4
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $4
  local.get $2
  i32.store offset=8
  local.get $4
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $4
  i32.const 13360
  i32.store offset=24
  local.get $4
  i32.const 13360
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store offset=28
  local.get $4
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $0
  i32.store offset=32
  local.get $4
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 1
  i32.store8 offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/identity/audit-trail/AuditEntry#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 60
  i32.const 61
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=24
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=28
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=32
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=36
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=40
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=44
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=48
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=52
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=56
  local.get $2
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  call $assembly/core/interfaces/BaseSerializable#constructor
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 49936
  i32.store offset=28
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/util/number/itoa64
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  i32.const 49936
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 15424
  i32.store offset=24
  local.get $2
  i32.const 15424
  call $~lib/string/String.__concat
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=12
  call $~lib/math/NativeMath.random
  call $~lib/number/F64#toString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=16
  local.get $4
  local.get $2
  call $~lib/string/String.__concat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $2
  i32.store
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  f64.convert_i64_s
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 14
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  local.get $3
  i32.const 13360
  i32.store offset=24
  local.get $3
  i32.const 13360
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 49824
  i32.store offset=8
  local.get $3
  i32.const 49824
  i32.store offset=28
  local.get $3
  i32.const 49824
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store offset=32
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=36
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=40
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=44
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.store offset=48
  local.get $3
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=52
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=56
  local.get $3
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/identity/permissions/Permission.create (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/identity/permissions/Permission#constructor
   local.tee $3
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/identity/audit-trail/globalAuditTrail
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49824
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 49872
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=28
   i32.const 49872
   local.get $1
   call $~lib/string/String#concat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 49824
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $assembly/identity/audit-trail/AuditEntry#constructor
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $1
   local.get $0
   call $~lib/array/Array<~lib/array/Array<i32>>#push
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load
   local.tee $1
   i32.store
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $1
   local.get $4
   i32.load offset=4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load
    local.tee $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    i32.load offset=12
    local.tee $2
    i32.const 0
    i32.le_s
    if
     i32.const 46576
     i32.const 4240
     i32.const 330
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.load offset=4
    local.tee $1
    i32.load
    i32.store offset=4
    local.get $1
    local.get $1
    i32.const 4
    i32.add
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $6
    memory.copy
    local.get $1
    local.get $6
    i32.add
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $2
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   i32.const 0
   local.set $1
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load offset=12
    local.tee $2
    i32.store
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     i32.const 1
     global.set $~argumentsLength
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=12
     local.tee $2
     i32.store offset=4
     local.get $0
     local.get $2
     local.get $1
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     i32.load
     call_indirect (type $3)
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/permissions/Permission.createGlobalPermissions (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 106
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6736
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6736
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 49712
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 49760
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 6736
   i32.const 49712
   i32.const 49760
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 6736
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49968
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49968
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50016
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50064
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 49968
   i32.const 50016
   i32.const 50064
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 49968
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50144
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50144
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50192
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50240
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 50144
   i32.const 50192
   i32.const 50240
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 50144
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5632
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5632
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50320
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50368
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 5632
   i32.const 50320
   i32.const 50368
   i32.const 1
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 5632
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50432
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50432
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50480
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50528
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 50432
   i32.const 50480
   i32.const 50528
   i32.const 1
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 50432
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 50608
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 50608
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50656
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50704
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 50608
   i32.const 50656
   i32.const 50704
   i32.const 1
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 50608
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5728
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5728
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50768
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50816
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 5728
   i32.const 50768
   i32.const 50816
   i32.const 1
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 5728
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5776
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5776
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 50864
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 50928
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 5776
   i32.const 50864
   i32.const 50928
   i32.const 1
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 5776
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6048
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6048
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51008
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51056
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 6048
   i32.const 51008
   i32.const 51056
   i32.const 2
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 6048
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51120
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51120
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51168
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51216
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 51120
   i32.const 51168
   i32.const 51216
   i32.const 2
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 51120
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51296
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51296
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51344
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51392
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 51296
   i32.const 51344
   i32.const 51392
   i32.const 2
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 51296
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6144
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51472
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51520
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 6144
   i32.const 51472
   i32.const 51520
   i32.const 2
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 6144
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6192
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 6192
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51568
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51632
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 6192
   i32.const 51568
   i32.const 51632
   i32.const 2
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 6192
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5328
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5328
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51712
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51776
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 5328
   i32.const 51712
   i32.const 51776
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 5328
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 51840
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 51840
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 51888
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 51936
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 51840
   i32.const 51888
   i32.const 51936
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 51840
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52016
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 52016
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 52064
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 52112
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 52016
   i32.const 52064
   i32.const 52112
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 52016
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 5456
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5456
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 52192
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 52256
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=28
   i32.const 5456
   i32.const 52192
   i32.const 52256
   i32.const 0
   call $assembly/identity/permissions/Permission.create
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   i32.const 5456
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/permissions/Role#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 36
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 33
   i32.const 107
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=12
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=16
   local.get $2
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   f64.const 0
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $assembly/core/interfaces/BaseSerializable#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52320
   i32.store offset=28
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/util/number/itoa64
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=32
   i32.const 52320
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 15424
   i32.store offset=24
   local.get $2
   i32.const 15424
   call $~lib/string/String.__concat
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=12
   call $~lib/math/NativeMath.random
   call $~lib/number/F64#toString
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $4
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $3
   local.get $2
   i32.store
   local.get $3
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=4
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $3
   local.get $1
   i32.store offset=8
   local.get $3
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 109
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 32
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $3
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   local.get $3
   i32.const 0
   i32.store offset=16
   local.get $3
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   f64.convert_i64_s
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   i32.const 1
   i32.store8 offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/permissions/Role#addPermission (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/identity/permissions/Role.createSystemRoles (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const -64
  i32.add
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 64
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 110
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $2
   local.get $5
   i32.store
   local.get $2
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $2
   local.get $5
   i32.store offset=8
   local.get $2
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 52352
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49760
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 52352
   i32.const 49760
   call $assembly/identity/permissions/Role#constructor
   local.tee $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $4
   call $~lib/array/Array<~lib/string/String>#constructor
   local.tee $5
   i32.store offset=4
   loop $for-loop|0
    local.get $3
    local.get $4
    i32.lt_s
    if
     local.get $8
     local.get $3
     i32.const 12
     i32.mul
     i32.add
     local.tee $9
     i32.load offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.load
      local.tee $9
      i32.store offset=8
      local.get $5
      local.get $1
      local.get $9
      call $~lib/array/Array<~lib/array/Array<f64>>#__set
      local.get $1
      i32.const 1
      i32.add
      local.set $1
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $1
   call $~lib/array/Array<u32>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $5
   i32.store offset=16
   i32.const 0
   local.set $3
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=20
     local.get $5
     local.get $3
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $1
     local.get $0
     local.get $4
     call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
     local.tee $1
     i32.store offset=24
     local.get $1
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      local.get $6
      local.get $1
      call $assembly/identity/permissions/Role#addPermission
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6736
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=20
   local.get $2
   i32.const 6736
   local.get $6
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 52416
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52464
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 52416
   i32.const 52464
   call $assembly/identity/permissions/Role#constructor
   local.tee $1
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 95
   i32.const 52544
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=32
   i32.const 0
   local.set $3
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     local.get $4
     local.get $3
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $5
     local.get $0
     local.get $6
     call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
     local.tee $5
     i32.store offset=36
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=8
      local.get $1
      local.get $5
      call $assembly/identity/permissions/Role#addPermission
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6976
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $2
   i32.const 6976
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 52592
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52640
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 52592
   i32.const 52640
   call $assembly/identity/permissions/Role#constructor
   local.tee $1
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 95
   i32.const 52720
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=44
   i32.const 0
   local.set $3
   loop $for-loop|2
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     local.get $4
     local.get $3
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $5
     local.get $0
     local.get $6
     call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
     local.tee $5
     i32.store offset=48
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=8
      local.get $1
      local.get $5
      call $assembly/identity/permissions/Role#addPermission
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52752
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $2
   i32.const 52752
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 52800
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52848
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 52800
   i32.const 52848
   call $assembly/identity/permissions/Role#constructor
   local.tee $1
   i32.store offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 95
   i32.const 52912
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=56
   i32.const 0
   local.set $3
   loop $for-loop|3
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $3
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     local.get $4
     local.get $3
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=8
     local.get $5
     local.get $0
     local.get $6
     call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
     local.tee $5
     i32.store offset=60
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=8
      local.get $1
      local.get $5
      call $assembly/identity/permissions/Role#addPermission
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|3
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 52944
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=20
   local.get $2
   i32.const 52944
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const -64
   i32.sub
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/index/exampleUsage
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 80
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 80
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 9536
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48256
   i32.store offset=12
   local.get $2
   i32.const 9536
   i32.const 48256
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 9600
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48320
   i32.store offset=12
   local.get $2
   i32.const 9600
   i32.const 48320
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 228
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=16
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 48368
   i32.store offset=8
   local.get $4
   i32.const 48368
   i32.store
   local.get $4
   i32.const 48368
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.store offset=8
   local.get $4
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=16
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 48368
   i32.store offset=8
   local.get $4
   i32.const 48368
   i32.store
   local.get $4
   i32.const 48368
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   local.get $2
   i32.store offset=8
   local.get $4
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/identity/identity/Identity#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 48608
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   i32.const 48608
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 48656
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 48656
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 48656
   local.get $4
   call $assembly/identity/types/DomainCreationParams#constructor
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.const 229
   call $~lib/rt/itcms/__new
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 0
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 0
   i32.store offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   f64.const 0
   f64.store offset=64
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $assembly/identity/domain/Domain#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 100
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 1000
   i32.store offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   f64.const 0
   f64.store offset=64
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=48
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 10336
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.load offset=56
   i32.const 10
   call $~lib/number/I32#toString
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   local.get $5
   i32.const 10336
   local.get $6
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=48
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 10288
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   i32.load offset=60
   i32.const 10
   call $~lib/number/I32#toString
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   local.get $5
   i32.const 10288
   local.get $6
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 48816
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=20
   local.get $4
   call $assembly/identity/identity/Identity#getId
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   i32.const 48816
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 10944
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $3
   block $__inlined_func$assembly/identity/domain/RootDomain#createSubdomain$121 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=20
     local.tee $3
     i32.store
     local.get $3
     call $~lib/set/Set<~lib/string/String>#get:size
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $3
     local.get $4
     i32.load offset=56
     i32.lt_s
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     i32.eqz
     if
      i32.const 48880
      i32.const 48704
      i32.const 531
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 10944
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner00
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     i32.const 10944
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 10944
     local.get $5
     call $assembly/identity/types/DomainCreationParams#constructor
     local.tee $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $3
     local.get $5
     i32.store offset=8
     local.get $3
     local.get $5
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.load offset=52
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     local.get $3
     call $assembly/identity/domain/Domain#constructor
     local.tee $3
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.load offset=20
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     local.get $3
     call $assembly/identity/identity/Identity#getId
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store offset=4
     local.get $5
     local.get $6
     call $~lib/set/Set<~lib/string/String>#add
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $4
     call $~lib/bindings/dom/Date.now
     i64.trunc_sat_f64_s
     f64.convert_i64_s
     f64.store offset=40
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     br $__inlined_func$assembly/identity/domain/RootDomain#createSubdomain$121
    end
    br $folding-inner1
   end
   local.tee $3
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   i32.const 48960
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   block $__inlined_func$assembly/identity/interfaces/IDomain#getId@override$2646
    block $default
     block $case0
      local.get $3
      i32.const 8
      i32.sub
      i32.load
      local.tee $5
      i32.const 230
      i32.eq
      br_if $case0
      local.get $5
      i32.const 229
      i32.eq
      br_if $case0
      br $default
     end
     local.get $3
     call $assembly/identity/identity/Identity#getId
     local.set $3
     br $__inlined_func$assembly/identity/interfaces/IDomain#getId@override$2646
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   i32.const 48960
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 49024
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=32
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=32
   local.get $4
   call $assembly/identity/identity/Identity#getId
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 49056
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49024
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49024
   local.get $5
   local.get $6
   call $assembly/identity/types/ObjectCreationParams#constructor
   local.tee $5
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 49056
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   i32.const 234
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   f64.const 0
   f64.store offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=60
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 1
   i32.store8 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   local.get $5
   call $assembly/identity/domain-object/DomainObject#constructor
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   f64.const 1e3
   f64.store offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   local.get $5
   i32.const 18
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49056
   i32.store offset=8
   local.get $5
   i32.const 49056
   i32.store offset=60
   local.get $5
   i32.const 49056
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=40
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49120
   i32.store offset=8
   f64.const 1e3
   call $~lib/number/F64#toString
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $6
   i32.const 49120
   local.get $7
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=40
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49152
   i32.store offset=8
   i32.const 18
   i32.const 10
   call $~lib/number/I32#toString
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $6
   i32.const 49152
   local.get $7
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=40
   local.tee $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49200
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49056
   i32.store offset=12
   local.get $6
   i32.const 49200
   i32.const 49056
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $5
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   i32.const 49232
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=20
   local.get $5
   call $assembly/identity/identity/Identity#getId
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   i32.const 49232
   local.get $3
   call $~lib/string/String.__concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $3
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<~lib/string/String,~lib/string/String>#constructor"
   local.tee $3
   i32.store offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49296
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49328
   i32.store offset=12
   local.get $3
   i32.const 49296
   i32.const 49328
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 9984
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49360
   i32.store offset=12
   local.get $3
   i32.const 9984
   i32.const 49360
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 49424
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=48
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=48
   local.get $4
   call $assembly/identity/identity/Identity#getId
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 49456
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   i32.const 49504
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 49424
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49424
   local.get $2
   local.get $6
   call $assembly/identity/types/ObjectCreationParams#constructor
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 49456
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49504
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 60
   i32.const 240
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=48
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=52
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   local.get $6
   i32.const 0
   i32.store offset=56
   local.get $6
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store8 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $6
   local.get $2
   call $assembly/identity/domain-object/DomainObject#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49456
   i32.store offset=8
   local.get $2
   i32.const 49456
   i32.store offset=48
   local.get $2
   i32.const 49456
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $2
   local.get $3
   i32.store offset=52
   local.get $2
   local.get $3
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49504
   i32.store offset=8
   local.get $2
   i32.const 49504
   i32.store offset=56
   local.get $2
   i32.const 49504
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=40
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49584
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49456
   i32.store offset=12
   local.get $3
   i32.const 49584
   i32.const 49456
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=40
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 49632
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 49504
   i32.store offset=12
   local.get $3
   i32.const 49632
   i32.const 49504
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $2
   i32.store offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 49664
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=20
   local.get $2
   call $assembly/identity/identity/Identity#getId
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 49664
   local.get $2
   call $~lib/string/String.__concat
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   call $assembly/identity/permissions/Permission.createGlobalPermissions
   local.tee $2
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $assembly/identity/permissions/Role.createSystemRoles
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store offset=60
   global.get $~lib/memory/__stack_pointer
   call $assembly/identity/permissions/PermissionEvaluator#constructor
   local.tee $3
   i32.store offset=64
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6976
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 6976
   call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
   local.tee $2
   i32.store offset=68
   local.get $2
   if
    block $__inlined_func$assembly/identity/permissions/PermissionEvaluator#hasPermission$3806 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     i32.const 0
     i32.const 2
     i32.const 95
     i32.const 52992
     call $~lib/rt/__newArray
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 2
     i32.const 241
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $5
     i32.store offset=72
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load offset=4
     i32.store offset=76
     local.get $5
     i32.const 0
     local.get $2
     call $~lib/array/Array<~lib/array/Array<f64>>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 5776
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=44
     local.get $4
     call $assembly/identity/identity/Identity#getId
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $3
      call $~lib/array/Array<u32>#get:length
      local.get $0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=8
       local.get $3
       local.get $0
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $2
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 5776
       i32.store offset=4
       local.get $2
       i32.const 5776
       call $~lib/string/String.__eq
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 1
        br $__inlined_func$assembly/identity/permissions/PermissionEvaluator#hasPermission$3806
       end
       local.get $0
       i32.const 1
       i32.add
       local.set $0
       br $for-loop|0
      end
     end
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $5
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $5
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.tee $2
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 5776
       i32.store offset=4
       block $__inlined_func$assembly/identity/interfaces/IRole#hasPermission@override$3969
        local.get $2
        i32.const 8
        i32.sub
        i32.load
        i32.const 107
        i32.eq
        if
         block $__inlined_func$assembly/identity/permissions/Role#hasPermission$187 (result i32)
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 55544
          i32.lt_s
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          i32.const 0
          i32.const 20
          memory.fill
          i32.const 0
          local.set $0
          loop $for-loop|02
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $2
           i32.load offset=12
           local.tee $3
           i32.store
           local.get $3
           call $~lib/array/Array<u32>#get:length
           local.get $0
           i32.gt_s
           if
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.store offset=16
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.load offset=12
            local.tee $3
            i32.store offset=12
            local.get $3
            local.get $0
            call $~lib/array/Array<~lib/array/Array<i32>>#__get
            local.set $3
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store offset=8
            block $__inlined_func$assembly/identity/interfaces/IPermission#getId@override$3631
             local.get $3
             i32.const 8
             i32.sub
             i32.load
             i32.const 104
             i32.eq
             if
              local.get $3
              call $assembly/identity/identity/Identity#getId
              local.set $3
              br $__inlined_func$assembly/identity/interfaces/IPermission#getId@override$3631
             end
             unreachable
            end
            global.get $~lib/memory/__stack_pointer
            local.get $3
            i32.store
            global.get $~lib/memory/__stack_pointer
            i32.const 5776
            i32.store offset=4
            local.get $3
            i32.const 5776
            call $~lib/string/String.__eq
            if
             global.get $~lib/memory/__stack_pointer
             i32.const 20
             i32.add
             global.set $~lib/memory/__stack_pointer
             i32.const 1
             br $__inlined_func$assembly/identity/permissions/Role#hasPermission$187
            end
            local.get $0
            i32.const 1
            i32.add
            local.set $0
            br $for-loop|02
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 20
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
         end
         local.set $0
         br $__inlined_func$assembly/identity/interfaces/IRole#hasPermission@override$3969
        end
        unreachable
       end
       local.get $0
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 1
        br $__inlined_func$assembly/identity/permissions/PermissionEvaluator#hasPermission$3806
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 53024
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 44240
    i32.const 44272
    local.get $0
    select
    local.tee $0
    i32.store offset=12
    i32.const 53024
    local.get $0
    call $~lib/string/String.__concat
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    call $~lib/console/console.log
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 80
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/prime-mapping/IdentityPrimeMapper#getMapping (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/prime-mapping/IdentityPrimeMapping#getPrimeIdentity (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=4
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=12
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 243
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/resolang-processor/IdentityQuantumState#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 242
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  block $__inlined_func$assembly/identity/interfaces/IIdentity#getId@override$1
   local.get $0
   i32.const 8
   i32.sub
   i32.load
   i32.const 227
   i32.eq
   if
    local.get $0
    call $assembly/identity/identity/Identity#getId
    local.set $0
    br $__inlined_func$assembly/identity/interfaces/IIdentity#getId@override$1
   end
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=12
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 1
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/identity/prime-mapping/globalPrimeMapper
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  call $assembly/identity/prime-mapping/IdentityPrimeMapper#getMapping
  local.tee $0
  i32.store offset=16
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   call $assembly/identity/prime-mapping/IdentityPrimeMapping#getPrimeIdentity
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=32
   f64.store offset=16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/identity/resolang-processor/QuantumPermissionEvaluator#getPermissionFragment (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $3
  local.get $2
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 53088
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   i32.const 53088
   local.get $2
   call $~lib/string/String.__concat
  else
   i32.const 13360
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $3
  local.get $1
  local.get $4
  call $~lib/string/String.__concat
  local.tee $7
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $3
  local.get $7
  call $"~lib/map/Map<~lib/string/String,i32>#has"
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $8
   i32.store offset=20
   i32.const 2
   local.set $3
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $6
    f64.convert_i32_s
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    f64.convert_i32_s
    f64.const 5
    f64.min
    f64.lt
    if
     loop $while-continue|1
      i32.const 0
      local.set $5
      block $__inlined_func$assembly/core/math/isPrime$2677
       local.get $3
       i32.const 1
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2677
       i32.const 1
       local.set $5
       local.get $3
       i32.const 3
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2677
       i32.const 0
       local.set $5
       local.get $3
       i32.const 1
       i32.and
       if (result i32)
        local.get $3
        i32.const 3
        i32.rem_s
       else
        i32.const 0
       end
       i32.eqz
       br_if $__inlined_func$assembly/core/math/isPrime$2677
       i32.const 5
       local.set $4
       loop $while-continue|0
        local.get $4
        local.get $4
        i32.mul
        local.get $3
        i32.le_s
        if
         local.get $3
         local.get $4
         i32.rem_s
         if (result i32)
          local.get $3
          local.get $4
          i32.const 2
          i32.add
          i32.rem_s
         else
          i32.const 0
         end
         i32.eqz
         br_if $__inlined_func$assembly/core/math/isPrime$2677
         local.get $4
         i32.const 6
         i32.add
         local.set $4
         br $while-continue|0
        end
       end
       i32.const 1
       local.set $5
      end
      local.get $5
      i32.eqz
      local.get $3
      i32.const 1000
      i32.lt_u
      i32.and
      if
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $while-continue|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $8
     local.get $3
     local.get $1
     local.get $6
     call $~lib/string/String#charCodeAt
     f64.convert_i32_s
     f64.const 255
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|0
    end
   end
   local.get $2
   if
    i32.const 0
    local.set $6
    loop $for-loop|2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $6
     f64.convert_i32_s
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     f64.convert_i32_s
     f64.const 3
     f64.min
     f64.lt
     if
      loop $while-continue|3
       i32.const 0
       local.set $5
       block $__inlined_func$assembly/core/math/isPrime$2678
        local.get $3
        i32.const 1
        i32.le_s
        br_if $__inlined_func$assembly/core/math/isPrime$2678
        i32.const 1
        local.set $5
        local.get $3
        i32.const 3
        i32.le_s
        br_if $__inlined_func$assembly/core/math/isPrime$2678
        i32.const 0
        local.set $5
        local.get $3
        i32.const 1
        i32.and
        if (result i32)
         local.get $3
         i32.const 3
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$2678
        i32.const 5
        local.set $4
        loop $while-continue|01
         local.get $4
         local.get $4
         i32.mul
         local.get $3
         i32.le_s
         if
          local.get $3
          local.get $4
          i32.rem_s
          if (result i32)
           local.get $3
           local.get $4
           i32.const 2
           i32.add
           i32.rem_s
          else
           i32.const 0
          end
          i32.eqz
          br_if $__inlined_func$assembly/core/math/isPrime$2678
          local.get $4
          i32.const 6
          i32.add
          local.set $4
          br $while-continue|01
         end
        end
        i32.const 1
        local.set $5
       end
       local.get $5
       i32.eqz
       local.get $3
       i32.const 1000
       i32.lt_u
       i32.and
       if
        local.get $3
        i32.const 1
        i32.add
        local.set $3
        br $while-continue|3
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $8
      local.get $3
      local.get $2
      local.get $6
      call $~lib/string/String#charCodeAt
      f64.convert_i32_s
      f64.const 255
      f64.div
      f64.const 0.8
      f64.mul
      call $"~lib/map/Map<u32,f64>#set"
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|2
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 0.05
   f64.mul
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   f64.const 10
   local.get $9
   local.get $9
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $7
   local.get $1
   call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $0
  local.get $7
  call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/IdentityQuantumState#toFragment (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.load offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.set $2
   local.get $1
   i32.eqz
   if
    i32.const 43680
    i32.const 53120
    i32.const 48
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   i32.load
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $3
   local.get $2
   local.get $0
   f64.load offset=16
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   i32.load offset=4
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $3
   local.get $2
   local.get $0
   f64.load offset=16
   f64.const 0.9
   f64.mul
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   local.get $1
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $3
   local.get $1
   local.get $0
   f64.load offset=16
   f64.const 0.8
   f64.mul
   call $"~lib/map/Map<u32,f64>#set"
  else
   i32.const 2
   local.set $1
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $2
    i32.store offset=4
    local.get $5
    f64.convert_i32_s
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    f64.convert_i32_s
    f64.const 5
    f64.min
    f64.lt
    if
     loop $while-continue|1
      i32.const 0
      local.set $4
      block $__inlined_func$assembly/core/math/isPrime$2691
       local.get $1
       i32.const 1
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2691
       i32.const 1
       local.set $4
       local.get $1
       i32.const 3
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$2691
       i32.const 0
       local.set $4
       local.get $1
       i32.const 1
       i32.and
       if (result i32)
        local.get $1
        i32.const 3
        i32.rem_s
       else
        i32.const 0
       end
       i32.eqz
       br_if $__inlined_func$assembly/core/math/isPrime$2691
       i32.const 5
       local.set $2
       loop $while-continue|0
        local.get $2
        local.get $2
        i32.mul
        local.get $1
        i32.le_s
        if
         local.get $1
         local.get $2
         i32.rem_s
         if (result i32)
          local.get $1
          local.get $2
          i32.const 2
          i32.add
          i32.rem_s
         else
          i32.const 0
         end
         i32.eqz
         br_if $__inlined_func$assembly/core/math/isPrime$2691
         local.get $2
         i32.const 6
         i32.add
         local.set $2
         br $while-continue|0
        end
       end
       i32.const 1
       local.set $4
      end
      local.get $4
      i32.eqz
      local.get $1
      i32.const 1000
      i32.lt_u
      i32.and
      if
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $2
     i32.store offset=16
     local.get $3
     local.get $1
     local.get $2
     local.get $5
     call $~lib/string/String#charCodeAt
     f64.convert_i32_s
     f64.const 255
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<u32>#get:length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<u32>#get:length
  local.get $1
  i32.add
  f64.convert_i32_s
  f64.const 0.1
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $3
  local.get $0
  f64.load offset=16
  f64.const 50
  f64.mul
  local.get $6
  f64.const 10
  f64.mul
  local.get $6
  call $assembly/resolang/ResonantFragment#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $5
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $5
  i32.store offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   call $~lib/array/Array<u32>#get:length
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $4
    call $~lib/array/Array<u32>#__get
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $7
    i32.store
    local.get $7
    local.get $6
    call $"~lib/map/Map<u32,f64>#has"
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $7
     i32.store
     local.get $7
     local.get $6
     call $"~lib/map/Map<u32,f64>#get"
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $7
     i32.store
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     local.get $2
     local.get $8
     local.get $7
     local.get $6
     call $"~lib/map/Map<u32,f64>#get"
     f64.mul
     f64.add
     local.set $2
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  f64.const 1
  local.get $8
  local.get $1
  f64.load offset=8
  f64.sub
  f64.abs
  f64.const 1
  f64.add
  f64.div
  local.set $8
  local.get $3
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   f64.convert_i32_s
   f64.div
   local.get $8
   f64.mul
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
  f64.const 0.1
  f64.mul
 )
 (func $assembly/identity/resolang-processor/QuantumPermissionEvaluator#evaluatePermission (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  local.get $3
  call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#getPermissionFragment
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/identity/resolang-processor/IdentityQuantumState#toFragment
  local.tee $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $2
  call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
  f64.const 0.7
  f64.gt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/QuantumTransferProcessor#processTransfer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 2
   i32.const 32
   i32.const 53232
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $7
   local.get $8
   i32.const 0
   call $~lib/array/Array<i32>#__get
   f64.const 1
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 1
   call $~lib/array/Array<i32>#__get
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=12
   local.tee $10
   i32.store offset=12
   local.get $7
   local.get $9
   local.get $10
   i32.const 0
   call $~lib/string/String#charCodeAt
   f64.convert_i32_s
   f64.const 255
   f64.div
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 2
   call $~lib/array/Array<i32>#__get
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $10
   i32.store offset=12
   local.get $7
   local.get $9
   local.get $10
   i32.const 0
   call $~lib/string/String#charCodeAt
   f64.convert_i32_s
   f64.const 255
   f64.div
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 3
   call $~lib/array/Array<i32>#__get
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $7
   local.get $8
   f64.const 0.8
   f64.const 0.9
   local.get $1
   i32.load offset=4
   select
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   f64.const 50
   f64.const 25
   f64.const 0.5
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $8
   i32.store offset=20
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $4
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $4
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $7
     local.get $9
     call $assembly/identity/resolang-processor/IdentityQuantumState#constructor
     local.tee $9
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $10
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     i32.const 53376
     i32.const 53296
     local.get $1
     i32.load offset=4
     select
     local.tee $7
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=8
     local.tee $11
     i32.store offset=28
     local.get $10
     local.get $9
     local.get $7
     local.get $11
     call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#evaluatePermission
     if
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $9
      call $assembly/identity/resolang-processor/IdentityQuantumState#toFragment
      local.tee $7
      i32.store offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=8
      local.get $8
      local.get $7
      call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $5
      local.get $6
      f64.add
      local.set $5
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $3
   i32.const 0
   i32.gt_s
   if
    local.get $5
    local.get $3
    f64.convert_i32_s
    f64.div
    f64.const 0.6
    f64.gt
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $3
     local.get $1
     i32.load offset=68
     i32.ge_s
    else
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/resolang-processor/QuantumIdentityRecovery#recoverIdentity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $12
  i32.store
  i32.const 2
  local.set $5
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $8
   f64.convert_i32_s
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 5
   f64.min
   f64.lt
   if
    loop $while-continue|1
     i32.const 0
     local.set $7
     block $__inlined_func$assembly/core/math/isPrime$2722
      local.get $5
      i32.const 1
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$2722
      i32.const 1
      local.set $7
      local.get $5
      i32.const 3
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$2722
      i32.const 0
      local.set $7
      local.get $5
      i32.const 1
      i32.and
      if (result i32)
       local.get $5
       i32.const 3
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$2722
      i32.const 5
      local.set $6
      loop $while-continue|0
       local.get $6
       local.get $6
       i32.mul
       local.get $5
       i32.le_s
       if
        local.get $5
        local.get $6
        i32.rem_s
        if (result i32)
         local.get $5
         local.get $6
         i32.const 2
         i32.add
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$2722
        local.get $6
        i32.const 6
        i32.add
        local.set $6
        br $while-continue|0
       end
      end
      i32.const 1
      local.set $7
     end
     local.get $7
     i32.eqz
     local.get $5
     i32.const 1000
     i32.lt_u
     i32.and
     if
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $while-continue|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $12
    local.get $5
    local.get $1
    local.get $8
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    f64.const 0.5
    f64.mul
    call $"~lib/map/Map<u32,f64>#set"
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $12
  f64.const 25
  f64.const 50
  f64.const 0.7
  call $assembly/resolang/ResonantFragment#constructor
  local.tee $5
  i32.store offset=12
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $9
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    local.get $9
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $6
    local.get $7
    call $assembly/identity/resolang-processor/IdentityQuantumState#constructor
    local.tee $6
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    call $assembly/identity/resolang-processor/IdentityQuantumState#toFragment
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=24
    local.get $5
    local.get $7
    call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 53456
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=28
    local.get $10
    f64.const 0.3
    f64.gt
    i32.const 0
    local.get $7
    local.get $6
    i32.const 53456
    local.get $1
    call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#evaluatePermission
    select
    if
     local.get $11
     local.get $10
     f64.add
     local.set $11
     local.get $4
     i32.const 1
     i32.add
     local.set $4
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  local.get $3
  local.get $4
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load
  local.get $11
  local.get $4
  f64.convert_i32_s
  f64.div
  f64.lt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/identity/resolang-processor/QuantumAuditProcessor#createAuditEntry (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $8
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 32
  i32.const 53520
  call $~lib/rt/__newArray
  local.tee $7
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $7
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $8
  local.get $3
  local.get $1
  i32.load offset=16
  f64.convert_i32_s
  f64.const 10
  f64.div
  call $"~lib/map/Map<u32,f64>#set"
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=24
   local.tee $3
   i32.store offset=8
   local.get $2
   f64.convert_i32_s
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 3
   f64.min
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $2
    i32.const 1
    i32.add
    local.tee $3
    call $~lib/array/Array<i32>#__get
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=24
    local.tee $5
    i32.store offset=12
    local.get $8
    local.get $9
    local.get $5
    local.get $2
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    call $"~lib/map/Map<u32,f64>#set"
    local.get $3
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $2
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=32
   local.tee $3
   i32.store offset=8
   local.get $2
   f64.convert_i32_s
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 3
   f64.min
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $2
    i32.const 4
    i32.add
    call $~lib/array/Array<i32>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=32
    local.tee $5
    i32.store offset=12
    local.get $8
    local.get $3
    local.get $5
    local.get $2
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    call $"~lib/map/Map<u32,f64>#set"
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  f64.load offset=8
  f64.const 1e3
  call $~lib/math/NativeMath.mod
  f64.const 1e3
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $8
  local.get $7
  i32.const 7
  call $~lib/array/Array<i32>#__get
  local.get $4
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<~lib/array/Array<i32>>#__get
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=24
   local.get $8
   f64.const 30
   f64.const 30
   f64.const 0.3
   call $assembly/resolang/ResonantFragment#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $2
   local.get $3
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $8
   local.get $7
   i32.const 8
   call $~lib/array/Array<i32>#__get
   local.get $6
   call $"~lib/map/Map<u32,f64>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $8
  local.get $1
  f64.load offset=8
  f64.const 100
  call $~lib/math/NativeMath.mod
  local.get $6
  f64.const 100
  f64.mul
  f64.const 0.3
  call $assembly/resolang/ResonantFragment#constructor
  local.tee $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/identity/resolang-processor/IdentityResoLangProcessor#verifyAuditIntegrity (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.store
   block $__inlined_func$assembly/identity/resolang-processor/QuantumAuditProcessor#verifyChainIntegrity$124 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 24
    memory.fill
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load
    local.tee $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    i32.const 2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     br $__inlined_func$assembly/identity/resolang-processor/QuantumAuditProcessor#verifyChainIntegrity$124
    end
    i32.const 1
    local.set $0
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $3
     i32.store
     local.get $3
     call $~lib/array/Array<u32>#get:length
     local.get $0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load
      local.tee $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $0
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.tee $3
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load
      local.tee $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      local.get $0
      i32.const 1
      i32.sub
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.tee $4
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load offset=4
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=16
      local.get $4
      local.get $3
      call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load
      local.tee $4
      i32.store
      local.get $1
      local.get $4
      i32.const 71
      call $"~lib/map/Map<u32,f64>#has"
      if (result f64)
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load
       local.tee $3
       i32.store
       local.get $3
       i32.const 71
       call $"~lib/map/Map<u32,f64>#get"
      else
       f64.const 0
      end
      f64.sub
      f64.abs
      f64.const 0.1
      f64.gt
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$assembly/identity/resolang-processor/QuantumAuditProcessor#verifyChainIntegrity$124
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/identity/resolang-processor/quantumVerifyAuditIntegrity (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/identity/resolang-processor/globalResoLangProcessor
  local.tee $0
  i32.store
  local.get $0
  call $assembly/identity/resolang-processor/IdentityResoLangProcessor#verifyAuditIntegrity
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quantum/prime-state/PrimeState#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 245
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  call $"~lib/map/Map<u32,f64>#constructor"
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 14
  i32.const 53584
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 247
  i32.const 53616
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/Complex#constructor (param $0 f64) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 246
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $2
  local.get $1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quantum/prime-state/PrimeState#clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 28
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $assembly/quantum/prime-state/PrimeState#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $4
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $1
     call $~lib/array/Array<u32>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load
     local.tee $6
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $6
     local.get $5
     local.get $7
     local.get $5
     call $"~lib/map/Map<u32,f64>#get"
     call $"~lib/map/Map<u32,f64>#set"
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=16
   i32.const 0
   global.set $~argumentsLength
   block $__inlined_func$~lib/array/Array<u32>#slice@varargs$125 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     i32.load offset=12
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.le_s
     select
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.get $5
     i32.sub
     local.tee $4
     i32.const 0
     local.get $4
     i32.const 0
     i32.gt_s
     select
     local.tee $4
     i32.const 2
     i32.const 14
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $6
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $6
     i32.load offset=4
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $7
     local.get $1
     i32.load offset=4
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $4
     i32.const 2
     i32.shl
     memory.copy
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     br $__inlined_func$~lib/array/Array<u32>#slice@varargs$125
    end
    br $folding-inner1
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store offset=16
   local.get $1
   call $~lib/array/Array<u32>#get:length
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 247
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=12
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    i32.const 3376
    i32.const 4240
    i32.const 70
    i32.const 60
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $6
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=12
   local.get $4
   local.get $6
   i32.store
   local.get $4
   local.get $6
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $6
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $5
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.store offset=8
   local.get $2
   local.get $4
   i32.const 0
   call $~lib/rt/itcms/__link
   i32.const 0
   local.set $1
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     local.get $1
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.tee $4
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=8
     local.tee $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $4
     f64.load
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=16
     local.get $3
     local.get $4
     f64.load offset=8
     call $assembly/types/Complex#constructor
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $5
     local.get $1
     local.get $4
     call $~lib/array/Array<~lib/array/Array<f64>>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   f64.load offset=16
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $2
   local.get $0
   f64.load offset=24
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/Complex#magnitude (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  f64.load
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $2
  local.get $0
  f64.load offset=8
  f64.mul
  f64.add
  f64.sqrt
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quantum/prime-state/PrimeState#measure (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  call $~lib/math/NativeMath.random
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $5
  i32.store
  block $folding-inner0
   local.get $5
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $5
     i32.store
     local.get $5
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $5
      i32.store offset=4
      local.get $5
      local.get $1
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $5
      call $assembly/types/Complex#magnitude
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $5
      i32.store offset=4
      local.get $5
      local.get $1
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $3
      local.get $2
      local.get $4
      local.get $5
      call $assembly/types/Complex#magnitude
      f64.mul
      f64.add
      local.tee $2
      f64.lt
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $0
       i32.store
       local.get $0
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $0
       br $folding-inner0
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 0
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $0
     i32.store offset=4
     local.get $1
     local.get $0
     call $~lib/array/Array<u32>#get:length
     i32.const 1
     i32.sub
     call $~lib/array/Array<u32>#__get
    else
     i32.const 2
    end
    local.set $0
    br $folding-inner0
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store
    local.get $5
    call $~lib/set/Set<~lib/string/String>#get:size
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $5
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $6
     i32.store offset=12
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store
      local.get $6
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store
       local.get $6
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $7
       i32.store
       local.get $7
       local.get $5
       call $"~lib/map/Map<u32,f64>#has"
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load
        local.tee $7
        i32.store
        local.get $3
        local.get $2
        local.get $7
        local.get $5
        call $"~lib/map/Map<u32,f64>#get"
        local.tee $2
        local.get $2
        f64.mul
        f64.add
        local.tee $2
        f64.lt
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 16
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $5
         return
        end
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store
     local.get $6
     call $~lib/array/Array<u32>#get:length
     i32.const 0
     i32.gt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store
      local.get $6
      i32.const 0
      call $~lib/array/Array<u32>#__get
     else
      i32.const 2
     end
     local.set $0
     br $folding-inner0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quantum/prime-state/PrimeState#syncArraysFromMap (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 0
  i32.const 2
  i32.const 14
  i32.const 53648
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  i32.const 0
  i32.const 2
  i32.const 247
  i32.const 53680
  call $~lib/rt/__newArray
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $3
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  call $"~lib/map/Map<u32,f64>#keys"
  local.tee $3
  i32.store offset=8
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   call $~lib/array/Array<u32>#get:length
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $1
    call $~lib/array/Array<u32>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $5
    i32.store
    local.get $5
    local.get $4
    call $~lib/array/Array<i32>#push
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store
    local.get $5
    local.get $4
    call $"~lib/map/Map<u32,f64>#get"
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $4
    i32.store
    local.get $2
    f64.const 0
    call $assembly/types/Complex#constructor
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $4
    local.get $5
    call $~lib/array/Array<~lib/array/Array<i32>>#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quantum/prime-state/PrimeState#normalize (param $0 i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $4
   i32.store
   local.get $4
   call $~lib/array/Array<u32>#get:length
   i32.const 0
   i32.gt_s
   if
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store
     local.get $4
     call $~lib/array/Array<u32>#get:length
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $4
      i32.store offset=4
      local.get $4
      local.get $1
      call $~lib/array/Array<~lib/array/Array<i32>>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      f64.load
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $3
      local.get $4
      f64.load
      f64.mul
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      f64.load offset=8
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $3
      local.get $5
      local.get $4
      f64.load offset=8
      f64.mul
      f64.add
      local.set $3
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $2
      local.get $3
      f64.add
      local.set $2
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store
    local.get $4
    call $~lib/set/Set<~lib/string/String>#get:size
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $4
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $4
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $4
     i32.store offset=12
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $7
       i32.store
       local.get $2
       local.get $7
       local.get $6
       call $"~lib/map/Map<u32,f64>#get"
       local.tee $2
       local.get $2
       f64.mul
       f64.add
       local.set $2
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
   end
   local.get $2
   f64.const 0
   f64.gt
   if
    f64.const 1
    local.get $2
    f64.sqrt
    f64.div
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $1
     loop $for-loop|2
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $4
      i32.store
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $4
       i32.store offset=4
       local.get $4
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $6
       i32.store offset=8
       local.get $6
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=4
       local.get $4
       local.get $6
       f64.load
       local.get $2
       f64.mul
       f64.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $4
       i32.store offset=4
       local.get $4
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $6
       i32.store offset=8
       local.get $6
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=4
       local.get $4
       local.get $6
       f64.load offset=8
       local.get $2
       f64.mul
       f64.store offset=8
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|2
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     local.get $1
     call $"~lib/map/Map<~lib/string/String,f64>#clear"
     i32.const 0
     local.set $1
     loop $for-loop|00
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      local.tee $4
      i32.store
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=8
       local.tee $4
       i32.store offset=4
       local.get $4
       local.get $1
       call $~lib/array/Array<~lib/array/Array<i32>>#__get
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store
       local.get $4
       call $assembly/types/Complex#magnitude
       local.tee $2
       f64.const 0
       f64.gt
       if
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load
        local.tee $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=8
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=4
        local.tee $6
        i32.store offset=4
        local.get $4
        local.get $6
        local.get $1
        call $~lib/array/Array<u32>#__get
        local.get $2
        call $"~lib/map/Map<u32,f64>#set"
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $6
     i32.store offset=20
     i32.const 0
     local.set $1
     loop $for-loop|3
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store
      local.get $6
      call $~lib/array/Array<u32>#get:length
      local.get $1
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store
       local.get $6
       local.get $1
       call $~lib/array/Array<u32>#__get
       local.set $7
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $4
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $8
       i32.store offset=4
       local.get $4
       local.get $7
       local.get $8
       local.get $7
       call $"~lib/map/Map<u32,f64>#get"
       local.get $2
       f64.mul
       call $"~lib/map/Map<u32,f64>#set"
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|3
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/quantum/prime-state/PrimeState#syncArraysFromMap
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quantum/prime-state/PrimeState.fromAmplitudes (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  call $assembly/quantum/prime-state/PrimeState#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/quantum/prime-state/PrimeState#syncArraysFromMap
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/quantum/prime-state/PrimeState#normalize
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quantum/prime-operators/factorizationOperator (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $1
  i32.store
  i32.const 2
  local.set $2
  loop $while-continue|0
   local.get $2
   local.get $2
   i32.mul
   local.get $0
   i32.le_u
   if
    loop $while-continue|1
     local.get $0
     local.get $2
     i32.rem_u
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      local.get $1
      local.get $2
      call $"~lib/map/Map<u32,f64>#has"
      if (result f64)
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       local.get $1
       local.get $2
       call $"~lib/map/Map<u32,f64>#get"
      else
       f64.const 0
      end
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      local.get $1
      local.get $2
      local.get $3
      f64.const 1
      f64.add
      call $"~lib/map/Map<u32,f64>#set"
      local.get $0
      local.get $2
      i32.div_u
      local.set $0
      br $while-continue|1
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.const 1
  i32.gt_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   local.get $0
   f64.const 1
   call $"~lib/map/Map<u32,f64>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/Quaternion#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load
  i32.const 1
  call $assembly/utils/toFixed
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=8
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 53712
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=8
   i32.const 1
   call $assembly/utils/toFixed
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 53712
   local.get $2
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $2
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=16
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 53712
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=16
   i32.const 1
   call $assembly/utils/toFixed
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   i32.const 53712
   local.get $3
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $3
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  f64.load offset=24
  f64.const 0
  f64.ge
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 53712
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   f64.load offset=24
   i32.const 1
   call $assembly/utils/toFixed
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   i32.const 53712
   local.get $0
   call $~lib/string/String#concat
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=24
   i32.const 1
   call $assembly/utils/toFixed
  end
  local.tee $0
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=32
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=40
  global.get $~lib/memory/__stack_pointer
  i32.const 53872
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  i32.const 53876
  local.get $1
  i32.store
  i32.const 53872
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 53872
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  i32.const 53880
  local.get $2
  i32.store
  i32.const 53872
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 53872
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  i32.const 53888
  local.get $3
  i32.store
  i32.const 53872
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 53872
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  i32.const 53896
  local.get $0
  i32.store
  i32.const 53872
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  i32.const 53872
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13360
  i32.store offset=8
  i32.const 53872
  call $~lib/staticarray/StaticArray<~lib/string/String>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/SplitPrimeFactorizer.createQuaternion (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store offset=8
    local.get $0
    i32.const 12
    i32.rem_u
    i32.const 1
    i32.ne
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    local.get $0
    f64.convert_i32_u
    f64.sqrt
    i32.trunc_sat_f64_s
    local.set $7
    i32.const 1
    local.set $1
    block $__inlined_func$assembly/quaternion/SplitPrimeFactorizer.factorizeGaussian$3824
     loop $for-loop|0
      local.get $1
      local.get $7
      i32.le_s
      if
       local.get $0
       local.get $1
       local.get $1
       i32.mul
       i32.sub
       local.tee $8
       f64.convert_i32_u
       f64.sqrt
       i32.trunc_sat_f64_s
       local.tee $3
       local.get $3
       i32.mul
       local.get $8
       i32.eq
       if
        global.get $~lib/memory/__stack_pointer
        call $"~lib/map/Map<~lib/string/String,i32>#constructor"
        local.tee $2
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 54064
        i32.store offset=8
        local.get $2
        i32.const 54064
        local.get $1
        call $"~lib/map/Map<~lib/string/String,i32>#set"
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store offset=4
        global.get $~lib/memory/__stack_pointer
        i32.const 54096
        i32.store offset=8
        local.get $2
        i32.const 54096
        local.get $3
        call $"~lib/map/Map<~lib/string/String,i32>#set"
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$assembly/quaternion/SplitPrimeFactorizer.factorizeGaussian$3824
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    local.get $6
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store offset=8
    local.get $0
    f64.convert_i32_u
    f64.sqrt
    i32.trunc_sat_f64_s
    local.set $7
    i32.const 1
    local.set $1
    block $__inlined_func$assembly/quaternion/SplitPrimeFactorizer.factorizeEisenstein$3825
     loop $for-loop|00
      local.get $1
      local.get $7
      i32.le_s
      if
       i32.const 1
       local.set $3
       loop $for-loop|1
        local.get $3
        local.get $7
        i32.le_s
        if
         local.get $1
         local.get $1
         i32.mul
         local.get $1
         local.get $3
         i32.mul
         i32.add
         local.get $3
         local.get $3
         i32.mul
         i32.add
         local.get $0
         i32.eq
         if
          global.get $~lib/memory/__stack_pointer
          call $"~lib/map/Map<~lib/string/String,i32>#constructor"
          local.tee $0
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 54128
          i32.store offset=8
          local.get $0
          i32.const 54128
          local.get $1
          call $"~lib/map/Map<~lib/string/String,i32>#set"
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.store offset=4
          global.get $~lib/memory/__stack_pointer
          i32.const 54160
          i32.store offset=8
          local.get $0
          i32.const 54160
          local.get $3
          call $"~lib/map/Map<~lib/string/String,i32>#set"
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          br $__inlined_func$assembly/quaternion/SplitPrimeFactorizer.factorizeEisenstein$3825
         end
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|1
        end
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|00
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
    end
    local.get $6
    local.get $0
    i32.store offset=4
    local.get $0
    i32.eqz
    local.get $2
    i32.eqz
    i32.or
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 54064
    i32.store offset=12
    local.get $2
    i32.const 54064
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    f64.convert_i32_s
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 54096
    i32.store offset=12
    local.get $2
    i32.const 54096
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    f64.convert_i32_s
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 54128
    i32.store offset=12
    local.get $0
    i32.const 54128
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    f64.convert_i32_s
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 54160
    i32.store offset=12
    local.get $5
    local.get $9
    local.get $4
    local.get $0
    i32.const 54160
    call $"~lib/map/Map<~lib/string/String,i32>#get"
    f64.convert_i32_s
    local.tee $4
    f64.const 0.5
    f64.mul
    f64.sub
    local.get $4
    f64.const 1.7320508075688772
    f64.mul
    f64.const 0.5
    f64.mul
    call $assembly/quaternion/Quaternion#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/quaternion/QuaternionicResonanceField#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 206
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 207
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 3
   call $~lib/typedarray/Float64Array#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   f64.const 6.283185307179586
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 0
   f64.const 0.1
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 1
   f64.const 0.05
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=4
   local.get $1
   i32.const 2
   f64.const 0.02
   call $~lib/typedarray/Float64Array#__set
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find" (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     i32.load
     i32.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#set" (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i32.const -1028477379
   i32.mul
   i32.const 374761397
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $8
   call $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find"
   local.tee $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $9
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $7
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $11
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $6
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $6
      local.get $11
      i32.ne
      if
       local.get $11
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $11
        i32.load
        local.tee $12
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $11
        i32.load offset=4
        local.tee $5
        i32.store offset=8
        local.get $3
        local.get $5
        i32.store offset=4
        local.get $3
        local.get $10
        local.get $9
        local.get $12
        i32.const -1028477379
        i32.mul
        i32.const 374761397
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $5
        i32.const 15
        i32.shr_u
        local.get $5
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $5
        i32.const 13
        i32.shr_u
        local.get $5
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $5
        i32.const 16
        i32.shr_u
        local.get $5
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load
        i32.store offset=8
        local.get $5
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $11
       i32.const 12
       i32.add
       local.set $11
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=12
     local.get $0
     local.get $10
     i32.store
     local.get $0
     local.get $10
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $9
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $7
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $1
    local.get $8
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/QuaternionicResonanceField#computeField (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 32
   memory.fill
   global.get $~lib/memory/__stack_pointer
   f64.const 0
   f64.const 0
   f64.const 0
   f64.const 0
   call $assembly/quaternion/Quaternion#constructor
   local.tee $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $5
   i32.store offset=4
   local.get $5
   call $~lib/set/Set<~lib/string/String>#get:size
   f64.convert_i32_s
   local.tee $7
   f64.const 0
   f64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 32
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $9
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.set $10
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   i32.load offset=8
   local.set $11
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.load offset=16
   local.tee $12
   call $~lib/array/Array<u32>#constructor
   local.tee $5
   i32.store offset=4
   loop $for-loop|0
    local.get $4
    local.get $12
    i32.lt_s
    if
     local.get $11
     local.get $4
     i32.const 12
     i32.mul
     i32.add
     local.tee $13
     i32.load offset=8
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store
      local.get $5
      local.get $3
      local.get $13
      i32.load
      call $~lib/array/Array<i32>#__set
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store
   local.get $5
   local.get $3
   call $~lib/array/Array<u32>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   local.get $5
   i32.store offset=12
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/array/Array<u32>#get:length
    local.get $8
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $8
     call $~lib/array/Array<u32>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $10
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     local.get $10
     local.get $3
     local.get $3
     i32.const -1028477379
     i32.mul
     i32.const 374761397
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $3
     local.get $3
     i32.const 15
     i32.shr_u
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $3
     local.get $3
     i32.const 13
     i32.shr_u
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $3
     local.get $3
     i32.const 16
     i32.shr_u
     i32.xor
     call $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#find"
     local.tee $3
     i32.eqz
     if
      i32.const 41472
      i32.const 41536
      i32.const 105
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.load offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $10
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=8
     local.get $2
     f64.mul
     local.set $6
     i32.const 0
     local.set $3
     loop $for-loop|01
      local.get $3
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       local.get $0
       f64.load offset=8
       local.get $3
       i32.const 1
       i32.add
       local.tee $4
       f64.convert_i32_s
       local.tee $14
       f64.mul
       local.set $15
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $11
       i32.store
       local.get $6
       local.get $11
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       local.get $15
       local.get $2
       f64.mul
       local.get $1
       local.get $14
       f64.mul
       f64.add
       call $~lib/math/NativeMath.sin
       f64.mul
       f64.add
       local.set $6
       local.get $4
       local.set $3
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     f64.const 0
     local.get $6
     f64.const 0
     f64.const 0
     call $assembly/quaternion/Quaternion#constructor
     local.tee $3
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=24
     local.get $3
     call $assembly/quaternion/Quaternion#exp
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $4
     local.get $10
     local.get $3
     call $assembly/quaternion/Quaternion#multiply
     local.tee $3
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load
     f64.add
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=8
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load offset=8
     f64.add
     local.set $15
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=16
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $6
     local.get $3
     f64.load offset=16
     f64.add
     local.set $16
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=4
     local.get $9
     f64.load offset=24
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $14
     local.get $15
     local.get $16
     local.get $6
     local.get $3
     f64.load offset=24
     f64.add
     call $assembly/quaternion/Quaternion#constructor
     local.tee $9
     i32.store
     local.get $8
     i32.const 1
     i32.add
     local.set $8
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load
   f64.const 1
   local.get $7
   f64.sqrt
   f64.div
   local.tee $1
   f64.mul
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load offset=8
   local.get $1
   f64.mul
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   f64.load offset=16
   local.get $1
   f64.mul
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $2
   local.get $6
   local.get $7
   local.get $9
   f64.load offset=24
   local.get $1
   f64.mul
   call $assembly/quaternion/Quaternion#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/quaternion/QuaternionicResonanceField#computeFidelity (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $1
  f64.load
  f64.mul
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=8
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=8
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=16
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load offset=24
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $3
  local.get $1
  f64.load offset=24
  f64.mul
  f64.add
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $0
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $3
  local.get $1
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $1
  call $assembly/quaternion/Quaternion#norm
  f64.mul
  f64.div
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quaternion/QuaternionicResonanceField#optimizeParameters (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.gt_s
   if
    block $for-break0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     f64.const 0
     f64.const 1
     call $assembly/quaternion/QuaternionicResonanceField#computeField
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     local.get $3
     local.get $1
     call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
     f64.const 0.99
     f64.gt
     br_if $for-break0
     i32.const 0
     local.set $3
     loop $for-loop|1
      local.get $3
      i32.const 3
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $8
       i32.store offset=8
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       f64.const 0
       f64.const 1
       call $assembly/quaternion/QuaternionicResonanceField#computeField
       local.tee $7
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $7
       local.get $1
       call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $8
       i32.store offset=8
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const -2e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       f64.const 0
       f64.const 1
       call $assembly/quaternion/QuaternionicResonanceField#computeField
       local.tee $7
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $7
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $7
       local.get $1
       call $assembly/quaternion/QuaternionicResonanceField#computeFidelity
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $8
       i32.store offset=8
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       f64.const 1e-06
       f64.add
       call $~lib/typedarray/Float64Array#__set
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $7
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $8
       i32.store offset=8
       local.get $7
       local.get $3
       local.get $8
       local.get $3
       call $~lib/typedarray/Float64Array#__get
       local.get $5
       local.get $6
       f64.sub
       f64.const 2e-06
       f64.div
       f64.const 0.01
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|1
      end
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/quaternion/TwistDynamics#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 209
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.1
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.05
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.const 0.01
  f64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/quaternion/TwistDynamics#getTwistAngle (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quaternion/QuaternionicProjector#constructor (param $0 f64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 210
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  local.get $0
  f64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quantum/entropy-evolution/EntropyEvolution#evolve (param $0 i32) (param $1 f64) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  f64.load
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $2
  local.get $0
  f64.load offset=8
  f64.neg
  local.get $1
  f64.mul
  call $~lib/math/NativeMath.exp
  f64.mul
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $"~lib/map/Map<f64,f64>#find" (param $0 i32) (param $1 f64) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  i32.load
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=16
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     local.get $1
     local.get $0
     f64.load
     f64.eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $"~lib/map/Map<f64,f64>#set" (param $0 i32) (param $1 f64) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   i64.reinterpret_f64
   local.tee $5
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.const 374761401
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const -1028477379
   i32.mul
   i32.add
   i32.const 17
   i32.rotl
   i32.const 668265263
   i32.mul
   local.tee $3
   local.get $3
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $3
   local.get $3
   i32.const 13
   i32.shr_u
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $3
   local.get $3
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $9
   call $"~lib/map/Map<f64,f64>#find"
   local.tee $3
   if
    local.get $3
    local.get $2
    f64.store offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $0
    i32.load offset=12
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     i32.load offset=20
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $3
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
     else
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $10
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $11
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $8
     i32.const 24
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     i32.load offset=8
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $12
     local.get $0
     i32.load offset=16
     i32.const 24
     i32.mul
     i32.add
     local.set $7
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $7
      local.get $12
      i32.ne
      if
       local.get $12
       i32.load offset=16
       i32.const 1
       i32.and
       i32.eqz
       if
        local.get $3
        local.get $12
        f64.load
        local.tee $6
        f64.store
        local.get $3
        local.get $12
        f64.load offset=8
        f64.store offset=8
        local.get $3
        local.get $11
        local.get $10
        local.get $6
        i64.reinterpret_f64
        local.tee $5
        i32.wrap_i64
        i32.const -1028477379
        i32.mul
        i32.const 374761401
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.get $5
        i64.const 32
        i64.shr_u
        i32.wrap_i64
        i32.const -1028477379
        i32.mul
        i32.add
        i32.const 17
        i32.rotl
        i32.const 668265263
        i32.mul
        local.tee $13
        local.get $13
        i32.const 15
        i32.shr_u
        i32.xor
        i32.const -2048144777
        i32.mul
        local.tee $13
        local.get $13
        i32.const 13
        i32.shr_u
        i32.xor
        i32.const -1028477379
        i32.mul
        local.tee $13
        local.get $13
        i32.const 16
        i32.shr_u
        i32.xor
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $13
        i32.load
        i32.store offset=16
        local.get $13
        local.get $3
        i32.store
        local.get $3
        i32.const 24
        i32.add
        local.set $3
       end
       local.get $12
       i32.const 24
       i32.add
       local.set $12
       br $while-continue|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=12
     local.get $0
     local.get $11
     i32.store
     local.get $0
     local.get $11
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $10
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=12
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $0
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     local.get $8
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 24
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    f64.store
    local.get $3
    local.get $2
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $3
    local.get $4
    local.get $9
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=16
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/prime-state-exports/setPrimeStateAmplitudes (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   i32.load offset=8
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $9
   call $~lib/array/Array<f64>#constructor
   local.tee $4
   i32.store offset=4
   loop $for-loop|0
    local.get $3
    local.get $9
    i32.lt_s
    if
     local.get $8
     local.get $3
     i32.const 24
     i32.mul
     i32.add
     local.tee $10
     i32.load offset=16
     i32.const 1
     i32.and
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store
      local.get $4
      local.get $2
      local.get $10
      f64.load
      call $~lib/array/Array<f64>#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   local.get $2
   call $~lib/array/Array<f64>#set:length
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $4
   i32.store offset=8
   i32.const 0
   local.set $2
   loop $for-loop|00
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $2
     call $~lib/array/Array<f64>#__get
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     local.get $6
     local.get $6
     i64.reinterpret_f64
     local.tee $11
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.const 374761401
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.get $11
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.tee $3
     i32.const 15
     i32.shr_u
     local.get $3
     i32.xor
     i32.const -2048144777
     i32.mul
     local.tee $3
     i32.const 13
     i32.shr_u
     local.get $3
     i32.xor
     i32.const -1028477379
     i32.mul
     local.tee $3
     i32.const 16
     i32.shr_u
     local.get $3
     i32.xor
     call $"~lib/map/Map<f64,f64>#find"
     local.tee $3
     i32.eqz
     if
      i32.const 41472
      i32.const 41536
      i32.const 105
      i32.const 17
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     f64.load offset=8
     local.set $12
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     local.get $6
     i32.trunc_sat_f64_u
     local.get $12
     call $"~lib/map/Map<u32,f64>#set"
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=12
   local.get $0
   local.get $5
   i32.store
   local.get $0
   local.get $5
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/processor/IdentityQuantumState#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.const 252
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  block $__inlined_func$assembly/identity/interfaces/IIdentity#getId@override$2
   local.get $0
   i32.const 8
   i32.sub
   i32.load
   i32.const 227
   i32.eq
   if
    local.get $0
    call $assembly/identity/identity/Identity#getId
    local.set $0
    br $__inlined_func$assembly/identity/interfaces/IIdentity#getId@override$2
   end
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=8
  local.get $1
  local.get $0
  i32.store offset=12
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__link
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  f64.const 1
  f64.store offset=16
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/identity/prime-mapping/globalPrimeMapper
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  call $assembly/identity/prime-mapping/IdentityPrimeMapper#getMapping
  local.tee $0
  i32.store offset=16
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $0
   call $assembly/identity/prime-mapping/IdentityPrimeMapping#getPrimeIdentity
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $1
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   f64.load offset=32
   f64.store offset=16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/runtime/processor/IdentityQuantumState#toFragment (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=8
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $2
   local.get $0
   f64.load offset=16
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load offset=4
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $2
   local.get $0
   f64.load offset=16
   f64.const 0.9
   f64.mul
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $1
   i32.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $1
   local.get $0
   f64.load offset=16
   f64.const 0.8
   f64.mul
   call $"~lib/map/Map<u32,f64>#set"
  else
   i32.const 2
   local.set $1
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $2
    i32.store offset=4
    local.get $5
    f64.convert_i32_s
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    f64.convert_i32_s
    f64.const 5
    f64.min
    f64.lt
    if
     loop $while-continue|1
      i32.const 0
      local.set $4
      block $__inlined_func$assembly/core/math/isPrime$3227
       local.get $1
       i32.const 1
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$3227
       i32.const 1
       local.set $4
       local.get $1
       i32.const 3
       i32.le_s
       br_if $__inlined_func$assembly/core/math/isPrime$3227
       i32.const 0
       local.set $4
       local.get $1
       i32.const 1
       i32.and
       if (result i32)
        local.get $1
        i32.const 3
        i32.rem_s
       else
        i32.const 0
       end
       i32.eqz
       br_if $__inlined_func$assembly/core/math/isPrime$3227
       i32.const 5
       local.set $2
       loop $while-continue|0
        local.get $2
        local.get $2
        i32.mul
        local.get $1
        i32.le_s
        if
         local.get $1
         local.get $2
         i32.rem_s
         if (result i32)
          local.get $1
          local.get $2
          i32.const 2
          i32.add
          i32.rem_s
         else
          i32.const 0
         end
         i32.eqz
         br_if $__inlined_func$assembly/core/math/isPrime$3227
         local.get $2
         i32.const 6
         i32.add
         local.set $2
         br $while-continue|0
        end
       end
       i32.const 1
       local.set $4
      end
      local.get $4
      i32.eqz
      local.get $1
      i32.const 1000
      i32.lt_u
      i32.and
      if
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $2
     i32.store offset=12
     local.get $3
     local.get $1
     local.get $2
     local.get $5
     call $~lib/string/String#charCodeAt
     f64.convert_i32_s
     f64.const 255
     f64.div
     call $"~lib/map/Map<u32,f64>#set"
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<u32>#get:length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store offset=4
  local.get $2
  call $~lib/array/Array<u32>#get:length
  local.get $1
  i32.add
  f64.convert_i32_s
  f64.const 0.1
  f64.mul
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  local.get $3
  local.get $0
  f64.load offset=16
  f64.const 50
  f64.mul
  local.get $6
  f64.const 10
  f64.mul
  local.get $6
  call $assembly/resolang/ResonantFragment#constructor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/processor/QuantumPermissionEvaluator#evaluatePermission (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $2
  local.get $3
  call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#getPermissionFragment
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $assembly/runtime/processor/IdentityQuantumState#toFragment
  local.tee $1
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  local.get $2
  call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
  f64.const 0.7
  f64.gt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/processor/QuantumTransferProcessor#processTransfer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 40
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $7
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 10
   i32.const 2
   i32.const 32
   i32.const 54288
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $7
   local.get $8
   i32.const 0
   call $~lib/array/Array<i32>#__get
   f64.const 1
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 1
   call $~lib/array/Array<i32>#__get
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=12
   local.tee $10
   i32.store offset=12
   local.get $7
   local.get $9
   local.get $10
   i32.const 0
   call $~lib/string/String#charCodeAt
   f64.convert_i32_s
   f64.const 255
   f64.div
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 2
   call $~lib/array/Array<i32>#__get
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $10
   i32.store offset=12
   local.get $7
   local.get $9
   local.get $10
   i32.const 0
   call $~lib/string/String#charCodeAt
   f64.convert_i32_s
   f64.const 255
   f64.div
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=12
   local.get $8
   i32.const 3
   call $~lib/array/Array<i32>#__get
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   local.get $7
   local.get $8
   f64.const 0.8
   f64.const 0.9
   local.get $1
   i32.load offset=4
   select
   call $"~lib/map/Map<u32,f64>#set"
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   f64.const 50
   f64.const 25
   f64.const 0.5
   call $assembly/resolang/ResonantFragment#constructor
   local.tee $8
   i32.store offset=20
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    call $~lib/array/Array<u32>#get:length
    local.get $4
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=12
     local.get $2
     local.get $4
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $7
     local.get $9
     call $assembly/runtime/processor/IdentityQuantumState#constructor
     local.tee $9
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $10
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     i32.const 53376
     i32.const 53296
     local.get $1
     i32.load offset=4
     select
     local.tee $7
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=8
     local.tee $11
     i32.store offset=28
     local.get $10
     local.get $9
     local.get $7
     local.get $11
     call $assembly/runtime/processor/QuantumPermissionEvaluator#evaluatePermission
     if
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $9
      call $assembly/runtime/processor/IdentityQuantumState#toFragment
      local.tee $7
      i32.store offset=36
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 55544
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store
      global.get $~lib/memory/__stack_pointer
      i64.const 0
      i64.store offset=8
      global.get $~lib/memory/__stack_pointer
      call $assembly/runtime/processor/QuantumPermissionEvaluator#constructor
      local.tee $9
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=12
      local.get $8
      local.get $7
      call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
      local.set $6
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $5
      local.get $6
      f64.add
      local.set $5
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $3
   i32.const 0
   i32.gt_s
   if
    local.get $5
    local.get $3
    f64.convert_i32_s
    f64.div
    f64.const 0.6
    f64.gt
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $3
     local.get $1
     i32.load offset=68
     i32.ge_s
    else
     i32.const 0
    end
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 40
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/runtime/processor/QuantumIdentityRecovery#recoverIdentity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 36
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $12
  i32.store
  i32.const 2
  local.set $5
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $8
   f64.convert_i32_s
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 5
   f64.min
   f64.lt
   if
    loop $while-continue|1
     i32.const 0
     local.set $7
     block $__inlined_func$assembly/core/math/isPrime$3250
      local.get $5
      i32.const 1
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$3250
      i32.const 1
      local.set $7
      local.get $5
      i32.const 3
      i32.le_s
      br_if $__inlined_func$assembly/core/math/isPrime$3250
      i32.const 0
      local.set $7
      local.get $5
      i32.const 1
      i32.and
      if (result i32)
       local.get $5
       i32.const 3
       i32.rem_s
      else
       i32.const 0
      end
      i32.eqz
      br_if $__inlined_func$assembly/core/math/isPrime$3250
      i32.const 5
      local.set $6
      loop $while-continue|0
       local.get $6
       local.get $6
       i32.mul
       local.get $5
       i32.le_s
       if
        local.get $5
        local.get $6
        i32.rem_s
        if (result i32)
         local.get $5
         local.get $6
         i32.const 2
         i32.add
         i32.rem_s
        else
         i32.const 0
        end
        i32.eqz
        br_if $__inlined_func$assembly/core/math/isPrime$3250
        local.get $6
        i32.const 6
        i32.add
        local.set $6
        br $while-continue|0
       end
      end
      i32.const 1
      local.set $7
     end
     local.get $7
     i32.eqz
     local.get $5
     i32.const 1000
     i32.lt_u
     i32.and
     if
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $while-continue|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $12
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $12
    local.get $5
    local.get $1
    local.get $8
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    f64.const 0.5
    f64.mul
    call $"~lib/map/Map<u32,f64>#set"
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $12
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $12
  f64.const 25
  f64.const 50
  f64.const 0.7
  call $assembly/resolang/ResonantFragment#constructor
  local.tee $5
  i32.store offset=12
  loop $for-loop|2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.get $9
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $2
    local.get $9
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $6
    local.get $7
    call $assembly/runtime/processor/IdentityQuantumState#constructor
    local.tee $6
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    call $assembly/runtime/processor/IdentityQuantumState#toFragment
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=24
    local.get $5
    local.get $7
    call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $7
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 53456
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=28
    local.get $10
    f64.const 0.3
    f64.gt
    i32.const 0
    local.get $7
    local.get $6
    i32.const 53456
    local.get $1
    call $assembly/runtime/processor/QuantumPermissionEvaluator#evaluatePermission
    select
    if
     local.get $11
     local.get $10
     f64.add
     local.set $11
     local.get $4
     i32.const 1
     i32.add
     local.set $4
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  local.get $3
  local.get $4
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=4
  local.get $0
  f64.load
  local.get $11
  local.get $4
  f64.convert_i32_s
  f64.div
  f64.lt
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/runtime/processor/QuantumAuditProcessor#createAuditEntry (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill
  global.get $~lib/memory/__stack_pointer
  call $"~lib/map/Map<u32,f64>#constructor"
  local.tee $8
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 32
  i32.const 54352
  call $~lib/rt/__newArray
  local.tee $7
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $7
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $8
  local.get $3
  local.get $1
  i32.load offset=16
  f64.convert_i32_s
  f64.const 10
  f64.div
  call $"~lib/map/Map<u32,f64>#set"
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=24
   local.tee $3
   i32.store offset=8
   local.get $2
   f64.convert_i32_s
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 3
   f64.min
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $2
    i32.const 1
    i32.add
    local.tee $3
    call $~lib/array/Array<i32>#__get
    local.set $9
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=24
    local.tee $5
    i32.store offset=12
    local.get $8
    local.get $9
    local.get $5
    local.get $2
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    call $"~lib/map/Map<u32,f64>#set"
    local.get $3
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $2
  loop $for-loop|1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=32
   local.tee $3
   i32.store offset=8
   local.get $2
   f64.convert_i32_s
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   f64.convert_i32_s
   f64.const 3
   f64.min
   f64.lt
   if
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=12
    local.get $7
    local.get $2
    i32.const 4
    i32.add
    call $~lib/array/Array<i32>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=32
    local.tee $5
    i32.store offset=12
    local.get $8
    local.get $3
    local.get $5
    local.get $2
    call $~lib/string/String#charCodeAt
    f64.convert_i32_s
    f64.const 255
    f64.div
    call $"~lib/map/Map<u32,f64>#set"
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  f64.load offset=8
  f64.const 1e3
  call $~lib/math/NativeMath.mod
  f64.const 1e3
  f64.div
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=12
  local.get $8
  local.get $7
  i32.const 7
  call $~lib/array/Array<i32>#__get
  local.get $4
  call $"~lib/map/Map<u32,f64>#set"
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  local.get $2
  call $~lib/array/Array<u32>#get:length
  i32.const 0
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   call $~lib/array/Array<u32>#get:length
   i32.const 1
   i32.sub
   call $~lib/array/Array<~lib/array/Array<i32>>#__get
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=24
   local.get $8
   f64.const 30
   f64.const 30
   f64.const 0.3
   call $assembly/resolang/ResonantFragment#constructor
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $2
   local.get $3
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#calculateResonance
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=12
   local.get $8
   local.get $7
   i32.const 8
   call $~lib/array/Array<i32>#__get
   local.get $6
   call $"~lib/map/Map<u32,f64>#set"
  end
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $8
  local.get $1
  f64.load offset=8
  f64.const 100
  call $~lib/math/NativeMath.mod
  local.get $6
  f64.const 100
  f64.mul
  f64.const 0.3
  call $assembly/resolang/ResonantFragment#constructor
  local.tee $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 3376
   i32.const 3424
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.set $4
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 1
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy
  end
  local.get $4
  local.get $1
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store
  local.get $2
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $5
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/object/Object#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i64.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 13840
   return
  end
  i64.const 0
  local.get $0
  i64.sub
  local.get $0
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.tee $1
  select
  local.tee $0
  i64.const 4294967295
  i64.le_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.wrap_i64
   local.tee $4
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $4
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $4
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $4
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $4
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $4
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $4
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $4
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $4
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $3
   i32.const 1
   i32.shl
   local.get $1
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $1
   local.get $2
   i32.add
   local.get $4
   local.get $3
   call $~lib/util/number/utoa32_dec_lut
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $0
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $0
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $0
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $0
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $0
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $0
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $0
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $3
   i32.const 1
   i32.shl
   local.get $1
   i32.add
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $1
   local.get $2
   i32.add
   local.get $0
   local.get $3
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $1
  if
   local.get $2
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/entropy-viz/getGlobalSampler (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $assembly/entropy-viz/globalSampler
  i32.eqz
  if
   call $assembly/entropy-viz/initializeEntropyViz
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/entropy-viz/globalSampler
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 43680
   i32.const 45952
   i32.const 265
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/entropy-viz/getGlobalTracker (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $assembly/entropy-viz/globalTracker
  i32.eqz
  if
   call $assembly/entropy-viz/initializeEntropyViz
  end
  global.get $~lib/memory/__stack_pointer
  global.get $assembly/entropy-viz/globalTracker
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 43680
   i32.const 45952
   i32.const 272
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/core/serialization/escapeJSON (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/core/serialization/escapeJSON
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/core/constants/generateUniqueId (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   local.set $3
   call $~lib/math/NativeMath.random
   f64.const 1e4
   f64.mul
   f64.floor
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $~lib/util/number/itoa64
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $~lib/number/F64#toString
   local.tee $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 15456
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   i32.const 15456
   local.get $0
   i32.store
   i32.const 15456
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 15456
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=16
   i32.const 15464
   local.get $1
   i32.store
   i32.const 15456
   local.get $1
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 15456
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   i32.const 15472
   local.get $2
   i32.store
   i32.const 15456
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 15456
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=16
   i32.const 15456
   call $~lib/staticarray/StaticArray<~lib/string/String>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/resolang/setCurrentNode (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  global.set $assembly/resolang/currentNode
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/operators/tensor (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/operators/tensor
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/operators/collapse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $7
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $7
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store offset=4
     local.get $1
     local.get $4
     call $"~lib/map/Map<u32,f64>#get"
     local.tee $3
     local.get $3
     f64.mul
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $5
     local.get $4
     local.get $3
     call $"~lib/map/Map<u32,f64>#set"
     local.get $8
     local.get $3
     f64.add
     local.set $8
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   call $~lib/math/NativeMath.random
   local.get $8
   f64.mul
   local.set $3
   f64.const 0
   local.set $8
   i32.const 0
   local.set $2
   loop $for-loop|1
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store offset=4
    local.get $7
    call $~lib/array/Array<u32>#get:length
    local.get $6
    i32.gt_s
    if
     block $for-break1
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store offset=4
      local.get $7
      local.get $6
      call $~lib/array/Array<u32>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $3
      local.get $8
      local.get $5
      local.get $1
      call $"~lib/map/Map<u32,f64>#get"
      f64.add
      local.tee $8
      f64.lt
      if
       local.get $1
       local.set $2
       br $for-break1
      end
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|1
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $4
   i32.store offset=16
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    local.get $2
    f64.const 1
    call $"~lib/map/Map<u32,f64>#set"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $1
   i32.store offset=8
   local.get $1
   i32.const 0
   call $~lib/staticarray/StaticArray<f64>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store offset=8
   local.get $4
   local.get $3
   local.get $0
   i32.const 1
   call $~lib/staticarray/StaticArray<f64>#__get
   f64.const 0
   call $assembly/resolang/ResonantFragment#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/operators/rotatePhase (param $0 i32) (param $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store
    local.get $3
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $2
     local.get $4
     local.get $2
     call $~lib/array/Array<f64>#__get
     local.get $1
     f64.add
     f64.const 6.283185307179586
     call $~lib/math/NativeMath.mod
     call $~lib/array/Array<f64>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $3
     i32.store
     local.get $3
     local.get $2
     call $~lib/array/Array<f64>#__get
     f64.const 0
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $4
      i32.store offset=4
      local.get $3
      local.get $2
      local.get $4
      local.get $2
      call $~lib/array/Array<f64>#__get
      f64.const 6.283185307179586
      f64.add
      call $~lib/array/Array<f64>#__set
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   f64.load offset=16
   local.get $1
   f64.abs
   f64.const 62.83185307179586
   f64.div
   f64.sub
   f64.const 0
   f64.max
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/operators/linkEntanglement (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/operators/linkEntanglement
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/operators/route (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/operators/route
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/operators/coherence (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/operators/coherence
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/operators/entropy (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/functionalBlocks/stabilize (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/functionalBlocks/stabilize
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/functionalBlocks/teleport (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/functionalBlocks/teleport
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $export:assembly/functionalBlocks/entangled (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/operators/coherence
   f64.const 0.8
   f64.gt
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    call $assembly/operators/coherence
    f64.const 0.8
    f64.gt
   else
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/functionalBlocks/observe (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   i32.const 45312
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=8
   i32.const 45312
   local.get $1
   call $~lib/string/String#concat
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/console/console.log
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=16
   f64.const 0.7
   f64.gt
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=8
   else
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    f64.load offset=16
    i32.const 4
    call $assembly/utils/toFixed
    local.tee $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 45632
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    i32.const 45636
    local.get $1
    i32.store
    i32.const 45632
    local.get $1
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 45632
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    i32.const 45644
    local.get $0
    i32.store
    i32.const 45632
    local.get $0
    i32.const 1
    call $~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    i32.const 45632
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 13360
    i32.store offset=8
    i32.const 45632
    call $~lib/staticarray/StaticArray<~lib/string/String>#join
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/console/console.log
    i32.const 0
    call $~lib/array/Array<f64>#constructor
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-entanglement/transmitQuaternionicMessage (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $2
   call $assembly/quaternion-entanglement/QuaternionicAgent#encodeMessage
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/QuaternionicAgent#entangleWith
   local.tee $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   block $__inlined_func$assembly/quaternion-entanglement/transmitQuaternionicMessage$3867
    local.get $3
    local.get $4
    i32.const 100
    f64.const 0.01
    call $assembly/quaternion-entanglement/QuaternionicSynchronizer#runAdaptiveSynchronization
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$assembly/quaternion-entanglement/transmitQuaternionicMessage$3867
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    f64.const 0.1
    call $assembly/quaternion-entanglement/QuaternionicAgent#applySymbolicCollapse
    drop
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    call $assembly/quaternion-entanglement/QuaternionicAgent#decodeMessage
    local.tee $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $0
    local.get $2
    call $~lib/string/String.__eq
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/utils/entropyRate (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/utils/entropyRate
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/utils/align (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/array/Array<u32>#get:length
   call $~lib/array/Array<f64>#constructor
   local.tee $1
   i32.store offset=4
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $1
     local.get $2
     f64.const 0
     call $~lib/array/Array<f64>#__set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/utils/generateSymbol (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/array/Array<u32>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     local.get $1
     call $~lib/array/Array<u32>#__get
     local.get $2
     i32.const 31
     i32.mul
     i32.add
     i32.const 1000003
     i32.rem_u
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   i32.const 13360
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=4
   loop $for-loop|1
    local.get $3
    i32.const 3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 45872
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 45872
     i32.store offset=16
     i32.const 45872
     local.get $2
     i32.const 45868
     i32.load
     i32.const 1
     i32.shr_u
     i32.rem_u
     call $~lib/string/String#charAt
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $4
     local.get $1
     local.get $0
     call $~lib/string/String.__concat
     local.tee $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 45872
     i32.store
     local.get $2
     f64.convert_i32_u
     i32.const 45868
     i32.load
     i32.const 1
     i32.shr_u
     f64.convert_i32_s
     f64.div
     f64.floor
     i32.trunc_sat_f64_u
     local.set $2
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/core/math-optimized/simdArrayMul (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   call $assembly/core/math-operations/arrayMul
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/core/math-optimized/simdArrayAdd (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   call $assembly/core/math-operations/arrayAdd
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/core/math-optimized/simdDotProduct (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/core/math-operations/dotProduct
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/core/math-operations/arrayMul (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/math-operations/arrayMul
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/core/math-operations/arrayAdd (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/core/math-operations/arrayAdd
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/core/math-operations/dotProduct (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/core/math-operations/dotProduct
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/core/math-operations/vectorMagnitude (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/core/math-operations/vectorMagnitude
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/core/math-operations/normalizeVector (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/core/math-operations/vectorMagnitude
   local.tee $3
   f64.const 0
   f64.ne
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $~lib/typedarray/Float64Array#get:length
    f64.convert_i32_s
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $4
    local.get $1
    call $~lib/typedarray/Float64Array#get:length
    f64.convert_i32_s
    f64.min
    local.set $4
    loop $for-loop|0
     local.get $2
     f64.convert_i32_s
     local.get $4
     f64.lt
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=4
      local.get $1
      local.get $2
      local.get $0
      local.get $2
      call $~lib/typedarray/Float64Array#__get
      local.get $3
      f64.div
      call $~lib/typedarray/Float64Array#__set
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/core/math-performance/profileMathOperation (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/math-performance/globalMathProfiler
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
   local.tee $2
   i32.store offset=12
   local.get $2
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.const 55
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    call $~lib/object/Object#constructor
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    f64.const 0
    f64.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    f64.const 0
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    local.get $2
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load
    local.tee $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $3
    local.get $0
    local.get $2
    call $"~lib/map/Map<~lib/string/String,assembly/identity/interfaces/IKYCProvider>#set"
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $assembly/examples/polynomial-convergence-validator/PrecisionTimer#start
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   global.set $~argumentsLength
   local.get $1
   i32.load
   call_indirect (type $7)
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/core/math-performance/globalMathProfiler
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $0
   call $"~lib/map/Map<~lib/string/String,assembly/core/math-performance/SimpleTimer>#get"
   local.tee $2
   i32.store offset=12
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store
    local.get $2
    call $~lib/bindings/dom/Date.now
    i64.trunc_sat_f64_s
    f64.convert_i64_s
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=4
    local.tee $2
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $2
    local.get $0
    call $"~lib/map/Map<~lib/string/String,i32>#has"
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=4
     local.tee $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $2
     local.get $0
     call $"~lib/map/Map<~lib/string/String,i32>#get"
    else
     i32.const 0
    end
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=4
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $1
    local.get $0
    local.get $2
    i32.const 1
    i32.add
    call $"~lib/map/Map<~lib/string/String,i32>#set"
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/identity/resolang-processor/quantumCheckPermission@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/identity/resolang-processor/globalResoLangProcessor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/identity/resolang-processor/IdentityQuantumState#constructor
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=16
   local.get $3
   local.get $0
   local.get $1
   local.get $2
   call $assembly/identity/resolang-processor/QuantumPermissionEvaluator#evaluatePermission
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/identity/resolang-processor/quantumProcessTransfer (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/identity/resolang-processor/globalResoLangProcessor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $2
   local.get $0
   local.get $1
   call $assembly/identity/resolang-processor/QuantumTransferProcessor#processTransfer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/identity/resolang-processor/quantumRecoverIdentity@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 3
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/identity/resolang-processor/globalResoLangProcessor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $3
   local.get $0
   local.get $1
   local.get $2
   call $assembly/identity/resolang-processor/QuantumIdentityRecovery#recoverIdentity
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/identity/resolang-processor/quantumCreateAuditEntry (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/identity/resolang-processor/globalResoLangProcessor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=12
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $1
   local.get $0
   call $assembly/identity/resolang-processor/QuantumAuditProcessor#createAuditEntry
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum/prime-memory/primeSpectrum (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $4
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store offset=8
     local.get $1
     local.get $5
     local.get $3
     local.get $5
     call $"~lib/map/Map<u32,f64>#get"
     call $"~lib/map/Map<u32,f64>#set"
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum/prime-memory/symbolicCollapse@varargs (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    f64.const 1
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$assembly/quantum/prime-memory/symbolicCollapse$146 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store
    local.get $3
    call $~lib/array/Array<u32>#get:length
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     call $assembly/quantum/prime-state/PrimeState#clone
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/quantum/prime-memory/symbolicCollapse$146
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $assembly/quantum/prime-state/PrimeState#measure
    local.set $0
    global.get $~lib/memory/__stack_pointer
    call $"~lib/map/Map<u32,f64>#constructor"
    local.tee $3
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    local.get $3
    local.get $0
    f64.const 1
    call $"~lib/map/Map<u32,f64>#set"
    i32.const 2
    local.set $0
    loop $while-continue|0
     local.get $0
     local.get $0
     i32.mul
     local.get $1
     i32.le_u
     if
      local.get $1
      local.get $0
      i32.rem_u
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       local.get $3
       local.get $0
       call $"~lib/map/Map<u32,f64>#has"
       if (result f64)
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store
        local.get $3
        local.get $0
        call $"~lib/map/Map<u32,f64>#get"
       else
        f64.const 0
       end
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store
       local.get $3
       local.get $0
       local.get $4
       local.get $2
       f64.const 0.1
       f64.mul
       f64.add
       call $"~lib/map/Map<u32,f64>#set"
      end
      loop $while-continue|1
       local.get $1
       local.get $0
       i32.rem_u
       i32.eqz
       if
        local.get $1
        local.get $0
        i32.div_u
        local.set $1
        br $while-continue|1
       end
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|0
     end
    end
    local.get $1
    i32.const 1
    i32.gt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     local.get $1
     call $"~lib/map/Map<u32,f64>#has"
     if (result f64)
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $3
      local.get $1
      call $"~lib/map/Map<u32,f64>#get"
     else
      f64.const 0
     end
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     local.get $3
     local.get $1
     local.get $4
     local.get $2
     f64.const 0.1
     f64.mul
     f64.add
     call $"~lib/map/Map<u32,f64>#set"
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $3
    call $assembly/quantum/prime-state/PrimeState.fromAmplitudes
    local.tee $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    call $assembly/quantum/prime-state/PrimeState#normalize
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum/prime-operators/primeOperator (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   call $"~lib/map/Map<u32,f64>#constructor"
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $"~lib/map/Map<u32,f64>#keys"
   local.tee $4
   i32.store offset=12
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<u32>#get:length
    local.get $2
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $2
     call $~lib/array/Array<u32>#__get
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $6
     i32.store offset=4
     local.get $6
     local.get $5
     call $"~lib/map/Map<u32,f64>#has"
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $6
      i32.store offset=4
      local.get $6
      local.get $5
      call $"~lib/map/Map<u32,f64>#get"
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=4
      local.get $1
      local.get $5
      local.get $3
      local.get $5
      f64.convert_i32_u
      f64.mul
      call $"~lib/map/Map<u32,f64>#set"
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionMultiply (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/quaternion/Quaternion#multiply
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionConjugate (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#conjugate
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionNorm (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#norm
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionNormalize (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#normalize
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionToBlochVector (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#toBlochVector
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionExp (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#exp
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionRotate (param $0 i32) (param $1 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/quaternion/Quaternion#rotate
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionToString (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/quaternionToJSON (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$assembly/quaternion-exports/quaternionToJSON$147 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 48
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 48
     memory.fill
     i32.const 0
     global.set $~argumentsLength
     global.get $~lib/memory/__stack_pointer
     call $assembly/core/serialization/JSONBuilder#constructor@varargs
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=44
     local.get $1
     call $assembly/core/serialization/JSONBuilder#startObject
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=36
     global.get $~lib/memory/__stack_pointer
     i32.const 53936
     i32.store offset=40
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=44
     local.get $1
     i32.const 53936
     local.get $0
     f64.load
     call $assembly/core/serialization/JSONBuilder#addNumberField
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     i32.const 53968
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=36
     local.get $1
     i32.const 53968
     local.get $0
     f64.load offset=8
     call $assembly/core/serialization/JSONBuilder#addNumberField
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 54000
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=28
     local.get $1
     i32.const 54000
     local.get $0
     f64.load offset=16
     call $assembly/core/serialization/JSONBuilder#addNumberField
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 54032
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     local.get $1
     i32.const 54032
     local.get $0
     f64.load offset=24
     call $assembly/core/serialization/JSONBuilder#addNumberField
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     local.get $0
     call $assembly/core/serialization/JSONBuilder#endObject
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     call $assembly/core/serialization/JSONBuilder#build
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 48
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/quaternion-exports/quaternionToJSON$147
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/addPrimeToResonanceField (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$assembly/quaternion/QuaternionicResonanceField#addPrime$3827 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    call $assembly/quaternion/SplitPrimeFactorizer.createQuaternion
    local.tee $2
    i32.store
    local.get $2
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$assembly/quaternion/QuaternionicResonanceField#addPrime$3827
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=8
    local.get $0
    local.get $1
    local.get $2
    call $"~lib/map/Map<u32,assembly/quaternion/Quaternion>#set"
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/computeResonanceField (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   call $assembly/quaternion/QuaternionicResonanceField#computeField
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/optimizeResonanceFieldParameters@varargs (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 100
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   call $assembly/quaternion/QuaternionicResonanceField#optimizeParameters
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/computeTwistAngleFromQuaternion (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=8
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   f64.load offset=8
   f64.mul
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=16
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $3
   local.get $1
   f64.load offset=16
   f64.mul
   f64.add
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   f64.load offset=24
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $3
   local.get $1
   f64.load offset=24
   f64.mul
   f64.add
   f64.sqrt
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   f64.load
   call $~lib/math/NativeMath.atan2
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/evolveTwistDynamics (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/quaternion/TwistDynamics#evolve
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/checkTwistCollapse (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/quaternion/TwistDynamics#checkCollapse
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/getTwistAngle (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion/TwistDynamics#getTwistAngle
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/setTwistAngle (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   f64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/projectQuaternion (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/quaternion/QuaternionicProjector#project
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/computeQuaternionEigenvalues (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   block $__inlined_func$assembly/quaternion-exports/computeQuaternionEigenvalues$148 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 2
     call $~lib/typedarray/Float64Array#constructor
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     f64.load offset=8
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $2
     local.get $1
     f64.load offset=8
     f64.mul
     f64.sqrt
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $0
     f64.load
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     local.get $2
     local.get $0
     f64.load
     f64.mul
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     f64.load offset=16
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $2
     local.get $1
     f64.load offset=16
     f64.mul
     local.set $6
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     f64.load offset=24
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $5
     local.get $6
     local.get $2
     local.get $1
     f64.load offset=24
     f64.mul
     f64.add
     f64.mul
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     i32.const 0
     local.get $4
     local.get $2
     f64.add
     call $~lib/typedarray/Float64Array#__set
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $3
     i32.const 1
     local.get $4
     f64.neg
     local.get $2
     f64.sub
     call $~lib/typedarray/Float64Array#__set
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     br $__inlined_func$assembly/quaternion-exports/computeQuaternionEigenvalues$148
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/allocateQuaternionFromPool (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   block $__inlined_func$assembly/quaternion/QuaternionPool#allocate$3835 (result i32)
    local.get $1
    call $~lib/array/Array<u32>#get:length
    i32.const 0
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $0
     i32.store
     local.get $0
     call $~lib/array/Array<assembly/core/object-pool/PoolableExtendedGCDResult>#pop
     br $__inlined_func$assembly/quaternion/QuaternionPool#allocate$3835
    end
    f64.const 0
    f64.const 0
    f64.const 0
    f64.const 0
    call $assembly/quaternion/Quaternion#constructor
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/deallocateQuaternionToPool (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store
   local.get $2
   call $~lib/array/Array<u32>#get:length
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $2
   local.get $0
   i32.load offset=4
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    f64.const 0
    f64.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    f64.const 0
    f64.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    f64.const 0
    f64.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    f64.const 0
    f64.store offset=24
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/array/Array<i32>>#push
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/createEntangledQuaternionPair@varargs (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    f64.const 0.5
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/evolveEntangledPair (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#evolve
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/computeEntangledPairFidelity (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#computeFidelity
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/optimizeEntanglement@varargs (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 100
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   call $assembly/quaternion-entanglement/EntangledQuaternionPair#optimizeEntanglement
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/measureQuaternionPhaseDifference (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $1
   local.get $2
   call $assembly/quaternion-entanglement/QuaternionicSynchronizer#measurePhaseDifference
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/synchronizeQuaternions@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (param $6 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       i32.const 5
       i32.sub
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     f64.const 0
     local.set $5
    end
    f64.const 0.01
    local.set $6
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   local.get $4
   local.get $5
   local.get $6
   call $assembly/quaternion-entanglement/QuaternionicSynchronizer#synchronize
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/runAdaptiveSynchronization@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       i32.const 2
       i32.sub
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     i32.const 100
     local.set $2
    end
    f64.const 0.01
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/quaternion-entanglement/QuaternionicSynchronizer#runAdaptiveSynchronization
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/createQuaternionicAgent (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.const 204
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=16
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/quaternion/QuaternionicResonanceField#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $assembly/quaternion/TwistDynamics#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   f64.const 0.01
   call $assembly/quaternion/QuaternionicProjector#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=12
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   call $"~lib/map/Map<~lib/string/String,f64>#constructor"
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   local.get $1
   local.get $0
   i32.store offset=16
   local.get $1
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/__link
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/encodeQuaternionicMessage (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/QuaternionicAgent#encodeMessage
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/decodeQuaternionicMessage (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/quaternion-entanglement/QuaternionicAgent#decodeMessage
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/entangleQuaternionicAgents@varargs (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $1of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $1of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/QuaternionicAgent#entangleWith
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/applyQuaternionicSymbolicCollapse@varargs (param $0 i32) (param $1 f64) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    f64.const 0.1
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/quaternion-entanglement/QuaternionicAgent#applySymbolicCollapse
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/getQuaternionicAgentQuaternion (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/identity/identity/Identity#getId
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/getQuaternionicAgentEntanglementFidelity (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $assembly/quaternion/Quaternion#norm
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/getQuaternionW (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quaternion/TwistDynamics#getTwistAngle
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quaternion-exports/getQuaternionZ (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=24
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quaternion-exports/setQuaternionComponents (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $2
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $3
   f64.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $4
   f64.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum-exports/holographicEncodingEncode (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result f64)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$assembly/quantum-exports/holographicEncodingEncode$153 (result f64)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 24
     memory.fill
     local.get $1
     f64.const 0.1
     f64.mul
     call $~lib/math/NativeMath.sin
     local.get $2
     f64.const 0.1
     f64.mul
     call $~lib/math/NativeMath.cos
     f64.add
     f64.const 2
     f64.add
     local.get $3
     f64.const 1
     f64.add
     f64.div
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/number/F64#toString
     local.tee $4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $2
     call $~lib/number/F64#toString
     local.tee $5
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 54224
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=20
     i32.const 54224
     local.get $4
     i32.store
     i32.const 54224
     local.get $4
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 54224
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=20
     i32.const 54232
     local.get $5
     i32.store
     i32.const 54224
     local.get $5
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 54224
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 13360
     i32.store offset=20
     i32.const 54224
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $0
     local.get $4
     local.get $3
     call $"~lib/map/Map<~lib/string/String,f64>#set"
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     br $__inlined_func$assembly/quantum-exports/holographicEncodingEncode$153
    end
    br $folding-inner1
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum-exports/holographicEncodingDecode (param $0 i32) (param $1 f64) (param $2 f64) (result f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$assembly/quantum-exports/holographicEncodingDecode$154 (result f64)
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 24
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/number/F64#toString
     local.tee $5
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $2
     call $~lib/number/F64#toString
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 54256
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=12
     i32.const 54256
     local.get $5
     i32.store
     i32.const 54256
     local.get $5
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 54256
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     i32.const 54264
     local.get $3
     i32.store
     i32.const 54256
     local.get $3
     i32.const 1
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     i32.const 54256
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 13360
     i32.store offset=12
     local.get $4
     i32.const 54256
     call $~lib/staticarray/StaticArray<~lib/string/String>#join
     local.tee $3
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $4
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     block $__inlined_func$assembly/quantum/holographic-encoding/HolographicEncoding#decode$3845
      local.get $4
      local.get $3
      call $"~lib/map/Map<~lib/string/String,f64>#has"
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=20
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $0
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       local.get $0
       local.get $3
       call $"~lib/map/Map<~lib/string/String,f64>#get"
       local.set $1
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$assembly/quantum/holographic-encoding/HolographicEncoding#decode$3845
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      f64.const 0
      local.set $1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     br $__inlined_func$assembly/quantum-exports/holographicEncodingDecode$154
    end
    br $folding-inner1
   end
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum-exports/holographicEncodingClear (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $"~lib/map/Map<~lib/string/String,f64>#clear"
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum-exports/entropyEvolutionEvolve (param $0 i32) (param $1 f64) (result f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/quantum/entropy-evolution/EntropyEvolution#evolve
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/quantum-exports/entropyEvolutionCollapseProbability (param $0 i32) (param $1 f64) (result f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   f64.const 1
   local.get $0
   local.get $1
   call $assembly/quantum/entropy-evolution/EntropyEvolution#evolve
   call $~lib/math/NativeMath.exp
   f64.const 1
   f64.add
   f64.div
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/complex-exports/complexAdd (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $1
   f64.load
   f64.add
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   f64.load offset=8
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $2
   local.get $3
   local.get $1
   f64.load offset=8
   f64.add
   call $assembly/types/Complex#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/complex-exports/complexMultiply (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   block $__inlined_func$assembly/complex-exports/complexMultiply$151 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $2
     local.get $1
     f64.load
     f64.mul
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=8
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $2
     local.get $3
     local.get $1
     f64.load offset=8
     f64.mul
     f64.sub
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $2
     local.get $1
     f64.load offset=8
     f64.mul
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $0
     f64.load offset=8
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store
     local.get $3
     local.get $2
     local.get $4
     local.get $1
     f64.load
     f64.mul
     f64.add
     call $assembly/types/Complex#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$assembly/complex-exports/complexMultiply$151
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/complex-exports/complexMagnitude (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/types/Complex#magnitude
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/prime-state-exports/getPrimeStateAmplitudes (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   block $__inlined_func$assembly/prime-state-exports/getPrimeStateAmplitudes$152 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    block $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 20
     memory.fill
     global.get $~lib/memory/__stack_pointer
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 55544
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.const 251
     call $~lib/rt/itcms/__new
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     i32.const 16
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $1
     local.get $4
     i32.store
     local.get $1
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     i32.const 3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     i32.const 96
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     local.get $1
     local.get $4
     i32.store offset=8
     local.get $1
     local.get $4
     i32.const 0
     call $~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     i32.const 4
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     i32.const 0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $1
     i32.const 0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $3
     local.get $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $3
     call $"~lib/map/Map<u32,f64>#keys"
     local.tee $4
     i32.store offset=12
     loop $for-loop|0
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      local.get $4
      call $~lib/array/Array<u32>#get:length
      local.get $2
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=4
       local.get $4
       local.get $2
       call $~lib/array/Array<u32>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $5
       i32.store offset=8
       local.get $1
       local.get $3
       f64.convert_i32_u
       local.get $5
       local.get $3
       call $"~lib/map/Map<u32,f64>#get"
       call $"~lib/map/Map<f64,f64>#set"
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     br $__inlined_func$assembly/prime-state-exports/getPrimeStateAmplitudes$152
    end
    br $folding-inner1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/prime-state-exports/getPrimeStateCoefficients (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=8
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/prime-state-exports/setPrimeStateAmplitudes (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 55544
  i32.lt_s
  if
   i32.const 88336
   i32.const 88384
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/prime-state-exports/setPrimeStateAmplitudes
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/pnp-exports/createState (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/pnp-exports/isStateSatisfied (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicState#isSatisfied
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/pnp-exports/getSolutionEncoding (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=16
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/pnp-exports/encodeProblem (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer.encodeGenericProblem
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/pnp-exports/solveProblem (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#solve
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/pnp-exports/verifyConvergence (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/examples/universal-symbolic-transformer/UniversalSymbolicTransformer#verifyPolynomialConvergence
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/checkPermission@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 3
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 24
   memory.fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/runtime/processor/IdentityQuantumState#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/runtime/processor/QuantumPermissionEvaluator#evaluatePermission
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/processTransferRequest (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   call $assembly/runtime/processor/QuantumTransferProcessor#processTransfer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/recoverIdentity@varargs (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 3
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 3
    local.set $3
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $0
   local.get $1
   local.get $2
   local.get $3
   call $assembly/runtime/processor/QuantumIdentityRecovery#recoverIdentity
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/createAuditEntry (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $assembly/runtime/processor/QuantumAuditProcessor#createAuditEntry
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/verifyAuditIntegrity (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $assembly/identity/resolang-processor/IdentityResoLangProcessor#verifyAuditIntegrity
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/runtime-exports/syncWithNetwork (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 55544
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$assembly/runtime/processor/IdentityResoLangProcessor#syncWithNetwork$3862 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 55544
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    local.get $0
    i32.load offset=16
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$assembly/runtime/processor/IdentityResoLangProcessor#syncWithNetwork$3862
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 88336
  i32.const 88384
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
)
